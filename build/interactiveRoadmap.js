(()=>{var n={21:n=>{"use strict";n.exports=require("fs")},38:(n,e,t)=>{var a=t(881),i=t(644);n.exports=function(){var n=new a({allErrors:!0,strict:!1,strictSchema:!1});return i(n),n}},52:n=>{n.exports={getRoadmapStyles:function(){return"\n    /* Roadmap Container Styles */\n    .roadmap-container {\n      margin-top: 20px;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      overflow: hidden;\n      background-color: #fff;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n    }\n    \n    /* Timeline Controls */\n    .roadmap-timeline-controls {\n      padding: 10px;\n      background-color: #f5f5f5;\n      border-bottom: 1px solid #ddd;\n      display: flex;\n      align-items: center;\n    }\n    \n    .start-date-picker {\n      margin-left: 10px;\n      padding: 5px;\n      border-radius: 4px;\n      border: 1px solid #ccc;\n    }\n    \n    /* Timeline Styles */\n    .roadmap-timeline {\n      position: relative;\n      overflow-x: auto;\n    }\n    \n    /* Header Styles */\n    .roadmap-header {\n      display: flex;\n      border-bottom: 1px solid #ddd;\n      background-color: #f9f9f9;\n    }\n    \n    .roadmap-header-lane {\n      flex: 0 0 150px;\n      padding: 10px;\n      font-weight: bold;\n      border-right: 1px solid #ddd;\n    }\n    \n    .roadmap-header-quarter {\n      flex: 0 0 100px;\n      padding: 10px;\n      text-align: center;\n      font-weight: bold;\n      border-right: 1px solid #eee;\n    }\n    \n    /* Row Styles */\n    .roadmap-row {\n      display: flex;\n      border-bottom: 1px solid #ddd;\n      min-height: 60px;\n    }\n    \n    .roadmap-lane-title {\n      flex: 0 0 150px;\n      padding: 10px;\n      font-weight: bold;\n      background-color: #f5f5f5;\n      border-right: 1px solid #ddd;\n      display: flex;\n      align-items: center;\n    }\n    \n    .roadmap-lane-content {\n      flex: 1;\n      position: relative;\n      min-width: 1200px;\n    }\n    \n    /* Task Styles */\n    .roadmap-task {\n      position: absolute;\n      height: 25px;\n      border-radius: 4px;\n      padding: 4px;\n      overflow: hidden;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n      border: 1px solid rgba(255,255,255,0.2);\n      cursor: pointer;\n      transition: transform 0.1s, box-shadow 0.1s;\n    }\n    \n    .roadmap-task:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n      z-index: 10;\n    }\n    \n    .roadmap-task.complete {\n      background-color: #4CAF50;\n      border-color: #81C784;\n    }\n    \n    .roadmap-task.in-progress {\n      background-color: #42A5F5;\n      border-color: #90CAF9;\n    }\n    \n    .roadmap-task.in-progress.funding-sector-irad {\n      background-color: #AB47BC;\n      border-color: #CE93D8;\n    }\n    \n    .roadmap-task.in-progress.funding-division-irad {\n      background-color: #FFA726;\n      border-color: #FFCC80;\n    }\n    \n    .roadmap-task.in-progress.funding-crad {\n      background-color: #EC407A;\n      border-color: #F48FB1;\n    }\n    \n    .roadmap-task.planned {\n      background-color: #BDBDBD;\n      border-color: #E0E0E0;\n      color: #212121;\n    }\n    \n    .task-label {\n      font-size: 12px;\n      font-weight: bold;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\n      color: white;\n    }\n    \n    .roadmap-task.planned .task-label {\n      color: #212121;\n      text-shadow: none;\n    }\n    \n    /* Program and Milestone Styles */\n    .milestone-row {\n      background-color: #f0f8ff;\n      border-bottom: 2px solid #00269A;\n    }\n    \n    .programs-row {\n      background-color: #f0f0ff;\n      border-bottom: 2px solid #00269A;\n    }\n    \n    .roadmap-milestone {\n      position: absolute;\n      top: 5px;\n      transform: translateX(-50%);\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      width: 20px;\n    }\n    \n    .milestone-marker {\n      width: 20px;\n      height: 20px;\n      background-color: #4a89ff;\n      border-radius: 50%;\n      border: 2px solid white;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    }\n    \n    .milestone-label {\n      margin-top: 5px;\n      font-size: 12px;\n      font-weight: bold;\n      white-space: nowrap;\n      transform: rotate(-45deg);\n      transform-origin: top left;\n    }\n    \n    .program-marker {\n      position: absolute;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n    \n    .program-marker-point {\n      width: 16px;\n      height: 16px;\n      background-color: #ff5722;\n      border-radius: 50%;\n      border: 2px solid white;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n    }\n    \n    .program-marker-label {\n      margin-top: 5px;\n      font-size: 12px;\n      font-weight: bold;\n      white-space: nowrap;\n    }\n    \n    /* Roadmap Key Styles */\n    .roadmap-key {\n      margin-top: 20px;\n      padding: 15px;\n      background-color: #f9f9f9;\n      border-radius: 8px;\n      border: 1px solid #ddd;\n    }\n    \n    .roadmap-key h4 {\n      margin-top: 0;\n      margin-bottom: 10px;\n    }\n    \n    .key-items {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 15px;\n    }\n    \n    .key-item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n    \n    .key-color {\n      width: 20px;\n      height: 20px;\n      border-radius: 4px;\n    }\n    \n    .key-color.planned {\n      background-color: #BDBDBD;\n      border: 1px solid #E0E0E0;\n    }\n    \n    .key-color.in-progress {\n      background-color: #42A5F5;\n      border: 1px solid #90CAF9;\n    }\n    \n    .key-color.in-progress.funding-sector-irad {\n      background-color: #AB47BC;\n      border: 1px solid #CE93D8;\n    }\n    \n    .key-color.in-progress.funding-division-irad {\n      background-color: #FFA726;\n      border: 1px solid #FFCC80;\n    }\n    \n    .key-color.in-progress.funding-crad {\n      background-color: #EC407A;\n      border: 1px solid #F48FB1;\n    }\n    \n    .key-color.complete {\n      background-color: #4CAF50;\n      border: 1px solid #81C784;\n    }\n    \n    .key-label {\n      font-size: 14px;\n      color: #333;\n    }\n    \n    .roadmap-source-note {\n      margin-top: 10px;\n      font-size: 12px;\n      font-style: italic;\n      color: #666;\n    }\n  "}}},118:n=>{n.exports={getSupplierHandler:function(){return console.log("Loading supplier handler module"),"\n// Supplier details handler\nfunction showSupplierDetails(supplier) {\n  console.log('Showing supplier details for:', supplier.name);\n  \n  // Get materials provided by this supplier\n  const relatedMaterials = roadmapData.materialSystems.filter(m => \n    supplier.materials && supplier.materials.includes(m.id)\n  );\n  \n  // Create the detail view HTML\n  let html = `\n    <div class=\"supplier-detail-content\">\n      <h2>${supplier.name}</h2>\n      \n      <div class=\"supplier-info\">\n        <p><strong>Location:</strong> ${supplier.location || 'N/A'}</p>\n        <p><strong>Contact:</strong> ${supplier.contact || 'N/A'}</p>\n        <p><strong>Website:</strong> ${supplier.website ? \n          `<a href=\"${supplier.website}\" target=\"_blank\">${supplier.website}</a>` : 'N/A'}</p>\n        <p><strong>Capabilities:</strong> ${supplier.capabilities || 'N/A'}</p>\n      </div>\n      \n      <h3>Provided Materials</h3>\n      <div class=\"supplier-materials\">`;\n  \n  // Add related materials\n  if (relatedMaterials.length > 0) {\n    html += `<ul class=\"material-list\">`;\n    relatedMaterials.forEach(material => {\n      html += `<li><a href=\"#\" class=\"material-link\" data-material-id=\"${material.id}\">${material.name}</a></li>`;\n    });\n    html += `</ul>`;\n  } else {\n    html += `<p>No specific materials listed for this supplier.</p>`;\n  }\n  \n  html += `</div>\n    \n    <h3>Certifications</h3>\n    <div class=\"supplier-certifications\">`;\n  \n  // Add certifications if they exist\n  if (supplier.certifications && supplier.certifications.length > 0) {\n    html += `<ul class=\"certification-list\">`;\n    supplier.certifications.forEach(cert => {\n      html += `<li>${cert}</li>`;\n    });\n    html += `</ul>`;\n  } else {\n    html += `<p>No certifications listed.</p>`;\n  }\n  \n  html += `</div>\n    \n    <h3>Notes</h3>\n    <div class=\"supplier-notes\">\n      <p>${supplier.notes || 'No additional notes available.'}</p>\n    </div>\n    \n    <button class=\"back-button\">Back</button>\n    </div>`;\n  \n  // Get or create the supplier detail section\n  let detailSection = document.getElementById('supplierDetailSection');\n  \n  // If the section doesn't exist, create it\n  if (!detailSection) {\n    console.log('Supplier detail section not found, creating it');\n    detailSection = document.createElement('div');\n    detailSection.id = 'supplierDetailSection';\n    detailSection.className = 'detail-view';\n    document.querySelector('.container').appendChild(detailSection);\n  }\n  \n  // Set the content\n  detailSection.innerHTML = html;\n  \n  // Add styles for the supplier detail content\n  const styleElement = document.createElement('style');\n  styleElement.textContent = `\n    .supplier-detail-content {\n      padding: 20px;\n    }\n    .supplier-info {\n      background-color: #f5f5f5;\n      border-radius: 8px;\n      padding: 15px;\n      margin-bottom: 20px;\n    }\n    .material-list, .certification-list {\n      list-style-type: none;\n      padding: 0;\n    }\n    .material-list li, .certification-list li {\n      margin-bottom: 8px;\n    }\n    .material-link {\n      color: #00269A;\n      text-decoration: none;\n    }\n    .material-link:hover {\n      text-decoration: underline;\n    }\n    .supplier-notes {\n      background-color: #fffde7;\n      border-left: 4px solid #ffd600;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n    }\n  `;\n  document.head.appendChild(styleElement);\n  \n  // Add event listener to the back button\n  detailSection.querySelector('.back-button').addEventListener('click', function(e) {\n    e.preventDefault();\n    goBack();\n  });\n  \n  // Add event listeners to material links\n  detailSection.querySelectorAll('.material-link').forEach(link => {\n    link.addEventListener('click', function(e) {\n      e.preventDefault();\n      const materialId = this.getAttribute('data-material-id');\n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\n      if (material) {\n        navStack.push('supplierDetailSection');\n        showMaterialDetails(material);\n      }\n    });\n  });\n  \n  // Show the supplier detail section and hide other views\n  // First, hide all main views\n  document.querySelectorAll('.main-view').forEach(view => {\n    view.style.display = 'none';\n  });\n  \n  // Then hide all detail views\n  document.querySelectorAll('.detail-view').forEach(view => {\n    view.style.display = 'none';\n  });\n  \n  // Finally, show our supplier detail section\n  detailSection.style.display = 'block';\n  \n  // Also update the navigation stack\n  navStack.push('supplierDetailSection');\n  console.log('Navigation stack updated:', navStack);\n}\n"}}},167:n=>{n.exports={safeJsonStringify:function(n){try{return JSON.stringify(n).replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}catch(n){return console.error("Error stringifying data:",n),"{}"}},sanitizeData:function(n){return{programs:Array.isArray(n.programs)?n.programs:[],products:Array.isArray(n.products)?n.products:[],materialSystems:Array.isArray(n.materialSystems)?n.materialSystems:[],suppliers:Array.isArray(n.suppliers)?n.suppliers:[],cradOpportunities:Array.isArray(n.cradOpportunities)?n.cradOpportunities:[]}}}},174:n=>{n.exports={getStyles:function(){return'\n    /* Base styles */\n    body {\n      font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif;\n      margin: 0;\n      padding: 0;\n      color: #333;\n      background-color: #f5f5f5;\n    }\n    \n    .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n    \n    header {\n      background-color: #2c3e50;\n      color: white;\n      padding: 15px 0;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n    }\n    \n    header h1 {\n      margin: 0;\n      padding: 0 20px;\n      font-size: 24px;\n    }\n    \n    /* Navigation */\n    .nav-tabs {\n      display: flex;\n      background-color: #34495e;\n      padding: 0 20px;\n    }\n    \n    .nav-tab {\n      padding: 12px 20px;\n      color: #ecf0f1;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n    \n    .nav-tab:hover, .nav-tab.active {\n      background-color: #2c3e50;\n    }\n    \n    /* Main content area */\n    .main-content {\n      background-color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n      margin-top: 20px;\n      padding: 20px;\n    }\n    \n    /* Tiles for programs, products, etc. */\n    .tiles-container {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 20px;\n      margin-top: 20px;\n    }\n    \n    .tile {\n      background-color: #ecf0f1;\n      border-radius: 5px;\n      padding: 20px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n      transition: transform 0.2s, box-shadow 0.2s;\n      cursor: pointer;\n    }\n    \n    .tile:hover {\n      transform: translateY(-5px);\n      box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n    }\n    \n    .tile-name {\n      font-weight: bold;\n      font-size: 18px;\n      margin-bottom: 10px;\n    }\n    \n    /* Roadmap specific styles */\n    .roadmap-container {\n      overflow-x: auto;\n      margin-top: 20px;\n    }\n    \n    .roadmap {\n      min-width: 1000px;\n      position: relative;\n    }\n    \n    .roadmap-header {\n      display: flex;\n      border-bottom: 1px solid #ddd;\n      position: sticky;\n      top: 0;\n      background-color: white;\n      z-index: 10;\n    }\n    \n    .roadmap-header-cell {\n      flex: 1;\n      padding: 10px;\n      text-align: center;\n      font-weight: bold;\n      min-width: 100px;\n    }\n    \n    .roadmap-row {\n      display: flex;\n      border-bottom: 1px solid #eee;\n      position: relative;\n      min-height: 60px;\n    }\n    \n    .roadmap-lane-title {\n      width: 200px;\n      padding: 10px;\n      background-color: #f9f9f9;\n      font-weight: bold;\n      display: flex;\n      align-items: center;\n      position: sticky;\n      left: 0;\n      z-index: 5;\n    }\n    \n    .roadmap-lane-content {\n      flex: 1;\n      position: relative;\n      min-height: 40px;\n    }\n    \n    .roadmap-task {\n      position: absolute;\n      height: 30px;\n      top: 5px;\n      background-color: #3498db;\n      border-radius: 3px;\n      color: white;\n      padding: 5px;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: pointer;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n    }\n    \n    .roadmap-task:hover {\n      box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n      z-index: 2;\n    }\n    \n    /* Detail views */\n    .detail-view {\n      display: none;\n      background-color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n      margin-top: 20px;\n      padding: 20px;\n    }\n    \n    .detail-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 25px;\n    }\n    \n    .detail-header h2 {\n      margin: 0;\n      font-size: 24px;\n      font-weight: 600;\n      color: #333;\n    }\n    \n    .back-button {\n      background-color: #003087;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      padding: 10px 20px;\n      font-size: 15px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      float: right;\n    }\n    \n    .back-button:hover {\n      background-color: #00246b;\n      transform: translateY(-2px);\n      box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n    }\n    \n    /* Task details */\n    .task-detail-section {\n      background-color: #f9f9f9;\n      border-radius: 5px;\n      padding: 15px;\n    }\n    \n    .task-detail-content {\n      margin-top: 10px;\n    }\n    \n    .detail-section {\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      padding: 25px;\n      margin-bottom: 30px;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n      border: 1px solid #e9ecef;\n      border-top: 3px solid #6a3093;\n    }\n    \n    .detail-section h3 {\n      margin-top: 0;\n      margin-bottom: 20px;\n      font-size: 22px;\n      font-weight: 600;\n      color: #333;\n    }\n    \n    .product-metadata {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: 15px;\n      margin-bottom: 25px;\n    }\n    \n    .product-metadata p {\n      margin: 0;\n      font-size: 15px;\n      line-height: 1.5;\n    }\n    \n    .product-metadata strong {\n      font-weight: 600;\n      color: #495057;\n      margin-right: 8px;\n    }\n    \n    /* Requirements Section */\n    .requirements-section {\n      margin-bottom: 25px;\n    }\n    \n    .requirements-section h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #6a3093;\n      padding-bottom: 8px;\n      border-bottom: 1px solid #e9ecef;\n    }\n    \n    .requirements-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .requirements-list li {\n      margin-bottom: 10px;\n      font-size: 15px;\n      line-height: 1.5;\n      padding-left: 20px;\n      position: relative;\n    }\n    \n    .requirements-list li:before {\n      content: "•";\n      position: absolute;\n      left: 0;\n      color: #6a3093;\n      font-size: 18px;\n      line-height: 1;\n    }\n    \n    .requirements-list strong {\n      font-weight: 600;\n      color: #495057;\n      margin-right: 8px;\n    }\n    \n    /* Business Case Section */\n    .business-case-section {\n      margin-bottom: 0;\n    }\n    \n    .business-case-section h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #6a3093;\n      padding-bottom: 8px;\n      border-bottom: 1px solid #e9ecef;\n    }\n    \n    .business-case-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .business-case-list li {\n      margin-bottom: 10px;\n      font-size: 15px;\n      line-height: 1.5;\n      padding-left: 20px;\n      position: relative;\n    }\n    \n    .business-case-list li:before {\n      content: "•";\n      position: absolute;\n      left: 0;\n      color: #6a3093;\n      font-size: 18px;\n      line-height: 1;\n    }\n    \n    .business-case-list strong {\n      font-weight: 600;\n      color: #495057;\n      margin-right: 8px;\n    }\n    \n    /* Related Programs Section */\n    .related-section {\n      margin-top: 30px;\n      margin-bottom: 30px;\n    }\n    \n    .related-section h3 {\n      margin-top: 0;\n      margin-bottom: 20px;\n      font-size: 20px;\n      font-weight: 600;\n      color: #333;\n    }\n    \n    /* Status indicators */\n    .status-indicator {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      margin-right: 5px;\n    }\n    \n    .status-complete {\n      background-color: #2ecc71;\n    }\n    \n    .status-in-progress {\n      background-color: #f39c12;\n    }\n    \n    .status-planned {\n      background-color: #3498db;\n    }\n    \n    /* Related section styles */\n    .related-section {\n      margin-top: 30px;\n    }\n    \n    .related-section h3 {\n      margin-bottom: 15px;\n      border-bottom: 1px solid #eee;\n      padding-bottom: 10px;\n    }\n    \n    .year-label {\n      font-size: 10px;\n      color: #7f8c8d;\n    }\n    \n    /* Responsive design improvements */\n    @media (max-width: 768px) {\n      .tiles-container {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n      }\n      \n      .roadmap-lane-title {\n        width: 150px;\n      }\n    }\n    \n    /* Print styles */\n    @media print {\n      body {\n        background-color: white;\n      }\n      \n      .nav-tabs, .back-button {\n        display: none;\n      }\n      \n      .container {\n        max-width: 100%;\n        margin: 0;\n        padding: 0;\n      }\n      \n      .roadmap-container {\n        overflow: visible;\n      }\n    }\n    \n    /* Tooltip styles */\n    .tooltip {\n      position: relative;\n      display: inline-block;\n    }\n    \n    .tooltip .tooltip-text {\n      visibility: hidden;\n      width: 200px;\n      background-color: #555;\n      color: #fff;\n      text-align: center;\n      border-radius: 6px;\n      padding: 5px;\n      position: absolute;\n      z-index: 1;\n      bottom: 125%;\n      left: 50%;\n      margin-left: -100px;\n      opacity: 0;\n      transition: opacity 0.3s;\n    }\n    \n    .tooltip:hover .tooltip-text {\n      visibility: visible;\n      opacity: 1;\n    }\n    \n    /* Quad Box Styles */\n    .specialized-quad-box {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr 1fr;\n      gap: 20px;\n      margin-top: 25px;\n    }\n    \n    .quad-section {\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      padding: 20px;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n      border: 1px solid #e9ecef;\n      overflow: auto;\n      max-height: 400px;\n    }\n    \n    .quad-section h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #333;\n      padding-bottom: 10px;\n      border-bottom: 1px solid #e9ecef;\n    }\n    \n    /* Material Systems Section - Match MRL slider color */\n    .material-section {\n      border-top: 3px solid #007bff;\n    }\n    \n    .material-header h5 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 16px;\n      color: #007bff;\n    }\n    \n    .material-details p {\n      margin: 8px 0;\n      font-size: 14px;\n      line-height: 1.5;\n    }\n    \n    .material-details strong {\n      font-weight: 600;\n      color: #495057;\n    }\n    \n    .view-details-button-container {\n      margin-top: 20px;\n      text-align: right;\n    }\n    \n    .view-full-details {\n      background-color: #007bff;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    \n    .view-full-details:hover {\n      background-color: #0056b3;\n      transform: translateY(-2px);\n      box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n    }\n    \n    /* Manufacturing Section - Unique color (magenta) */\n    .manufacturing-section {\n      border-top: 3px solid #e83e8c;\n    }\n    \n    .manufacturing-section h5 {\n      margin-top: 15px;\n      margin-bottom: 10px;\n      font-size: 15px;\n      color: #e83e8c;\n    }\n    \n    .manufacturing-section ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .manufacturing-section li {\n      margin-bottom: 6px;\n      font-size: 14px;\n    }\n    \n    .supplier-link {\n      color: #e83e8c;\n      text-decoration: none;\n      transition: color 0.2s ease;\n    }\n    \n    .supplier-link:hover {\n      color: #d6246f;\n      text-decoration: underline;\n    }\n    \n    /* Design Section */\n    .design-section {\n      border-top: 3px solid #2e8b57;\n    }\n    \n    .design-section h5 {\n      margin-top: 15px;\n      margin-bottom: 10px;\n      font-size: 15px;\n      color: #2e8b57;\n    }\n    \n    .design-section ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .design-section li {\n      margin-bottom: 6px;\n      font-size: 14px;\n    }\n    \n    /* Quality Section */\n    .quality-section {\n      border-top: 3px solid #fd7e14;\n    }\n    \n    .quality-section h5 {\n      margin-top: 15px;\n      margin-bottom: 10px;\n      font-size: 15px;\n      color: #fd7e14;\n    }\n    \n    .quality-section ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .quality-section li {\n      margin-bottom: 6px;\n      font-size: 14px;\n    }\n    \n    /* Post Processing Lists */\n    .post-processing-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 5px 0 0 0;\n    }\n    \n    .post-processing-list li {\n      margin-bottom: 5px;\n      font-size: 14px;\n      padding-left: 15px;\n      position: relative;\n    }\n    \n    .post-processing-list li:before {\n      content: "•";\n      position: absolute;\n      left: 0;\n      color: #6c757d;\n    }\n    \n    /* Consistent button styling */\n    .view-details-button {\n      background-color: #3498db;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 8px 16px;\n      cursor: pointer;\n      font-weight: normal;\n      font-size: 14px;\n      transition: background-color 0.2s;\n    }\n    \n    .view-details-button:hover {\n      background-color: #2980b9;\n    }\n    \n    /* Consistent layout for the product details page */\n    .readiness-bars-container {\n      display: flex;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n    \n    .readiness-bars {\n      width: 70%;\n      max-width: 800px;\n    }\n    \n    /* Make supplier tiles match the reference image */\n    .supplier-tile {\n      background-color: #f0f8ff;\n      border: 1px solid #d0e3f7;\n      border-radius: 4px;\n      padding: 8px 12px;\n      margin-bottom: 5px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-size: 14px;\n    }\n    \n    .supplier-tile:hover {\n      background-color: #d9edf7;\n      border-color: #85c1e9;\n    }\n    \n    /* Material Tiles Styles */\n    .material-tiles {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n      margin-bottom: 15px;\n    }\n    \n    .material-tile {\n      background-color: #f8f9fa;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      padding: 6px 12px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    \n    .material-tile:hover {\n      background-color: #e9ecef;\n      border-color: #adb5bd;\n    }\n    \n    .material-tile.selected {\n      background-color: #e3f2fd;\n      border-color: #3498db;\n      font-weight: bold;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    \n    .material-details {\n      margin-bottom: 15px;\n    }\n    \n    .material-details div {\n      margin-bottom: 8px;\n    }\n    \n    /* Add these styles for the enhanced product details page */\n    .wide-quad-box {\n      max-width: 1200px;\n      width: 90%;\n      margin: 0 auto;\n    }\n    \n    .supplier-tiles {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n      margin: 10px 0;\n    }\n    \n    .supplier-tile {\n      background-color: #f0f8ff; /* Light blue */\n      border: 1px solid #b8d8f8;\n      border-radius: 4px;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-size: 14px;\n      color: #2c3e50;\n    }\n    \n    .supplier-tile:hover {\n      background-color: #d9edf7;\n      border-color: #85c1e9;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    \n    /* Update the button container style */\n    .view-details-button-container {\n      margin-top: 15px;\n      text-align: center;\n    }\n    \n    .view-details-button-container.left-aligned {\n      text-align: left;\n    }\n    \n    .view-details-button {\n      background-color: #3498db;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 8px 16px;\n      cursor: pointer;\n      font-weight: bold;\n      transition: background-color 0.2s;\n    }\n    \n    .view-details-button:hover {\n      background-color: #2980b9;\n    }\n    \n    /* Make the specialized quad box responsive but prioritize desktop view */\n    @media (min-width: 1200px) {\n      .specialized-quad-box {\n        gap: 25px; /* Larger gap on desktop */\n      }\n      \n      .quad-section {\n        padding: 20px; /* More padding on desktop */\n      }\n    }\n    \n    /* Program Details Styles */\n    .program-details {\n      padding: 20px;\n      width: 100%;\n      max-width: 1200px;\n      margin: 0 auto;\n    }\n    \n    .program-details h1 {\n      color: #000;\n      font-size: 28px;\n      margin-bottom: 20px;\n      border-bottom: none;\n    }\n    \n    .program-details-info {\n      margin-bottom: 30px;\n    }\n    \n    .program-details-info p {\n      margin: 8px 0;\n      font-size: 16px;\n    }\n    \n    .products-grid {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n    \n    .product-card {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 15px;\n      width: 100%;\n      max-width: 450px;\n      background-color: #fff;\n      cursor: pointer;\n      transition: box-shadow 0.3s ease;\n    }\n    \n    .product-card:hover {\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n    \n    .product-card h3 {\n      margin-top: 0;\n      color: #003087;\n      font-size: 18px;\n      margin-bottom: 15px;\n    }\n    \n    .product-status p {\n      margin: 5px 0;\n      font-size: 14px;\n    }\n    \n    .back-button {\n      background-color: #003087;\n      color: white;\n      border: none;\n      padding: 8px 20px;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 16px;\n    }\n    \n    .back-button:hover {\n      background-color: #00246b;\n    }\n    \n    /* Business Case Styles */\n    .business-case-section {\n      margin-top: 15px;\n    }\n    \n    .business-case-section h4 {\n      margin-top: 0;\n      margin-bottom: 10px;\n      font-weight: 600;\n      font-size: 16px;\n    }\n    \n    .business-case-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .business-case-list li {\n      margin-bottom: 8px;\n    }\n    \n    .business-case-list li strong {\n      font-weight: 600;\n      margin-right: 5px;\n    }\n    \n    /* Material Systems Styles in Quad Box */\n    .material-systems-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .material-system-item {\n      margin-bottom: 20px;\n      border-bottom: 1px solid #eee;\n      padding-bottom: 15px;\n    }\n    \n    .material-system-item:last-child {\n      border-bottom: none;\n      margin-bottom: 0;\n    }\n    \n    .material-header {\n      margin-bottom: 8px;\n    }\n    \n    .material-link {\n      color: #003087;\n      font-weight: 600;\n      text-decoration: none;\n      font-size: 16px;\n    }\n    \n    .material-link:hover {\n      text-decoration: underline;\n    }\n    \n    .material-details p {\n      margin: 5px 0;\n      font-size: 14px;\n    }\n    \n    .material-post-processing, .material-machines {\n      margin-top: 8px;\n    }\n    \n    .post-processing-list, .machines-list {\n      margin: 5px 0 0 15px;\n      padding: 0;\n      font-size: 13px;\n    }\n    \n    .post-processing-list li, .machines-list li {\n      margin-bottom: 3px;\n    }\n    \n    /* Material System Filter Styles */\n    .material-system-filters {\n      margin-bottom: 25px;\n      padding: 20px;\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      border: 1px solid #e9ecef;\n    }\n    \n    .filter-label {\n      font-weight: 600;\n      margin-bottom: 15px;\n      color: #333;\n      font-size: 18px;\n    }\n    \n    .filter-buttons {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 12px;\n    }\n    \n    .material-filter-btn {\n      background-color: #f0f0f0;\n      border: none;\n      border-radius: 6px;\n      padding: 12px 20px;\n      cursor: pointer;\n      font-size: 16px;\n      font-weight: 500;\n      transition: all 0.2s ease;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n    }\n    \n    .material-filter-btn:hover {\n      background-color: #e0e0e0;\n      transform: translateY(-2px);\n      box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n    }\n    \n    .material-filter-btn.active {\n      background-color: #0056b3;\n      color: white;\n      box-shadow: 0 3px 6px rgba(0,0,0,0.2);\n    }\n    \n    /* Material System Details Styles */\n    .material-system-details {\n      margin-bottom: 15px;\n    }\n    \n    .material-system-details h5 {\n      margin-top: 0;\n      margin-bottom: 10px;\n      color: #003087;\n      font-size: 16px;\n    }\n    \n    .manufacturing-for-material, .quality-for-material {\n      margin-bottom: 15px;\n    }\n    \n    .qualified-machines, .post-processing, .relevant-suppliers,\n    .standard-ndt, .special-ndt, .part-acceptance,\n    .product-machines, .product-suppliers {\n      margin-bottom: 15px;\n    }\n    \n    .qualified-machines h5, .post-processing h5, .relevant-suppliers h5,\n    .standard-ndt h5, .special-ndt h5, .part-acceptance h5,\n    .product-machines h5, .product-suppliers h5 {\n      margin-top: 0;\n      margin-bottom: 8px;\n      font-size: 15px;\n      color: #495057;\n    }\n    \n    .machines-list, .post-processing-list, .suppliers-list, .ndt-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0 0 0 5px;\n    }\n    \n    .machines-list li, .post-processing-list li, .suppliers-list li, .ndt-list li {\n      margin-bottom: 5px;\n      font-size: 14px;\n    }\n    \n    .view-details-button-container {\n      margin-top: 15px;\n    }\n    \n    .material-details-btn {\n      background-color: #003087;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 6px 12px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    \n    .material-details-btn:hover {\n      background-color: #00246b;\n    }\n    \n    /* Product Development Progress Styles */\n    .product-development-progress {\n      margin-bottom: 30px;\n      padding: 20px 25px;\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      border: 1px solid #e9ecef;\n      width: 80%;\n      margin-left: auto;\n      margin-right: auto;\n    }\n    \n    .progress-section {\n      margin-bottom: 10px;\n      display: flex;\n      align-items: center;\n    }\n    \n    .progress-section:last-child {\n      margin-bottom: 0;\n    }\n    \n    .progress-section h4 {\n      margin: 0;\n      font-size: 18px;\n      color: #333;\n      font-weight: 600;\n      width: 70px;\n      flex-shrink: 0;\n      text-align: right;\n      padding-right: 15px;\n    }\n    \n    .progress-container {\n      width: 100%;\n      position: relative;\n    }\n    \n    .progress-bar-wrapper {\n      height: 28px;\n      background-color: #e9ecef;\n      border-radius: 8px;\n      overflow: hidden;\n      margin-bottom: 5px;\n      box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);\n      position: relative;\n    }\n    \n    .progress-bar {\n      height: 100%;\n      border-radius: 8px;\n      transition: width 0.5s ease;\n      position: relative;\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      padding-right: 15px;\n    }\n    \n    .trl-progress {\n      background: linear-gradient(90deg, #5d4cb6, #7e6fd3);\n    }\n    \n    .mrl-progress {\n      background: linear-gradient(90deg, #007bff, #00b8d4);\n    }\n    \n    .progress-current {\n      color: white;\n      font-weight: 600;\n      font-size: 16px;\n      text-shadow: 0 1px 2px rgba(0,0,0,0.3);\n      white-space: nowrap;\n    }\n    \n    .progress-labels {\n      display: flex;\n      justify-content: space-between;\n      font-size: 14px;\n      color: #6c757d;\n    }\n    \n    .progress-min, .progress-max {\n      color: #6c757d;\n    }\n  '}}},350:n=>{n.exports={getScripts:function(n){return"\n// Navigation stack to track view history\nconst navStack = [];\n\n// Store the data for client-side use\nlet roadmapData;\ntry {\n  // Safely parse the JSON data\n  roadmapData = JSON.parse('".concat(n,"');\n  console.log('Roadmap data loaded successfully');\n  \n  // Debug the data structure\n  console.log('Programs:', roadmapData.programs ? roadmapData.programs.length : 0);\n  console.log('Products:', roadmapData.products ? roadmapData.products.length : 0);\n  console.log('Material Systems:', roadmapData.materialSystems ? roadmapData.materialSystems.length : 0);\n  console.log('Suppliers:', roadmapData.suppliers ? roadmapData.suppliers.length : 0);\n  console.log('Funding Opportunities:', roadmapData.cradOpportunities ? roadmapData.cradOpportunities.length : 0);\n  \n  // Log the first program if available\n  if (roadmapData.programs && roadmapData.programs.length > 0) {\n    console.log('First program:', roadmapData.programs[0]);\n  }\n} catch (error) {\n  console.error('Error parsing roadmap data:', error);\n  console.error('Raw data:', '").concat(n.substring(0,100),"...');\n  roadmapData = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\n}\n\n// Initialize the application\ndocument.addEventListener('DOMContentLoaded', function() {\n  console.log('DOM fully loaded');\n  \n  // Debug the navigation tabs\n  debugElement('.nav-tab');\n  \n  // Debug the views\n  debugElement('.detail-view');\n  debugElement('#mainView');\n  \n  initializeNavigation();\n  attachEventHandlers();\n  setupSearch();\n  addTooltips();\n  \n  // Set default view\n  const defaultTab = document.querySelector('.nav-tab[data-view=\"programsView\"]');\n  if (defaultTab) {\n    console.log('Setting default tab:', defaultTab);\n    defaultTab.classList.add('active');\n    showView('programsView');\n  } else {\n    console.error('Default tab not found');\n  }\n});\n\n// Set up navigation and event handlers\nfunction initializeNavigation() {\n  console.log('Initializing navigation');\n  \n  // Set up navigation tabs\n  document.querySelectorAll('.nav-tab').forEach(tab => {\n    const viewId = tab.getAttribute('data-view');\n    console.log('Setting up tab for view:', viewId);\n    \n    tab.addEventListener('click', function(e) {\n      console.log('Tab clicked:', viewId);\n      e.preventDefault();\n      \n      // Update active tab\n      document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));\n      this.classList.add('active');\n      \n      // Show the selected view\n      showView(viewId);\n    });\n  });\n  \n  // Add keyboard navigation\n  document.addEventListener('keydown', function(e) {\n    // ESC key for going back\n    if (e.key === 'Escape') {\n      goBack();\n    }\n  });\n  \n  // Set up back buttons\n  document.querySelectorAll('.back-button').forEach(button => {\n    button.addEventListener('click', function(e) {\n      console.log('Back button clicked');\n      e.preventDefault();\n      goBack();\n    });\n  });\n}\n\n// Attach event handlers to all interactive elements\nfunction attachEventHandlers() {\n  console.log('Attaching event handlers');\n  \n  // Set up program tile click handlers\n  document.querySelectorAll('[data-program-id]').forEach(tile => {\n    const programId = tile.getAttribute('data-program-id');\n    console.log('Setting up click handler for program:', programId);\n    \n    tile.addEventListener('click', function() {\n      const programId = this.getAttribute('data-program-id');\n      console.log('Program tile clicked:', programId);\n      \n      // Debug the roadmapData object\n      console.log('Roadmap data programs:', roadmapData.programs);\n      \n      const program = roadmapData.programs.find(p => p.id === programId);\n      console.log('Found program:', program);\n      \n      if (program) {\n        showProgramDetails(program);\n      } else {\n        console.error('Program not found:', programId);\n        console.error('Available program IDs:', roadmapData.programs.map(p => p.id));\n      }\n    });\n  });\n  \n  // Set up product tile click handlers\n  document.querySelectorAll('[data-product-id]').forEach(tile => {\n    const productId = tile.getAttribute('data-product-id');\n    console.log('Setting up click handler for product:', productId);\n    \n    tile.addEventListener('click', function() {\n      const productId = this.getAttribute('data-product-id');\n      console.log('Product tile clicked:', productId);\n      \n      // Debug the roadmapData object\n      console.log('Roadmap data products:', roadmapData.products);\n      \n      const product = roadmapData.products.find(p => p.id === productId);\n      console.log('Found product:', product);\n      \n      if (product) {\n        showProductDetails(product);\n      } else {\n        console.error('Product not found:', productId);\n        console.error('Available product IDs:', roadmapData.products.map(p => p.id));\n      }\n    });\n  });\n  \n  // Set up material system tile click handlers\n  document.querySelectorAll('[data-material-id]').forEach(tile => {\n    tile.addEventListener('click', function() {\n      const materialId = this.getAttribute('data-material-id');\n      console.log('Material tile clicked:', materialId);\n      \n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\n      if (material) {\n        showMaterialSystemDetails(material);\n      }\n    });\n  });\n  \n  // Set up supplier tile click handlers\n  document.querySelectorAll('[data-supplier-id]').forEach(tile => {\n    tile.addEventListener('click', function() {\n      const supplierId = this.getAttribute('data-supplier-id');\n      console.log('Supplier tile clicked:', supplierId);\n      \n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\n      if (supplier) {\n        showSupplierDetails(supplier);\n      }\n    });\n  });\n  \n  // Set up funding opportunity tile click handlers\n  document.querySelectorAll('[data-opportunity-id]').forEach(tile => {\n    tile.addEventListener('click', function() {\n      const opportunityId = this.getAttribute('data-opportunity-id');\n      console.log('Opportunity tile clicked:', opportunityId);\n      \n      const opportunity = roadmapData.cradOpportunities.find(o => o.id === opportunityId);\n      if (opportunity) {\n        showFundingOpportunityDetails(opportunity);\n      }\n    });\n  });\n}\n\n// Add tooltips to navigation tabs\nfunction addTooltips() {\n  document.querySelectorAll('.nav-tab').forEach(tab => {\n    const viewId = tab.getAttribute('data-view');\n    let tooltipText = '';\n    \n    switch(viewId) {\n      case 'programsView':\n        tooltipText = 'View all programs and their timelines';\n        break;\n      case 'productsView':\n        tooltipText = 'View products and their associated programs';\n        break;\n      case 'amMaterialSystemsView':\n        tooltipText = 'View additive manufacturing material systems';\n        break;\n      case 'amSuppliersView':\n        tooltipText = 'View suppliers for AM materials';\n        break;\n      case 'fundingOpportunitiesView':\n        tooltipText = 'View funding opportunities';\n        break;\n    }\n    \n    if (tooltipText) {\n      createTooltip(tab, tooltipText);\n    }\n  });\n}\n\n// Helper function for formatting dates\nfunction formatDate(dateStr) {\n  if (!dateStr) return 'N/A';\n  const date = new Date(dateStr);\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\n}\n\n// Navigation functions\nfunction showView(viewId) {\n  console.log('Showing view:', viewId);\n  \n  // Hide all views\n  document.querySelectorAll('.detail-view, .main-content').forEach(view => {\n    view.style.display = 'none';\n  });\n  \n  // Show the requested view\n  const viewElement = document.getElementById(viewId);\n  if (viewElement) {\n    viewElement.style.display = 'block';\n    console.log('View displayed:', viewId);\n    \n    // Update navigation stack\n    navStack.push(viewId);\n    console.log('Navigation stack:', navStack);\n  } else {\n    console.error('View not found:', viewId);\n    // List all available views\n    console.log('Available views:');\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\n      console.log('- ' + view.id);\n    });\n  }\n}\n\nfunction goBack() {\n  console.log('Going back. Current stack:', navStack);\n  \n  if (navStack.length > 1) {\n    navStack.pop(); // Remove current view\n    const previousView = navStack[navStack.length - 1];\n    \n    // Hide all views\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\n      view.style.display = 'none';\n    });\n    \n    // Show the previous view\n    document.getElementById(previousView).style.display = 'block';\n    console.log('Returned to view:', previousView);\n  } else {\n    // If at the root level, show main view\n    document.querySelectorAll('.detail-view').forEach(view => {\n      view.style.display = 'none';\n    });\n    document.getElementById('mainView').style.display = 'block';\n    navStack.length = 0; // Clear the stack\n    console.log('Returned to main view');\n  }\n}\n\n// Add a helper function to create tooltips\nfunction createTooltip(element, text) {\n  element.classList.add('tooltip');\n  const tooltipSpan = document.createElement('span');\n  tooltipSpan.className = 'tooltip-text';\n  tooltipSpan.textContent = text;\n  element.appendChild(tooltipSpan);\n}\n\n// Add search functionality\nfunction setupSearch() {\n  const searchInput = document.getElementById('searchInput');\n  if (!searchInput) {\n    console.warn('Search input not found');\n    return;\n  }\n  \n  console.log('Setting up search functionality');\n  searchInput.addEventListener('input', function() {\n    const searchTerm = this.value.toLowerCase();\n    console.log('Searching for:', searchTerm);\n    \n    // Search in all tiles\n    document.querySelectorAll('.tile').forEach(tile => {\n      const tileName = tile.querySelector('.tile-name').textContent.toLowerCase();\n      const tileDesc = tile.querySelector('.tile-description')?.textContent.toLowerCase() || '';\n      \n      if (tileName.includes(searchTerm) || tileDesc.includes(searchTerm)) {\n        tile.style.display = 'block';\n      } else {\n        tile.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Debug function to help troubleshoot\nfunction debugElement(selector) {\n  const elements = document.querySelectorAll(selector);\n  console.log(`Found ${elements.length} elements matching \"${selector}\"`);\n  elements.forEach((el, i) => {\n    console.log(`Element ${i}:`, el);\n    if (el.id) {\n      console.log(`  ID: ${el.id}`);\n    }\n    if (el.className) {\n      console.log(`  Classes: ${el.className}`);\n    }\n    if (el.getAttribute('data-view')) {\n      console.log(`  View: ${el.getAttribute('data-view')}`);\n    }\n  });\n}\n\n// Add a global error handler to catch any JavaScript errors\nwindow.onerror = function(message, source, lineno, colno, error) {\n  console.error('JavaScript error:', message);\n  console.error('Source:', source);\n  console.error('Line:', lineno, 'Column:', colno);\n  console.error('Error object:', error);\n  return true;\n};\n")}}},388:n=>{n.exports={getProgramHandler:function(){return"\n// Program details handler\nfunction showProgramDetails(program) {\n  console.log('Showing program details for:', program.id);\n  \n  // Find products related to this program\n  const relatedProducts = roadmapData.products.filter(product => \n    product.programs && product.programs.includes(program.id)\n  );\n  \n  console.log('Related products:', relatedProducts.map(p => p.name));\n  \n  // Create the program details HTML\n  const detailsContent = document.getElementById('programDetailsContent');\n  if (!detailsContent) {\n    console.error('Program details content element not found');\n    return;\n  }\n  \n  // Clear previous content\n  detailsContent.innerHTML = '';\n  \n  // Create the main program information section\n  const programInfo = document.createElement('div');\n  programInfo.className = 'program-details';\n  \n  programInfo.innerHTML = `\n    <h1>${program.name}</h1>\n    \n    <div class=\"program-details-info\">\n      <p><strong>Customer Name:</strong> ${program.customerName || 'N/A'}</p>\n      <p><strong>Division:</strong> ${program.division || 'N/A'}</p>\n      <p><strong>Mission Class:</strong> ${program.missionClass || 'N/A'}</p>\n      <p><strong>Need Date:</strong> ${program.needDate ? formatDate(program.needDate) : 'N/A'}</p>\n    </div>\n    \n    <h2>Products of Interest</h2>\n    <div class=\"products-grid\">\n      ${relatedProducts.map(product => `\n        <div class=\"product-card\" data-product-id=\"${product.id}\">\n          <h3 class=\"product-name\">${product.name}</h3>\n          <div class=\"product-status\">\n            <p><strong>Qual Status:</strong> N/A</p>\n            <p><strong>Completion Date:</strong> ${product.completionDate || 'N/A'}</p>\n            <p><strong>Implementation Status:</strong> ${product.implementationStatus || 'N/A'}</p>\n          </div>\n        </div>\n      `).join('')}\n    </div>\n    \n    <button class=\"back-button\">Back</button>\n  `;\n  \n  // Add the program info to the details content\n  detailsContent.appendChild(programInfo);\n  \n  // Add click handlers to the product cards\n  programInfo.querySelectorAll('.product-card').forEach(card => {\n    card.addEventListener('click', function() {\n      const productId = this.getAttribute('data-product-id');\n      const product = roadmapData.products.find(p => p.id === productId);\n      if (product) {\n        showProductDetails(product);\n      }\n    });\n  });\n  \n  // Add click handler to the back button\n  programInfo.querySelector('.back-button').addEventListener('click', function() {\n    goBack();\n  });\n  \n  // Show the program details view\n  showView('programDetailsView');\n}\n"}}},474:(n,e,t)=>{var a=t(873);n.exports={dataFilePath:a.resolve(__dirname,"../roadmap.json"),outputFilePath:a.resolve(__dirname,"../build/roadmap.html"),devRepoPath:a.resolve(__dirname,"../public"),devRepoOutputFilePath:a.resolve(__dirname,"../public/roadmap.html")}},585:n=>{n.exports={getFormatters:function(){return'\n// Format date helpers\nfunction formatDate(dateString) {\n  if (!dateString) return "N/A";\n  const date = new Date(dateString);\n  return date.toLocaleDateString();\n}\n\nfunction formatDateForInput(date) {\n  const d = new Date(date);\n  let month = \'\' + (d.getMonth() + 1);\n  let day = \'\' + d.getDate();\n  const year = d.getFullYear();\n\n  if (month.length < 2) month = \'0\' + month;\n  if (day.length < 2) day = \'0\' + day;\n\n  return [year, month, day].join(\'-\');\n}\n\nfunction getTaskStatusClasses(status, fundingType) {\n  const statusLower = (status || "").toLowerCase();\n  let classes = "";\n  \n  if (statusLower === "complete") {\n    classes = "complete";\n  } else if (statusLower === "in progress") {\n    classes = "in-progress";\n    \n    // Add funding type class if available\n    if (fundingType) {\n      const fundingTypeLower = fundingType.toLowerCase().replace(/\\s+/g, \'-\');\n      classes += ` funding-${fundingTypeLower}`;\n    }\n  } else {\n    classes = "planned";\n  }\n  \n  return classes;\n}\n'}}},644:n=>{"use strict";n.exports=require("ajv-formats")},668:(n,e,t)=>{var a=t(167).sanitizeData;function i(n){var e=a(n);return'\n<div id="programsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Programs</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div class="tiles-container">\n    '.concat(e.programs.map((function(n){return'\n      <div class="tile" data-program-id="'.concat(n.id,'">\n        <div class="tile-name">').concat(n.name,'</div>\n        <div class="tile-description">').concat(n.description||"No description available",'</div>\n        <div class="tile-status">\n          <strong>Status:</strong> \n          <span class="status-indicator status-').concat(n.status?n.status.toLowerCase().replace(/\s+/g,"-"):"planned",'"></span>\n          ').concat(n.status||"Planned","\n        </div>\n      </div>\n    ")})).join(""),'\n  </div>\n</div>\n\n<div id="programDetailsView" class="detail-view">\n  <div id="programDetailsContent"></div>\n</div>\n')}function o(n){var e=a(n);return'\n<div id="productsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Products</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div class="tiles-container">\n    '.concat(e.products.map((function(n){return'\n      <div class="tile" data-product-id="'.concat(n.id,'">\n        <div class="tile-name">').concat(n.name,'</div>\n        <div class="tile-programs">\n          <strong>Programs:</strong> \n          ').concat(n.programs&&n.programs.length>0?n.programs.map((function(n){var t=e.programs.find((function(e){return e.id===n}));return t?t.name:n})).join(", "):"None","\n        </div>\n      </div>\n    ")})).join(""),'\n  </div>\n</div>\n\n<div id="productDetailsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Product Details</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div id="productDetails"></div>\n  <div id="productPrograms" class="related-items-container"></div>\n  <div id="productQuadBox" class="quad-box-wrapper"></div>\n</div>\n')}function r(n){var e=a(n);return'\n<div id="amMaterialSystemsView" class="detail-view">\n  <div class="detail-header">\n    <h2>AM Material Systems</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div class="tiles-container">\n    '.concat(e.materialSystems.map((function(n){return'\n      <div class="tile" data-material-id="'.concat(n.id,'">\n        <div class="tile-name">').concat(n.name,'</div>\n        <div class="tile-qualification">\n          <strong>Qualification:</strong> ').concat(n.qualification||"N/A",'\n        </div>\n        <div class="tile-qualification-class">\n          <strong>Class:</strong> ').concat(n.qualificationClass||"N/A","\n        </div>\n      </div>\n    ")})).join(""),'\n  </div>\n</div>\n\n<div id="materialSystemDetailsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Material System Details</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div id="materialSystemDetails"></div>\n  <div id="materialSystemSuppliers" class="related-items-container"></div>\n</div>\n')}function s(n){var e=a(n);return'\n<div id="amSuppliersView" class="detail-view">\n  <div class="detail-header">\n    <h2>AM Suppliers</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div class="tiles-container">\n    '.concat(e.suppliers.map((function(n){return'\n      <div class="tile" data-supplier-id="'.concat(n.id,'">\n        <div class="tile-name">').concat(n.name,'</div>\n        <div class="tile-materials">\n          <strong>Materials:</strong> ').concat(n.materials&&n.materials.length>0?n.materials.map((function(n){var t=e.materialSystems.find((function(e){return e.id===n}));return t?t.name:n})).join(", "):"N/A","\n        </div>\n      </div>\n    ")})).join(""),'\n  </div>\n</div>\n\n<div id="supplierDetailsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Supplier Details</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div id="supplierDetails"></div>\n  <div id="supplierMaterials" class="related-items-container"></div>\n</div>\n')}function l(n){var e=a(n);return'\n<div id="fundingOpportunitiesView" class="detail-view">\n  <div class="detail-header">\n    <h2>Funding Opportunities</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div class="tiles-container">\n    '.concat(e.cradOpportunities.map((function(n){return'\n      <div class="tile" data-opportunity-id="'.concat(n.id,'">\n        <div class="tile-name">').concat(n.name,'</div>\n        <div class="tile-details">').concat(n.details||"No details available","</div>\n        ").concat(n.deadline?'\n          <div class="tile-deadline">\n            <strong>Deadline:</strong> '.concat(new Date(n.deadline).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"}),"\n          </div>\n        "):"","\n      </div>\n    ")})).join(""),'\n  </div>\n</div>\n\n<div id="fundingOpportunityDetailsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Funding Opportunity Details</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div id="fundingOpportunityDetails"></div>\n  <div id="relatedEntities" class="related-items-container"></div>\n</div>\n')}n.exports={getMainStructure:function(){return'\n<header>\n  <h1>Interactive Roadmap</h1>\n</header>\n\n<div class="container">\n  <div class="nav-tabs">\n    <div class="nav-tab" data-view="programsView">Programs</div>\n    <div class="nav-tab" data-view="productsView">Products</div>\n    <div class="nav-tab" data-view="amMaterialSystemsView">AM Material Systems</div>\n    <div class="nav-tab" data-view="amSuppliersView">AM Suppliers</div>\n    <div class="nav-tab" data-view="fundingOpportunitiesView">Funding Opportunities</div>\n  </div>\n  \n  <div id="searchContainer" style="margin: 20px 0;">\n    <input type="text" id="searchInput" placeholder="Search..." style="padding: 8px; width: 100%; border: 1px solid #ddd; border-radius: 4px;">\n  </div>\n  \n  <div id="mainView" class="main-content" style="display: block;">\n    <h2>Welcome to the Interactive Roadmap</h2>\n    <p>Use the navigation tabs above to explore different sections of the roadmap.</p>\n  </div>\n'},getProgramsView:i,getProductsView:o,getMaterialSystemsView:r,getSuppliersView:s,getFundingOpportunitiesView:l,getTaskDetailsView:function(){return'\n<div id="taskDetailsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Task Details</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div id="taskDetails"></div>\n</div>\n'},getAllViews:function(n){return"\n".concat('\n<header>\n  <h1>Interactive Roadmap</h1>\n</header>\n\n<div class="container">\n  <div class="nav-tabs">\n    <div class="nav-tab" data-view="programsView">Programs</div>\n    <div class="nav-tab" data-view="productsView">Products</div>\n    <div class="nav-tab" data-view="amMaterialSystemsView">AM Material Systems</div>\n    <div class="nav-tab" data-view="amSuppliersView">AM Suppliers</div>\n    <div class="nav-tab" data-view="fundingOpportunitiesView">Funding Opportunities</div>\n  </div>\n  \n  <div id="searchContainer" style="margin: 20px 0;">\n    <input type="text" id="searchInput" placeholder="Search..." style="padding: 8px; width: 100%; border: 1px solid #ddd; border-radius: 4px;">\n  </div>\n  \n  <div id="mainView" class="main-content" style="display: block;">\n    <h2>Welcome to the Interactive Roadmap</h2>\n    <p>Use the navigation tabs above to explore different sections of the roadmap.</p>\n  </div>\n',"\n").concat(i(n),"\n").concat(o(n),"\n").concat(r(n),"\n").concat(s(n),"\n").concat(l(n),"\n").concat('\n<div id="taskDetailsView" class="detail-view">\n  <div class="detail-header">\n    <h2>Task Details</h2>\n    <button class="back-button">Back</button>\n  </div>\n  <div id="taskDetails"></div>\n</div>\n',"\n</div>")}}},710:n=>{n.exports={getRoadmapVisualizer:function(){return console.log("Loading roadmap visualizer module"),'\n// Create a roadmap visualization\nfunction createRoadmapVisualization(item, container) {\n  console.log(\'Creating roadmap visualization for:\', item.name);\n  \n  // Check if the container exists\n  if (!container) {\n    console.error(\'Roadmap container not found\');\n    return;\n  }\n  \n  // Clear the container\n  container.innerHTML = \'\';\n  \n  // Get timeline data - could be from a program or product\n  const timeline = item.timeline || [];\n  \n  // Create the roadmap visualization\n  if (timeline && timeline.length > 0) {\n    // Sort timeline items by date\n    const sortedTimeline = [...timeline].sort((a, b) => {\n      return new Date(a.date) - new Date(b.date);\n    });\n    \n    // Find min and max dates for scaling\n    const minDate = new Date(sortedTimeline[0].date);\n    const maxDate = new Date(sortedTimeline[sortedTimeline.length - 1].date);\n    \n    // Add some padding to the date range (3 months)\n    minDate.setMonth(minDate.getMonth() - 3);\n    maxDate.setMonth(maxDate.getMonth() + 3);\n    \n    // Calculate the total time span in milliseconds\n    const timeSpan = maxDate - minDate;\n    \n    // Create the roadmap HTML\n    let roadmapHtml = `\n      <div class="roadmap-timeline">\n        <div class="timeline-header">\n          <div class="timeline-start-date">${formatDate(minDate)}</div>\n          <div class="timeline-end-date">${formatDate(maxDate)}</div>\n        </div>\n        <div class="timeline-track">\n    `;\n    \n    // Add timeline items\n    sortedTimeline.forEach(item => {\n      const itemDate = new Date(item.date);\n      // Calculate position as percentage of total time span\n      const position = ((itemDate - minDate) / timeSpan) * 100;\n      \n      roadmapHtml += `\n        <div class="timeline-item ${item.type ? item.type.toLowerCase() : \'milestone\'}" \n             style="left: ${position}%">\n          <div class="timeline-item-marker"></div>\n          <div class="timeline-item-label">${item.name}</div>\n          <div class="timeline-item-date">${formatDate(itemDate)}</div>\n          ${item.description ? `<div class="timeline-item-description">${item.description}</div>` : \'\'}\n        </div>\n      `;\n    });\n    \n    roadmapHtml += `\n        </div>\n      </div>\n    `;\n    \n    container.innerHTML = roadmapHtml;\n  } else {\n    container.innerHTML = \'<p>No timeline data available.</p>\';\n  }\n}\n'}}},769:n=>{n.exports={getMaterialHandler:function(){return"\n// Material system details handler\nfunction showMaterialDetails(material) {\n  console.log('Showing material system details for:', material.name);\n  \n  // Get related products that use this material\n  const relatedProducts = roadmapData.products.filter(p => \n    p.materialSystems && p.materialSystems.includes(material.id)\n  );\n  \n  // Create the detail view HTML\n  let html = `\n    <div class=\"material-detail-content\">\n      <h2>${material.name}</h2>\n      \n      <div class=\"material-info\">\n        <p><strong>Material Type:</strong> ${material.type || 'N/A'}</p>\n        <p><strong>Qualification Status:</strong> ${material.qualification || 'N/A'}</p>\n        <p><strong>Qualification Class:</strong> ${material.qualificationClass || 'N/A'}</p>\n        <p><strong>Supplier:</strong> ${material.supplier || 'N/A'}</p>\n      </div>\n      \n      <h3>Properties</h3>\n      <div class=\"material-properties\">`;\n  \n  // Add material properties if they exist\n  if (material.properties) {\n    html += `<table class=\"properties-table\">\n      <thead>\n        <tr>\n          <th>Property</th>\n          <th>Value</th>\n          <th>Unit</th>\n        </tr>\n      </thead>\n      <tbody>`;\n    \n    for (const [key, value] of Object.entries(material.properties)) {\n      html += `\n        <tr>\n          <td>${key.charAt(0).toUpperCase() + key.slice(1)}</td>\n          <td>${value.value || 'N/A'}</td>\n          <td>${value.unit || ''}</td>\n        </tr>`;\n    }\n    \n    html += `</tbody>\n    </table>`;\n  } else {\n    html += `<p>No specific properties defined.</p>`;\n  }\n  \n  html += `</div>\n    \n    <h3>Related Products</h3>\n    <div class=\"related-products\">`;\n  \n  // Add related products\n  if (relatedProducts.length > 0) {\n    html += `<ul class=\"product-list\">`;\n    relatedProducts.forEach(product => {\n      html += `<li><a href=\"#\" class=\"product-link\" data-product-id=\"${product.id}\">${product.name}</a></li>`;\n    });\n    html += `</ul>`;\n  } else {\n    html += `<p>No products are using this material system.</p>`;\n  }\n  \n  html += `</div>\n    \n    <h3>Material Roadmap</h3>`;\n  \n  // Add material roadmap if it exists\n  if (material.roadmap && material.roadmap.length > 0) {\n    html += `\n      <div class=\"material-roadmap\">\n        <table class=\"roadmap-table\">\n          <thead>\n            <tr>\n              <th>Task</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Status</th>\n              <th>Funding Type</th>\n            </tr>\n          </thead>\n          <tbody>`;\n    \n    material.roadmap.forEach(task => {\n      html += `\n        <tr class=\"${task.status ? task.status.toLowerCase().replace(/\\s+/g, '-') : ''}\">\n          <td>${task.task}</td>\n          <td>${task.start ? new Date(task.start).toLocaleDateString() : 'N/A'}</td>\n          <td>${task.end ? new Date(task.end).toLocaleDateString() : 'N/A'}</td>\n          <td>${task.status || 'N/A'}</td>\n          <td>${task.fundingType || 'N/A'}</td>\n        </tr>`;\n    });\n    \n    html += `</tbody>\n        </table>\n      </div>`;\n  } else {\n    html += `<p>No roadmap defined for this material system.</p>`;\n  }\n  \n  html += `\n    <button class=\"back-button\">Back</button>\n    </div>`;\n  \n  // Get or create the material detail section\n  let detailSection = document.getElementById('materialDetailSection');\n  \n  // If the section doesn't exist, create it\n  if (!detailSection) {\n    console.log('Material detail section not found, creating it');\n    detailSection = document.createElement('div');\n    detailSection.id = 'materialDetailSection';\n    detailSection.className = 'detail-view';\n    document.querySelector('.container').appendChild(detailSection);\n  }\n  \n  // Set the content\n  detailSection.innerHTML = html;\n  \n  // Add styles for the material detail content\n  const styleElement = document.createElement('style');\n  styleElement.textContent = `\n    .material-detail-content {\n      padding: 20px;\n    }\n    .material-info {\n      background-color: #f5f5f5;\n      border-radius: 8px;\n      padding: 15px;\n      margin-bottom: 20px;\n    }\n    .properties-table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-bottom: 20px;\n    }\n    .properties-table th, .properties-table td {\n      border: 1px solid #ddd;\n      padding: 8px;\n      text-align: left;\n    }\n    .properties-table th {\n      background-color: #f2f2f2;\n    }\n    .roadmap-table {\n      width: 100%;\n      border-collapse: collapse;\n      margin-bottom: 20px;\n    }\n    .roadmap-table th, .roadmap-table td {\n      border: 1px solid #ddd;\n      padding: 8px;\n      text-align: left;\n    }\n    .roadmap-table th {\n      background-color: #f2f2f2;\n    }\n    .roadmap-table tr.complete {\n      background-color: #e8f5e9;\n    }\n    .roadmap-table tr.in-progress {\n      background-color: #e3f2fd;\n    }\n    .roadmap-table tr.planned {\n      background-color: #f5f5f5;\n    }\n    .product-list {\n      list-style-type: none;\n      padding: 0;\n    }\n    .product-list li {\n      margin-bottom: 8px;\n    }\n    .product-link {\n      color: #00269A;\n      text-decoration: none;\n    }\n    .product-link:hover {\n      text-decoration: underline;\n    }\n  `;\n  document.head.appendChild(styleElement);\n  \n  // Add event listener to the back button\n  detailSection.querySelector('.back-button').addEventListener('click', function(e) {\n    e.preventDefault();\n    goBack();\n  });\n  \n  // Add event listeners to product links\n  detailSection.querySelectorAll('.product-link').forEach(link => {\n    link.addEventListener('click', function(e) {\n      e.preventDefault();\n      const productId = this.getAttribute('data-product-id');\n      const product = roadmapData.products.find(p => p.id === productId);\n      if (product) {\n        navStack.push('materialDetailSection');\n        showProductDetails(product);\n      }\n    });\n  });\n  \n  // Show the material detail section and hide other views\n  // First, hide all main views\n  document.querySelectorAll('.main-view').forEach(view => {\n    view.style.display = 'none';\n  });\n  \n  // Then hide all detail views\n  document.querySelectorAll('.detail-view').forEach(view => {\n    view.style.display = 'none';\n  });\n  \n  // Finally, show our material detail section\n  detailSection.style.display = 'block';\n  \n  // Also update the navigation stack\n  navStack.push('materialDetailSection');\n  console.log('Navigation stack updated:', navStack);\n}\n"}}},781:(n,e,t)=>{n=t.nmd(n);var a=t(21),i=(t(873),t(891).schema),o=t(850).generateHtmlContent,r=t(474),s=r.dataFilePath,l=r.outputFilePath,d=r.devRepoPath,c=r.devRepoOutputFilePath,p=t(38),u=t(824).getAllDetailHandlers,m=p();function g(){try{var n=JSON.parse(a.readFileSync(s,"utf8")),e=m.compile(i);if(!e(n))return void console.error("Data validation error: "+JSON.stringify(e.errors,null,2));console.log("Data validation successful.");var t=o(n);u(),a.writeFileSync(l,t,"utf8"),console.log("HTML file generated successfully at: "+l),f(),console.log("HTML file generated successfully!")}catch(n){console.error("Error reading data file: "+n)}}function f(){try{a.existsSync(d)||(a.mkdirSync(d,{recursive:!0}),console.log("Created repository folder: "+d)),a.copyFileSync(l,c),console.log("File copied successfully to external repository: "+c)}catch(n){console.error("Error copying file to external repository: "+n)}}n.exports={buildHTML:g,copyToRepository:f},t.c[t.s]===n&&(g(),a.watch(s,(function(n,e){e&&"change"===n&&(console.log(e+" has been modified. Regenerating HTML and copying to external repository..."),g())})))},790:n=>{n.exports={getQuadBoxVisualizer:function(){return'\n// Create a quad box visualization for a product\nfunction createQuadBox(product, container) {\n  console.log(\'Creating quad box for product:\', product.name);\n  \n  // Get all material systems for this product\n  const materialSystems = product.materialSystems && product.materialSystems.length > 0 \n    ? product.materialSystems.map(id => roadmapData.materialSystems.find(m => m.id === id)).filter(Boolean)\n    : [];\n  \n  // Default to first material system if available\n  const defaultMaterial = materialSystems.length > 0 ? materialSystems[0] : null;\n  \n  // Create a specialized quad box layout for product details\n  container.innerHTML = `\n    <h3>Product Development Status</h3>\n    \n    \x3c!-- Material System Filter Buttons --\x3e\n    <div class="material-system-filters">\n      ${materialSystems.length > 0 ? `\n        <div class="filter-label">Select Material System:</div>\n        <div class="filter-buttons">\n          ${materialSystems.map((material, index) => `\n            <button class="material-filter-btn ${index === 0 ? \'active\' : \'\'}" \n                    data-material-id="${material.id}">\n              ${material.name}\n            </button>\n          `).join(\'\')}\n        </div>\n      ` : \'<p>No material systems available</p>\'}\n    </div>\n    \n    \x3c!-- Product Development Progress Module --\x3e\n    <div class="product-development-progress">\n      <div class="progress-section">\n        <h4>TRL</h4>\n        <div class="progress-container">\n          <div class="progress-bar-wrapper">\n            <div class="progress-bar trl-progress" style="width: ${(product.trl || 1) * 11.1}%">\n              <span class="progress-current">${product.trl || \'N/A\'}</span>\n            </div>\n          </div>\n          <div class="progress-labels">\n            <span class="progress-min">1</span>\n            <span class="progress-max">9</span>\n          </div>\n        </div>\n      </div>\n      \n      <div class="progress-section">\n        <h4>MRL</h4>\n        <div class="progress-container">\n          <div class="progress-bar-wrapper">\n            <div class="progress-bar mrl-progress" style="width: ${(defaultMaterial && defaultMaterial.mrl ? defaultMaterial.mrl : 1) * 10}%">\n              <span class="progress-current">${defaultMaterial && defaultMaterial.mrl ? defaultMaterial.mrl : \'N/A\'}</span>\n            </div>\n          </div>\n          <div class="progress-labels">\n            <span class="progress-min">1</span>\n            <span class="progress-max">10</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class="specialized-quad-box">\n      \x3c!-- Material Systems Quadrant --\x3e\n      <div class="quad-section material-section">\n        <h4>Material Systems</h4>\n        <div class="quad-content material-content">\n          ${materialSystems.length > 0 ? materialSystems.map((material, index) => `\n            <div class="material-system-details" id="material-${material.id}" \n                 style="display: ${index === 0 ? \'block\' : \'none\'}">\n              <h5>${material.name}</h5>\n              <div class="material-details">\n                <p><strong>Process:</strong> ${material.process || \'N/A\'}</p>\n                <p><strong>Qualification:</strong> ${material.qualification || \'N/A\'}</p>\n                <p><strong>Qualification Class:</strong> ${material.qualificationClass || \'N/A\'}</p>\n                <p><strong>Statistical Basis:</strong> ${material.statisticalBasis || \'None\'}</p>\n                \n                ${material.postProcessing && material.postProcessing.length > 0 ? `\n                  <div class="material-post-processing">\n                    <p><strong>Post Processing:</strong></p>\n                    <ul class="post-processing-list" style="list-style-type: disc;">\n                      ${material.postProcessing.map(process => `<li>${process}</li>`).join(\'\')}\n                    </ul>\n                  </div>\n                ` : \'\'}\n                \n                <div class="view-details-button-container">\n                  <button class="view-details-button material-details-btn" \n                          data-material-id="${material.id}">\n                    View Full Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          `).join(\'\') : \'<p>No material systems specified</p>\'}\n        </div>\n      </div>\n      \n      \x3c!-- Design Quadrant --\x3e\n      <div class="quad-section design-section">\n        <h4>Design</h4>\n        <div class="quad-content design-content">\n          ${product.designTools && product.designTools.length > 0 ? `\n            <h5>Design Tools</h5>\n            <ul class="design-list">\n              ${product.designTools.map(tool => `<li>${tool}</li>`).join(\'\')}\n            </ul>` : \n            \'\'\n          }\n          \n          ${product.documentation && product.documentation.length > 0 ? `\n            <h5>Documentation</h5>\n            <ul class="design-list">\n              ${product.documentation.map(doc => `<li>${doc}</li>`).join(\'\')}\n            </ul>` : \n            \'\'\n          }\n        </div>\n      </div>\n      \n      \x3c!-- Manufacturing Quadrant --\x3e\n      <div class="quad-section manufacturing-section">\n        <h4>Manufacturing</h4>\n        <div class="quad-content manufacturing-content">\n          ${materialSystems.length > 0 ? materialSystems.map((material, index) => `\n            <div class="manufacturing-for-material" id="manufacturing-${material.id}" \n                 style="display: ${index === 0 ? \'block\' : \'none\'}">\n              \n              \x3c!-- Qualified Machines --\x3e\n              ${material.qualifiedMachines && material.qualifiedMachines.length > 0 ? `\n                <div class="qualified-machines">\n                  <h5>Qualified Machines</h5>\n                  <ul class="machines-list">\n                    ${material.qualifiedMachines.map(machine => `<li>${machine}</li>`).join(\'\')}\n                  </ul>\n                </div>\n              ` : \'\'}\n              \n              \x3c!-- Relevant Suppliers as Tiles --\x3e\n              ${(() => {\n                // Find suppliers that support this material\n                const relevantSuppliers = roadmapData.suppliers.filter(\n                  s => s.materials && s.materials.includes(material.id)\n                );\n                \n                return relevantSuppliers.length > 0 ? `\n                  <div class="relevant-suppliers">\n                    <h5>Printing Suppliers</h5>\n                    <div class="supplier-tiles">\n                      ${relevantSuppliers.map(supplier => `\n                        <div class="supplier-tile">\n                          <a href="#" class="supplier-link" data-supplier-id="${supplier.id}">\n                            ${supplier.name}\n                          </a>\n                        </div>\n                      `).join(\'\')}\n                    </div>\n                  </div>\n                ` : \'\';\n              })()}\n              \n              \x3c!-- Post Processing Suppliers --\x3e\n              ${(() => {\n                // Find post processing suppliers for this material\n                const postProcessingSuppliers = product.postProcessingSuppliers ? \n                  product.postProcessingSuppliers.filter(pps => {\n                    const supplier = roadmapData.suppliers.find(s => s.id === pps.supplier);\n                    return supplier;\n                  }) : [];\n                \n                return postProcessingSuppliers.length > 0 ? `\n                  <div class="post-processing-suppliers">\n                    <h5>Post Processing Suppliers</h5>\n                    <div class="supplier-tiles">\n                      ${postProcessingSuppliers.map(ppSupplier => {\n                        const supplier = roadmapData.suppliers.find(s => s.id === ppSupplier.supplier);\n                        return supplier ? `\n                          <div class="supplier-tile">\n                            <a href="#" class="supplier-link" data-supplier-id="${supplier.id}">\n                              <span class="supplier-name">${supplier.name}</span>\n                              <span class="process-name">${ppSupplier.process}</span>\n                            </a>\n                          </div>\n                        ` : \'\';\n                      }).join(\'\')}\n                    </div>\n                  </div>\n                ` : \'\';\n              })()}\n            </div>\n          `).join(\'\') : \'\'}\n          \n          \x3c!-- Product-specific manufacturing info (always shown) --\x3e\n          ${product.relevantMachines && product.relevantMachines.length > 0 ? `\n            <div class="product-machines">\n              <h5>Product-Specific Machines</h5>\n              <ul class="machines-list">\n                ${product.relevantMachines.map(machine => `<li>${machine}</li>`).join(\'\')}\n              </ul>\n            </div>` : \n            \'\'\n          }\n        </div>\n      </div>\n      \n      \x3c!-- Quality Quadrant --\x3e\n      <div class="quad-section quality-section">\n        <h4>Quality</h4>\n        <div class="quad-content quality-content">\n          ${materialSystems.length > 0 ? materialSystems.map((material, index) => `\n            <div class="quality-for-material" id="quality-${material.id}" \n                 style="display: ${index === 0 ? \'block\' : \'none\'}">\n              \n              \x3c!-- Standard NDT --\x3e\n              ${material.standardNDT && material.standardNDT.length > 0 ? `\n                <div class="standard-ndt">\n                  <h5>Standard NDT</h5>\n                  <ul class="ndt-list">\n                    ${material.standardNDT.map(ndt => `<li>${ndt}</li>`).join(\'\')}\n                  </ul>\n                </div>\n              ` : \'\'}\n            </div>\n          `).join(\'\') : \'\'}\n          \n          \x3c!-- Product-specific quality info (always shown) --\x3e\n          ${product.specialNDT && product.specialNDT.length > 0 ? `\n            <div class="special-ndt">\n              <h5>Product Specific NDT</h5>\n              <ul class="ndt-list">\n                ${product.specialNDT.map(ndt => `<li>${ndt}</li>`).join(\'\')}\n              </ul>\n            </div>` : \n            \'\'\n          }\n          \n          ${product.partAcceptance && product.partAcceptance.length > 0 ? `\n            <div class="part-acceptance">\n              <h5>Part Acceptance</h5>\n              <ul class="ndt-list">\n                ${product.partAcceptance.map(acceptance => `<li>${acceptance}</li>`).join(\'\')}\n              </ul>\n            </div>` : \n            \'\'\n          }\n        </div>\n      </div>\n    </div>\n    \n    <style>\n      /* Consistent styling for the quad box */\n      .specialized-quad-box {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        grid-template-rows: repeat(2, minmax(250px, auto));\n        gap: 15px;\n        margin-top: 20px;\n      }\n      \n      .quad-section {\n        border: 1px solid #ddd;\n        border-radius: 8px;\n        padding: 15px;\n        background-color: #f9f9f9;\n        overflow: auto;\n        max-height: 350px;\n      }\n      \n      /* Material Systems - Blue */\n      .material-section h4 {\n        margin-top: 0;\n        padding-bottom: 8px;\n        border-bottom: 2px solid #0056b3;\n        color: #0056b3;\n        font-size: 16px;\n      }\n      \n      /* Design - Dark Green */\n      .design-section h4 {\n        margin-top: 0;\n        padding-bottom: 8px;\n        border-bottom: 2px solid #2e7d32;\n        color: #2e7d32;\n        font-size: 16px;\n      }\n      \n      /* Manufacturing - Deep Pink */\n      .manufacturing-section h4 {\n        margin-top: 0;\n        padding-bottom: 8px;\n        border-bottom: 2px solid #c2185b;\n        color: #c2185b;\n        font-size: 16px;\n      }\n      \n      /* Quality - Orange */\n      .quality-section h4 {\n        margin-top: 0;\n        padding-bottom: 8px;\n        border-bottom: 2px solid #e65100;\n        color: #e65100;\n        font-size: 16px;\n      }\n      \n      .quad-section h5 {\n        color: #333;\n        margin: 12px 0 8px 0;\n        font-size: 14px;\n        font-weight: bold;\n      }\n      \n      .quad-content {\n        font-size: 14px;\n      }\n      \n      .quad-content ul {\n        margin: 5px 0;\n        padding-left: 20px;\n      }\n      \n      .quad-content li {\n        margin-bottom: 5px;\n      }\n      \n      /* Supplier tiles styling */\n      .supplier-tiles {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 10px;\n        margin-top: 10px;\n      }\n      \n      .supplier-tile {\n        background-color: #e6f2ff;\n        border-radius: 6px;\n        padding: 8px 12px;\n        border: 1px solid #c2185b;\n        background-color: #fce4ec;\n      }\n      \n      .supplier-tile a {\n        text-decoration: none;\n        color: #c2185b;\n        display: flex;\n        flex-direction: column;\n      }\n      \n      .supplier-tile .process-name {\n        font-size: 12px;\n        color: #666;\n        margin-top: 3px;\n      }\n      \n      /* Consistent list styling */\n      .machines-list, .ndt-list, .post-processing-list, .design-list {\n        list-style-type: disc;\n      }\n      \n      /* Material filter buttons */\n      .material-system-filters {\n        margin-bottom: 15px;\n      }\n      \n      .filter-buttons {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n        margin-top: 8px;\n      }\n      \n      .material-filter-btn {\n        padding: 6px 12px;\n        background-color: #f0f0f0;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n      \n      .material-filter-btn.active {\n        background-color: #0056b3;\n        color: white;\n        border-color: #0056b3;\n      }\n      \n      /* Progress bars */\n      .progress-section {\n        margin-bottom: 15px;\n      }\n      \n      .progress-bar-wrapper {\n        height: 20px;\n        background-color: #e9ecef;\n        border-radius: 4px;\n        margin: 8px 0;\n      }\n      \n      .progress-bar {\n        height: 100%;\n        border-radius: 4px;\n        background-color: #0056b3;\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      \n      .progress-bar .progress-current {\n        color: white;\n        font-weight: bold;\n        text-shadow: 1px 1px 1px rgba(0,0,0,0.5);\n      }\n      \n      .progress-labels {\n        display: flex;\n        justify-content: space-between;\n        font-size: 14px;\n      }\n    </style>\n    \n    <h3>Technical Roadmap</h3>\n    <div id="productRoadmapContainer" class="roadmap-container"></div>\n  `;\n  \n  // Add event listeners to material filter buttons\n  container.querySelectorAll(\'.material-filter-btn\').forEach(button => {\n    button.addEventListener(\'click\', function() {\n      const materialId = this.getAttribute(\'data-material-id\');\n      const selectedMaterial = roadmapData.materialSystems.find(m => m.id === materialId);\n      \n      // Update MRL progress bar based on selected material\n      if (selectedMaterial && selectedMaterial.mrl) {\n        const mrlProgressBar = container.querySelector(\'.mrl-progress\');\n        const mrlCurrentLabel = container.querySelector(\'.mrl-progress .progress-current\');\n        \n        if (mrlProgressBar) {\n          mrlProgressBar.style.width = `${selectedMaterial.mrl * 10}%`;\n        }\n        \n        if (mrlCurrentLabel) {\n          mrlCurrentLabel.textContent = `${selectedMaterial.mrl}`;\n        }\n      }\n      \n      // Update active button\n      container.querySelectorAll(\'.material-filter-btn\').forEach(btn => {\n        btn.classList.remove(\'active\');\n      });\n      this.classList.add(\'active\');\n      \n      // Hide all material details and show the selected one\n      container.querySelectorAll(\'.material-system-details\').forEach(div => {\n        div.style.display = \'none\';\n      });\n      container.querySelector(`#material-${materialId}`).style.display = \'block\';\n      \n      // Hide all manufacturing details and show the selected one\n      container.querySelectorAll(\'.manufacturing-for-material\').forEach(div => {\n        div.style.display = \'none\';\n      });\n      const manufacturingDiv = container.querySelector(`#manufacturing-${materialId}`);\n      if (manufacturingDiv) {\n        manufacturingDiv.style.display = \'block\';\n      }\n      \n      // Hide all quality details and show the selected one\n      container.querySelectorAll(\'.quality-for-material\').forEach(div => {\n        div.style.display = \'none\';\n      });\n      const qualityDiv = container.querySelector(`#quality-${materialId}`);\n      if (qualityDiv) {\n        qualityDiv.style.display = \'block\';\n      }\n    });\n  });\n  \n  // Add event listeners to material details buttons\n  container.querySelectorAll(\'.material-details-btn\').forEach(button => {\n    button.addEventListener(\'click\', function() {\n      const materialId = this.getAttribute(\'data-material-id\');\n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\n      if (material) {\n        showMaterialDetails(material);\n      }\n    });\n  });\n  \n  // Add event listeners to supplier links\n  container.querySelectorAll(\'.supplier-link\').forEach(link => {\n    link.addEventListener(\'click\', function(e) {\n      e.preventDefault();\n      const supplierId = this.getAttribute(\'data-supplier-id\');\n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\n      if (supplier) {\n        showSupplierDetails(supplier);\n      }\n    });\n  });\n}\n'}}},824:(n,e,t)=>{t(969).generateRoadmapHtml;var a=t(710).getRoadmapVisualizer,i=t(790).getQuadBoxVisualizer,o=t(388).getProgramHandler,r=t(913).getProductHandler,s=t(769).getMaterialHandler,l=t(118).getSupplierHandler,d=t(585).getFormatters;n.exports={getAllDetailHandlers:function(){return"\n// Create a navigation namespace to avoid conflicts\nconst Navigation = {\n  stack: [],\n  \n  push: function(view) {\n    this.stack.push(view);\n    console.log('Navigation stack updated:', this.stack);\n  },\n  \n  goBack: function() {\n    if (this.stack.length > 0) {\n      const prevView = this.stack.pop();\n      console.log('Going back to:', prevView);\n      \n      // Show the previous view\n      if (prevView === 'mainView') {\n        this.showView('mainView');\n      } else if (prevView === 'programDetailsView') {\n        this.showView('programDetailsView');\n      } else if (prevView === 'productDetailsView') {\n        this.showView('productDetailsView');\n      } else if (prevView === 'materialDetailSection') {\n        document.querySelectorAll('.detail-view').forEach(view => {\n          view.style.display = 'none';\n        });\n        document.getElementById('materialDetailSection').style.display = 'block';\n      } else if (prevView === 'supplierDetailSection') {\n        document.querySelectorAll('.detail-view').forEach(view => {\n          view.style.display = 'none';\n        });\n        document.getElementById('supplierDetailSection').style.display = 'block';\n      }\n    } else {\n      // If no previous view, go to main view\n      this.showView('programsView'); // Default to programs view\n    }\n  },\n  \n  showView: function(viewId) {\n    console.log('Showing view:', viewId);\n    \n    // First, hide all detail views\n    document.querySelectorAll('.detail-view').forEach(view => {\n      view.style.display = 'none';\n    });\n    \n    // Hide welcome message if it exists\n    const welcomeHeadings = document.querySelectorAll('h1, h2, h3');\n    welcomeHeadings.forEach(heading => {\n      if (heading.textContent.includes('Welcome to the Interactive Roadmap')) {\n        // Find a parent container to hide\n        let parent = heading;\n        // Go up to find a suitable container\n        while (parent && !parent.classList.contains('container') && parent.parentElement) {\n          parent = parent.parentElement;\n        }\n        \n        // If we found a suitable container that's not the main container, hide it\n        if (parent && !parent.classList.contains('container')) {\n          parent.style.display = 'none';\n        } else if (heading.parentElement) {\n          // Otherwise just hide the heading's parent\n          heading.parentElement.style.display = 'none';\n        }\n      }\n    });\n    \n    // Show the requested view\n    const targetView = document.getElementById(viewId);\n    if (targetView) {\n      targetView.style.display = 'block';\n    } else {\n      console.error('Target view not found:', viewId);\n      // Show the programs view as a fallback\n      const programsView = document.getElementById('programsView');\n      if (programsView) {\n        programsView.style.display = 'block';\n      }\n    }\n  }\n};\n\n// Define global functions that use our Navigation namespace\nfunction goBack() { Navigation.goBack(); }\nfunction showView(viewId) { Navigation.showView(viewId); }\n\n// Import utility functions first\n".concat(d(),"\n\n// Import visualizations next - before handlers that use them\n").concat(a(),"\n").concat(i(),"\n\n// Import handlers last - after the visualizations they depend on\n").concat(o().replace(/navStack\.push/g,"Navigation.stack.push"),"\n").concat(r().replace(/navStack\.push/g,"Navigation.stack.push"),"\n").concat(s().replace(/navStack\.push/g,"Navigation.stack.push"),"\n").concat(l().replace(/navStack\.push/g,"Navigation.stack.push"),"\n\n// Initialize by hiding welcome section when any tab is clicked\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Add click handlers to the navigation tabs\n  const tabs = document.querySelectorAll('.nav-tab');\n  tabs.forEach(tab => {\n    tab.addEventListener('click', function() {\n      const viewId = this.getAttribute('data-view');\n      if (viewId) {\n        showView(viewId);\n      }\n    });\n  });\n  \n  // Add any other initialization for new handlers here\n  // For example, initialize supplier view handlers\n  const supplierLinks = document.querySelectorAll('.supplier-link');\n  supplierLinks.forEach(link => {\n    link.addEventListener('click', function(e) {\n      e.preventDefault();\n      const supplierId = this.getAttribute('data-supplier-id');\n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\n      if (supplier) {\n        showSupplierDetails(supplier);\n      }\n    });\n  });\n  \n  // Log that initialization is complete\n  console.log('Detail handlers initialized successfully');\n});\n")}}},850:(n,e,t)=>{function a(n){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},a(n)}var i=t(167),o=i.sanitizeData,r=(i.safeJsonStringify,t(174).getStyles),s=t(668).getAllViews,l=(t(350).getScripts,t(824).getAllDetailHandlers),d=t(52).getRoadmapStyles;n.exports={generateHtmlContent:function(n){console.log("Generating HTML content with data:",n),n&&"object"===a(n)||(console.error("Invalid data provided to template:",n),n={programs:[],products:[],materialSystems:[],suppliers:[],cradOpportunities:[]});var e=o(n);console.log("Sanitized data:",e),console.log("Programs:",e.programs.length),console.log("Products:",e.products.length),0===e.programs.length&&(console.warn("No programs found in data, adding a sample program for testing"),e.programs.push({id:"SAMPLE1",name:"Sample Program",description:"This is a sample program added for testing",status:"Planned",tasks:[]}));var t='\n    <script id="roadmap-data" type="application/json">\n      '.concat(JSON.stringify(e),"\n    <\/script>\n  ");return'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <title>Interactive Roadmap</title>\n  <style>\n'.concat(r(),"\n").concat(d(),"\n  </style>\n</head>\n<body>\n  \x3c!-- Data debugging --\x3e\n  <script>\n    console.log('Data embedded in page');\n  <\/script>\n  \n  \x3c!-- Embed the data as JSON --\x3e\n  ").concat(t,"\n  \n").concat(s(e),"\n  <script>\n").concat("\n// Navigation stack to track view history\nconst navStack = [];\n\n// Debug function to help troubleshoot\nfunction debugElement(selector) {\n  const elements = document.querySelectorAll(selector);\n  console.log(`Found ${elements.length} elements matching \"${selector}\"`);\n  elements.forEach((el, i) => {\n    console.log(`Element ${i}:`, el);\n    if (el.id) {\n      console.log(`  ID: ${el.id}`);\n    }\n    if (el.className) {\n      console.log(`  Classes: ${el.className}`);\n    }\n    if (el.getAttribute('data-view')) {\n      console.log(`  View: ${el.getAttribute('data-view')}`);\n    }\n  });\n}\n\n// Load the data from the embedded JSON\nlet roadmapData;\ntry {\n  const dataElement = document.getElementById('roadmap-data');\n  if (dataElement) {\n    roadmapData = JSON.parse(dataElement.textContent);\n    console.log('Roadmap data loaded successfully from embedded JSON');\n  } else {\n    console.error('Data element not found');\n    roadmapData = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\n  }\n  \n  // Debug the data structure\n  console.log('Programs:', roadmapData.programs ? roadmapData.programs.length : 0);\n  console.log('Products:', roadmapData.products ? roadmapData.products.length : 0);\n  console.log('Material Systems:', roadmapData.materialSystems ? roadmapData.materialSystems.length : 0);\n  console.log('Suppliers:', roadmapData.suppliers ? roadmapData.suppliers.length : 0);\n  console.log('Funding Opportunities:', roadmapData.cradOpportunities ? roadmapData.cradOpportunities.length : 0);\n  \n  // Log the first program if available\n  if (roadmapData.programs && roadmapData.programs.length > 0) {\n    console.log('First program:', roadmapData.programs[0]);\n  }\n} catch (error) {\n  console.error('Error parsing roadmap data:', error);\n  roadmapData = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\n}\n\n// Initialize the application\ndocument.addEventListener('DOMContentLoaded', function() {\n  console.log('DOM fully loaded');\n  \n  // Debug the navigation tabs\n  debugElement('.nav-tab');\n  \n  // Debug the views\n  debugElement('.detail-view');\n  debugElement('#mainView');\n  \n  initializeNavigation();\n  attachEventHandlers();\n  setupSearch();\n  addTooltips();\n  \n  // Set default view\n  const defaultTab = document.querySelector('.nav-tab[data-view=\"programsView\"]');\n  if (defaultTab) {\n    console.log('Setting default tab:', defaultTab);\n    defaultTab.classList.add('active');\n    showView('programsView');\n  } else {\n    console.error('Default tab not found');\n  }\n});\n\n// Set up navigation and event handlers\nfunction initializeNavigation() {\n  console.log('Initializing navigation');\n  \n  // Set up navigation tabs\n  document.querySelectorAll('.nav-tab').forEach(tab => {\n    const viewId = tab.getAttribute('data-view');\n    console.log('Setting up tab for view:', viewId);\n    \n    tab.addEventListener('click', function(e) {\n      console.log('Tab clicked:', viewId);\n      e.preventDefault();\n      \n      // Update active tab\n      document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));\n      this.classList.add('active');\n      \n      // Show the selected view\n      showView(viewId);\n    });\n  });\n  \n  // Add keyboard navigation\n  document.addEventListener('keydown', function(e) {\n    // ESC key for going back\n    if (e.key === 'Escape') {\n      goBack();\n    }\n  });\n  \n  // Set up back buttons\n  document.querySelectorAll('.back-button').forEach(button => {\n    button.addEventListener('click', function(e) {\n      console.log('Back button clicked');\n      e.preventDefault();\n      goBack();\n    });\n  });\n}\n\n// Attach event handlers to all interactive elements\nfunction attachEventHandlers() {\n  console.log('Attaching event handlers');\n  \n  // Set up program tile click handlers\n  document.querySelectorAll('[data-program-id]').forEach(tile => {\n    const programId = tile.getAttribute('data-program-id');\n    console.log('Setting up click handler for program:', programId);\n    \n    tile.addEventListener('click', function() {\n      const programId = this.getAttribute('data-program-id');\n      console.log('Program tile clicked:', programId);\n      \n      // Debug the roadmapData object\n      console.log('Roadmap data programs:', roadmapData.programs);\n      \n      const program = roadmapData.programs.find(p => p.id === programId);\n      console.log('Found program:', program);\n      \n      if (program) {\n        showProgramDetails(program);\n      } else {\n        console.error('Program not found:', programId);\n        console.error('Available program IDs:', roadmapData.programs.map(p => p.id));\n      }\n    });\n  });\n  \n  // Set up product tile click handlers\n  document.querySelectorAll('[data-product-id]').forEach(tile => {\n    const productId = tile.getAttribute('data-product-id');\n    console.log('Setting up click handler for product:', productId);\n    \n    tile.addEventListener('click', function() {\n      const productId = this.getAttribute('data-product-id');\n      console.log('Product tile clicked:', productId);\n      \n      // Debug the roadmapData object\n      console.log('Roadmap data products:', roadmapData.products);\n      \n      const product = roadmapData.products.find(p => p.id === productId);\n      console.log('Found product:', product);\n      \n      if (product) {\n        showProductDetails(product);\n      } else {\n        console.error('Product not found:', productId);\n        console.error('Available product IDs:', roadmapData.products.map(p => p.id));\n      }\n    });\n  });\n  \n  // Set up material system tile click handlers\n  document.querySelectorAll('[data-material-id]').forEach(tile => {\n    const materialId = tile.getAttribute('data-material-id');\n    console.log('Setting up click handler for material:', materialId);\n    \n    tile.addEventListener('click', function() {\n      const materialId = this.getAttribute('data-material-id');\n      console.log('Material tile clicked:', materialId);\n      \n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\n      if (material) {\n        showMaterialDetails(material);\n      } else {\n        console.error('Material not found:', materialId);\n      }\n    });\n  });\n  \n  // Set up supplier tile click handlers\n  document.querySelectorAll('[data-supplier-id]').forEach(tile => {\n    const supplierId = tile.getAttribute('data-supplier-id');\n    console.log('Setting up click handler for supplier:', supplierId);\n    \n    tile.addEventListener('click', function() {\n      const supplierId = this.getAttribute('data-supplier-id');\n      console.log('Supplier tile clicked:', supplierId);\n      \n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\n      if (supplier) {\n        showSupplierDetails(supplier);\n      } else {\n        console.error('Supplier not found:', supplierId);\n      }\n    });\n  });\n  \n  // Set up funding opportunity tile click handlers\n  document.querySelectorAll('[data-opportunity-id]').forEach(tile => {\n    const opportunityId = tile.getAttribute('data-opportunity-id');\n    console.log('Setting up click handler for opportunity:', opportunityId);\n    \n    tile.addEventListener('click', function() {\n      const opportunityId = this.getAttribute('data-opportunity-id');\n      console.log('Opportunity tile clicked:', opportunityId);\n      \n      const opportunity = roadmapData.cradOpportunities.find(o => o.id === opportunityId);\n      if (opportunity) {\n        showFundingOpportunityDetails(opportunity);\n      } else {\n        console.error('Opportunity not found:', opportunityId);\n      }\n    });\n  });\n}\n\n// Add tooltips to navigation tabs\nfunction addTooltips() {\n  document.querySelectorAll('.nav-tab').forEach(tab => {\n    const viewId = tab.getAttribute('data-view');\n    let tooltipText = '';\n    \n    switch (viewId) {\n      case 'programsView':\n        tooltipText = 'View all programs';\n        break;\n      case 'productsView':\n        tooltipText = 'View all products';\n        break;\n      case 'amMaterialSystemsView':\n        tooltipText = 'View all AM material systems';\n        break;\n      case 'amSuppliersView':\n        tooltipText = 'View all AM suppliers';\n        break;\n      case 'fundingOpportunitiesView':\n        tooltipText = 'View all funding opportunities';\n        break;\n    }\n    \n    if (tooltipText) {\n      createTooltip(tab, tooltipText);\n    }\n  });\n}\n\n// Helper function for formatting dates\nfunction formatDate(dateStr) {\n  if (!dateStr) return 'N/A';\n  const date = new Date(dateStr);\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\n}\n\n// Navigation functions\nfunction showView(viewId) {\n  console.log('Showing view:', viewId);\n  \n  // Hide all views\n  document.querySelectorAll('.detail-view, .main-content').forEach(view => {\n    view.style.display = 'none';\n  });\n  \n  // Show the requested view\n  const viewElement = document.getElementById(viewId);\n  if (viewElement) {\n    viewElement.style.display = 'block';\n    console.log('View displayed:', viewId);\n    \n    // Update navigation stack\n    navStack.push(viewId);\n    console.log('Navigation stack:', navStack);\n  } else {\n    console.error('View not found:', viewId);\n    // List all available views\n    console.log('Available views:');\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\n      console.log('- ' + view.id);\n    });\n  }\n}\n\nfunction goBack() {\n  console.log('Going back. Current stack:', navStack);\n  \n  if (navStack.length > 1) {\n    navStack.pop(); // Remove current view\n    const previousView = navStack[navStack.length - 1];\n    \n    // Hide all views\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\n      view.style.display = 'none';\n    });\n    \n    // Show the previous view\n    document.getElementById(previousView).style.display = 'block';\n    console.log('Returned to view:', previousView);\n  } else {\n    // If at the root level, show main view\n    document.querySelectorAll('.detail-view').forEach(view => {\n      view.style.display = 'none';\n    });\n    document.getElementById('mainView').style.display = 'block';\n    navStack.length = 0; // Clear the stack\n    console.log('Returned to main view');\n  }\n}\n\n// Add a helper function to create tooltips\nfunction createTooltip(element, text) {\n  element.classList.add('tooltip');\n  const tooltipSpan = document.createElement('span');\n  tooltipSpan.className = 'tooltip-text';\n  tooltipSpan.textContent = text;\n  element.appendChild(tooltipSpan);\n}\n\n// Add search functionality\nfunction setupSearch() {\n  const searchInput = document.getElementById('searchInput');\n  if (!searchInput) {\n    console.warn('Search input not found');\n    return;\n  }\n  \n  console.log('Setting up search functionality');\n  searchInput.addEventListener('input', function() {\n    const searchTerm = this.value.toLowerCase();\n    console.log('Searching for:', searchTerm);\n    \n    // Search in all tiles\n    document.querySelectorAll('.tile').forEach(tile => {\n      const tileName = tile.querySelector('.tile-name').textContent.toLowerCase();\n      const tileDesc = tile.querySelector('.tile-description')?.textContent.toLowerCase() || '';\n      \n      if (tileName.includes(searchTerm) || tileDesc.includes(searchTerm)) {\n        tile.style.display = 'block';\n      } else {\n        tile.style.display = 'none';\n      }\n    });\n  });\n}\n\n// Add a global error handler to catch any JavaScript errors\nwindow.onerror = function(message, source, lineno, colno, error) {\n  console.error('JavaScript error:', message);\n  console.error('Source:', source);\n  console.error('Line:', lineno, 'Column:', colno);\n  console.error('Error object:', error);\n  return true;\n};\n","\n").concat(l(),"\n  <\/script>\n</body>\n</html>")}}},873:n=>{"use strict";n.exports=require("path")},881:n=>{"use strict";n.exports=require("ajv")},891:n=>{n.exports={schema:{type:"object",properties:{programs:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},description:{type:"string"},tasks:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},description:{type:"string"},startDate:{type:"string",format:"date"},endDate:{type:"string",format:"date"},status:{type:"string"}},required:["id","name"]}}},required:["id","name"]}},products:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},description:{type:"string"},programs:{type:"array",items:{type:"string"}},productSupplyChain:{type:"string"}},required:["id","name"]}},materialSystems:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},qualification:{type:"string"},qualificationClass:{type:"string"},supplyChain:{type:"string"},standardNDT:{type:"array",items:{type:"string"}}},required:["id","name"]}},cradOpportunities:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},relatedEntity:{type:"string"},details:{type:"string"}},required:["id","name"]}},suppliers:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},materials:{type:"array",items:{type:"string"}},additionalCapabilities:{type:"string"}},required:["id","name"]}}},required:["programs"]}}},913:n=>{n.exports={getProductHandler:function(){return console.log("Loading product handler module"),"\n// Product details handler\nfunction showProductDetails(product) {\n  console.log('Showing product details for:', product.name);\n  const mainContent = document.getElementById('mainContent');\n  \n  // Clear previous content\n  mainContent.innerHTML = '';\n  \n  // Create product details container\n  const productDetailsContainer = document.createElement('div');\n  productDetailsContainer.className = 'product-details-container';\n  \n  // Create header with back button at top right\n  productDetailsContainer.innerHTML = `\n    <div class=\"product-header\">\n      <h2>Product Details</h2>\n      <button class=\"back-button\" onclick=\"showProductsView()\">Back</button>\n    </div>\n    \n    <div class=\"product-title-section\">\n      <h3>${product.name}</h3>\n      \n      <div class=\"product-basic-info\">\n        ${product.requirements ? `\n          <div class=\"requirements-section\">\n            <h4>Requirements</h4>\n            ${product.requirements.mechanical ? `<p><strong>Mechanical:</strong> ${product.requirements.mechanical}</p>` : ''}\n            ${product.requirements.electrical ? `<p><strong>Electrical:</strong> ${product.requirements.electrical}</p>` : ''}\n            ${product.requirements.environmental ? `<p><strong>Environmental:</strong> ${product.requirements.environmental}</p>` : ''}\n            ${product.requirements.thermal ? `<p><strong>Thermal:</strong> ${product.requirements.thermal}</p>` : ''}\n            ${product.requirements.performance ? `<p><strong>Performance:</strong> ${product.requirements.performance}</p>` : ''}\n          </div>\n        ` : ''}\n        \n        ${product.businessCase ? `\n          <div class=\"business-case-section\">\n            <h4>Business Case</h4>\n            ${product.businessCase.costSavings ? `<p><strong>Cost Savings:</strong> ${product.businessCase.costSavings}</p>` : ''}\n            ${product.businessCase.scheduleSavings ? `<p><strong>Schedule Savings:</strong> ${product.businessCase.scheduleSavings}</p>` : ''}\n            ${product.businessCase.performanceGains ? `<p><strong>Performance Gains:</strong> ${product.businessCase.performanceGains}</p>` : ''}\n          </div>\n        ` : ''}\n        \n        ${product.productSupplyChain ? `<p><strong>Make/Buy:</strong> ${product.productSupplyChain}</p>` : ''}\n      </div>\n    </div>\n  `;\n  \n  // Append product details container to main content\n  mainContent.appendChild(productDetailsContainer);\n  \n  // Create quad box container\n  const quadBoxContainer = document.createElement('div');\n  quadBoxContainer.className = 'quad-box-container';\n  mainContent.appendChild(quadBoxContainer);\n  \n  // Create quad box visualization - ensure the container is in the DOM first\n  setTimeout(() => {\n    console.log('Creating quad box for:', product.name);\n    if (typeof createQuadBox === 'function') {\n      createQuadBox(product, quadBoxContainer);\n    } else {\n      console.error('createQuadBox function not found');\n      quadBoxContainer.innerHTML = '<p>Error: Unable to load visualization</p>';\n    }\n  }, 0);\n  \n  // Create related programs section\n  if (product.programs && product.programs.length > 0) {\n    const relatedProgramsContainer = document.createElement('div');\n    relatedProgramsContainer.className = 'related-programs-container';\n    \n    // Get program details\n    const relatedPrograms = product.programs.map(programId => \n      roadmapData.programs.find(p => p.id === programId)\n    ).filter(Boolean);\n    \n    if (relatedPrograms.length > 0) {\n      relatedProgramsContainer.innerHTML = `\n        <h3>Related Programs</h3>\n        <div class=\"program-cards\">\n          ${relatedPrograms.map(program => `\n            <div class=\"program-card\">\n              <h4>${program.name}</h4>\n              <p><span class=\"status-indicator ${getStatusClass(program)}\"></span> ${getStatusText(program)}</p>\n            </div>\n          `).join('')}\n        </div>\n      `;\n      \n      mainContent.appendChild(relatedProgramsContainer);\n    }\n  }\n  \n  // Add CSS for the product details page\n  const style = document.createElement('style');\n  style.textContent = `\n    .product-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n    }\n    \n    .back-button {\n      background-color: #0056b3;\n      color: white;\n      border: none;\n      padding: 8px 16px;\n      border-radius: 4px;\n      cursor: pointer;\n      font-weight: bold;\n    }\n    \n    .product-title-section {\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      padding: 20px;\n      margin-bottom: 30px;\n      border-left: 5px solid #6a1b9a;\n    }\n    \n    .product-title-section h3 {\n      color: #6a1b9a;\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 24px;\n    }\n    \n    .product-basic-info {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 20px;\n    }\n    \n    .requirements-section, .business-case-section {\n      background-color: white;\n      border-radius: 6px;\n      padding: 15px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n    }\n    \n    .requirements-section h4, .business-case-section h4 {\n      margin-top: 0;\n      color: #333;\n      border-bottom: 1px solid #ddd;\n      padding-bottom: 8px;\n      margin-bottom: 12px;\n    }\n    \n    .related-programs-container {\n      margin-top: 30px;\n    }\n    \n    .program-cards {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 15px;\n    }\n    \n    .program-card {\n      background-color: #f8f9fa;\n      border-radius: 6px;\n      padding: 15px;\n      min-width: 200px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n    }\n    \n    .program-card h4 {\n      margin-top: 0;\n      margin-bottom: 10px;\n    }\n    \n    .status-indicator {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      margin-right: 8px;\n    }\n    \n    .status-planned {\n      background-color: #2196F3;\n    }\n    \n    .status-in-progress {\n      background-color: #FF9800;\n    }\n    \n    .status-complete {\n      background-color: #4CAF50;\n    }\n    \n    .quad-box-container {\n      margin-bottom: 30px;\n    }\n  `;\n  \n  document.head.appendChild(style);\n}\n\nfunction getStatusClass(program) {\n  // Determine status based on dates or explicit status field\n  if (program.status) {\n    return `status-${program.status.toLowerCase().replace(' ', '-')}`;\n  }\n  \n  const now = new Date();\n  const needDate = program.needDate ? new Date(program.needDate) : null;\n  const closeDate = program.closeDate ? new Date(program.closeDate) : null;\n  \n  if (closeDate && now > closeDate) {\n    return 'status-complete';\n  } else if (needDate && now > needDate) {\n    return 'status-in-progress';\n  } else {\n    return 'status-planned';\n  }\n}\n\nfunction getStatusText(program) {\n  if (program.status) {\n    return program.status;\n  }\n  \n  const now = new Date();\n  const needDate = program.needDate ? new Date(program.needDate) : null;\n  const closeDate = program.closeDate ? new Date(program.closeDate) : null;\n  \n  if (closeDate && now > closeDate) {\n    return 'Complete';\n  } else if (needDate && now > needDate) {\n    return 'In Progress';\n  } else {\n    return 'Planned';\n  }\n}\n"}}},969:n=>{function e(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,o,r,s=[],l=!0,d=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(a=o.call(t)).done)&&(s.push(a.value),s.length!==e);l=!0);}catch(n){d=!0,i=n}finally{try{if(!l&&null!=t.return&&(r=t.return(),Object(r)!==r))return}finally{if(d)throw i}}return s}}(n,e)||function(n,e){if(n){if("string"==typeof n)return t(n,e);var a={}.toString.call(n).slice(8,-1);return"Object"===a&&n.constructor&&(a=n.constructor.name),"Map"===a||"Set"===a?Array.from(n):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?t(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=Array(e);t<e;t++)a[t]=n[t];return a}function a(n){return n?new Date(n).toLocaleDateString():"N/A"}function i(n,e){var t=(n||"").toLowerCase(),a="";if("complete"===t)a="complete";else if("in progress"===t){if(a="in-progress",e){var i=e.toLowerCase().replace(/\s+/g,"-");a+=" funding-".concat(i)}}else a="planned";return a}n.exports={generateRoadmapHtml:function(n,t,o){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;console.log("Generating roadmap HTML for product:",n.name),r?"string"==typeof r&&(r=new Date(r)):r=new Date;for(var s=r.getFullYear(),l=r.getMonth(),d=Math.floor(l/3)+1,c=[],p=s,u=d,m=0;m<12;m++)c.push("".concat(p,"-Q").concat(u)),++u>4&&(u=1,p++);var g=[];n.programs&&n.programs.length>0&&(n.programs.forEach((function(n){var e=t.find((function(e){return e.id===n}));e&&g.push(e)})),g.sort((function(n,e){return(n.needDate?new Date(n.needDate):new Date("9999-12-31"))-(e.needDate?new Date(e.needDate):new Date("9999-12-31"))})));var f,h,v,b,x='\n    <div class="roadmap-container">\n      <div class="roadmap-timeline-controls">\n        <label for="start-date">Start Date:</label>\n        <input type="date" id="start-date" class="start-date-picker" value="'.concat((h=""+((f=new Date(r)).getMonth()+1),v=""+f.getDate(),b=f.getFullYear(),h.length<2&&(h="0"+h),v.length<2&&(v="0"+v),[b,h,v].join("-")),'">\n      </div>\n      <div class="roadmap-timeline">\n        <div class="roadmap-header">\n          <div class="roadmap-header-lane">Date</div>');c.forEach((function(n){var t=e(n.split("-"),2),a=t[0],i=t[1];x+='<div class="roadmap-header-quarter">'.concat(a,"<br>").concat(i,"</div>")})),x+="</div>",x+='<div class="roadmap-row programs-row">\n    <div class="roadmap-lane-title">Programs</div>\n    <div class="roadmap-lane-content">';var y={};g.forEach((function(n){if(n.needDate){var e=new Date(n.needDate),t=e.getFullYear(),a=e.getMonth(),i=Math.floor(a/3)+1,o="".concat(t,"-Q").concat(i);y[o]||(y[o]=[]),y[o].push(n)}})),Object.keys(y).forEach((function(n){var e=c.indexOf(n);if(e>=0){var t=100*e+50;y[n].forEach((function(n,e){var i=30*e;x+='\n          <div class="program-marker" style="left: '.concat(t,"px; top: ").concat(i,'px;" title="').concat(n.name," Need Date: ").concat(a(n.needDate),'">\n            <div class="program-marker-point"></div>\n            <div class="program-marker-label">').concat(n.name,"</div>\n          </div>")}))}})),x+="</div></div>",x+='<div class="roadmap-row milestone-row">\n    <div class="roadmap-lane-title">Milestones</div>\n    <div class="roadmap-lane-content">';var w={};return n.milestones&&n.milestones.length>0&&n.milestones.forEach((function(n){var e=new Date(n.date),t=e.getFullYear(),a=e.getMonth(),i=Math.floor(a/3)+1,o="".concat(t,"-Q").concat(i);w[o]||(w[o]=[]),w[o].push(n)})),Object.keys(w).forEach((function(n){var e=c.indexOf(n);if(e>=0){var t=100*e+50;w[n].forEach((function(n,e){var a=30*e;x+='\n          <div class="roadmap-milestone" style="left: '.concat(t,"px; top: ").concat(a,'px;" title="').concat(n.name,": ").concat(n.description,'">\n            <div class="milestone-marker"></div>\n            <div class="milestone-label">').concat(n.name,"</div>\n          </div>")}))}})),x+="</div></div>",["Design","Manufacturing","M&P","Quality"].forEach((function(t){if(x+='\n      <div class="roadmap-row">\n        <div class="roadmap-lane-title">'.concat(t,'</div>\n        <div class="roadmap-lane-content" data-lane="').concat(t,'">'),"M&P"===t&&n.materialSystems&&n.materialSystems.length>0){var r={};n.materialSystems.forEach((function(n){var e=o.find((function(e){return e.id===n}));e&&e.roadmap&&e.roadmap.length>0&&e.roadmap.forEach((function(t){var a=new Date(t.start),i=new Date(t.end),o=a.getFullYear(),s=a.getMonth(),l=Math.floor(s/3)+1,d="".concat(o,"-Q").concat(l),p=i.getFullYear(),u=i.getMonth(),m=Math.floor(u/3)+1,g="".concat(p,"-Q").concat(m),f=c.indexOf(d),h=c.indexOf(g);if(h>=0){var v=0,b=0;f>=0?(v=100*f,b=100*(h-f+1)):(v=0,b=100*(h+1));var x="".concat(v,"-").concat(b);r[x]||(r[x]=[]),r[x].push({task:t,materialId:n,materialName:e.name})}}))})),Object.keys(r).forEach((function(n){var t=e(n.split("-").map(Number),2),o=t[0],s=t[1];r[n].forEach((function(n,e){var t=n.task,r=n.materialName,l=i(t.status,t.fundingType),d=30*e;x+='\n            <div class="roadmap-task '.concat(l,'" \n                 style="left: ').concat(o,"px; width: ").concat(s,"px; top: ").concat(d,'px;"\n                 title="').concat(t.task," (").concat(r,"): ").concat(a(t.start)," - ").concat(a(t.end)).concat(t.fundingType?" | Funding: "+t.fundingType:"",'">\n              <div class="task-label">').concat(t.task," (").concat(r,")</div>\n            </div>")}))}))}if(n.roadmap&&n.roadmap.length>0){var s={};n.roadmap.forEach((function(n){if(n.lane===t){var e=new Date(n.start),a=new Date(n.end),i=e.getFullYear(),o=e.getMonth(),r=Math.floor(o/3)+1,l="".concat(i,"-Q").concat(r),d=a.getFullYear(),p=a.getMonth(),u=Math.floor(p/3)+1,m="".concat(d,"-Q").concat(u),g=c.indexOf(l),f=c.indexOf(m);if(f>=0){var h=0,v=0;g>=0?(h=100*g,v=100*(f-g+1)):(h=0,v=100*(f+1));var b="".concat(h,"-").concat(v);s[b]||(s[b]=[]),s[b].push(n)}}})),Object.keys(s).forEach((function(n){var t=e(n.split("-").map(Number),2),o=t[0],r=t[1];s[n].forEach((function(n,e){var t=i(n.status,n.fundingType),s=30*e;x+='\n            <div class="roadmap-task '.concat(t,'" \n                 style="left: ').concat(o,"px; width: ").concat(r,"px; top: ").concat(s,'px;"\n                 title="').concat(n.task,": ").concat(a(n.start)," - ").concat(a(n.end)).concat(n.fundingType?" | Funding: "+n.fundingType:"",'">\n              <div class="task-label">').concat(n.task,"</div>\n            </div>")}))}))}x+="</div>\n      </div>"})),x+="</div>",x+='\n    <div class="roadmap-key">\n      <h4>Roadmap Key</h4>\n      <div class="key-items">\n        <div class="key-item">\n          <div class="key-color planned"></div>\n          <div class="key-label">Planned</div>\n        </div>\n        <div class="key-item">\n          <div class="key-color in-progress funding-sector-irad"></div>\n          <div class="key-label">In Development (Sector IRAD)</div>\n        </div>\n        <div class="key-item">\n          <div class="key-color in-progress funding-division-irad"></div>\n          <div class="key-label">In Development (Division IRAD)</div>\n        </div>\n        <div class="key-item">\n          <div class="key-color in-progress funding-crad"></div>\n          <div class="key-label">In Development (CRAD)</div>\n        </div>\n        <div class="key-item">\n          <div class="key-color complete"></div>\n          <div class="key-label">Complete</div>\n        </div>\n      </div>\n      <p class="roadmap-source-note">Roadmap tasks are sourced from the product\'s roadmap data and the selected material system.</p>\n    </div>'}}}},e={};function t(a){var i=e[a];if(void 0!==i)return i.exports;var o=e[a]={id:a,loaded:!1,exports:{}};return n[a](o,o.exports,t),o.loaded=!0,o.exports}t.c=e,t.nmd=n=>(n.paths=[],n.children||(n.children=[]),n);var a=t(t.s=781);module.exports=a})();
//# sourceMappingURL=interactiveRoadmap.js.map