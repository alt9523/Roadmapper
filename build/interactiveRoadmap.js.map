{"version":3,"file":"interactiveRoadmap.js","mappings":"iCAAAA,EAAOC,QAAUC,QAAQ,K,eCCzB,IAAMC,EAAMD,EAAQ,KACdE,EAAaF,EAAQ,KAa3BF,EAAOC,QAXP,WACE,IAAMI,EAAM,IAAIF,EAAI,CAClBG,WAAW,EACXC,QAAQ,EACRC,cAAc,IAIhB,OADAJ,EAAWC,GACJA,CACT,C,SCiRAL,EAAOC,QAAU,CAAEQ,iBA1RnB,WACE,MAAO,+iMAuRT,E,UC7HAT,EAAOC,QAAU,CAAES,mBA3JnB,WAEE,OADAC,QAAQC,IAAI,mCACL,4oJAuJT,E,UCzHAZ,EAAOC,QAAU,CACfY,kBA5BF,SAA2BC,GACzB,IACE,OAAOC,KAAKC,UAAUF,GACnBG,QAAQ,KAAM,UACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,OACnB,CAAE,MAAOC,GAEP,OADAP,QAAQO,MAAM,2BAA4BA,GACnC,IACT,CACF,EAmBEC,aAZF,SAAsBL,GACpB,MAAO,CACLM,SAAUC,MAAMC,QAAQR,EAAKM,UAAYN,EAAKM,SAAW,GACzDG,SAAUF,MAAMC,QAAQR,EAAKS,UAAYT,EAAKS,SAAW,GACzDC,gBAAiBH,MAAMC,QAAQR,EAAKU,iBAAmBV,EAAKU,gBAAkB,GAC9EC,UAAWJ,MAAMC,QAAQR,EAAKW,WAAaX,EAAKW,UAAY,GAC5DC,kBAAmBL,MAAMC,QAAQR,EAAKY,mBAAqBZ,EAAKY,kBAAoB,GAExF,E,UCkkCA1B,EAAOC,QAAU,CAAE0B,UAhmCnB,WACE,MAAO,iqvBA6lCT,E,UCrwBA3B,EAAOC,QAAU,CAAE2B,WAxVnB,SAAoBC,GAClB,MAAO,qMAAPC,OAQ4BD,EAAc,21BAAAC,OAgBZD,EAAeE,UAAU,EAAG,KAAI,kgUA6ThE,E,UCxQA/B,EAAOC,QAAU,CAAE+B,kBA/EnB,WACE,MAAO,+mFA4ET,E,gBChFA,IAAMC,EAAO/B,EAAQ,KAGrBF,EAAOC,QAAU,CACfiC,aAAcD,EAAKE,QAAQC,UAAW,mBACtCC,eAAgBJ,EAAKE,QAAQC,UAAW,yBACxCE,YAAaL,EAAKE,QAAQC,UAAW,aACrCG,sBAAuBN,EAAKE,QAAQC,UAAW,0B,UCwCjDpC,EAAOC,QAAU,CAAEuC,cA5CnB,WACE,MAAO,whCAyCT,E,uBC9CAxC,EAAOC,QAAUC,QAAQ,c,gBCGzB,IAAQiB,EAAiBjB,EAAQ,KAAzBiB,aAqCR,SAASsB,EAAgB3B,GACvB,IAAM4B,EAAWvB,EAAaL,GAE9B,MAAO,sMAAPgB,OAOIY,EAAStB,SAASuB,KAAI,SAAAC,GAAO,oDAAAd,OACQc,EAAQC,GAAE,uCAAAf,OACpBc,EAAQE,KAAI,kDAAAhB,OACLc,EAAQG,aAAe,2BAA0B,mIAAAjB,OAGxCc,EAAQI,OAASJ,EAAQI,OAAOC,cAAchC,QAAQ,OAAQ,KAAO,UAAS,yBAAAa,OACnHc,EAAQI,QAAU,UAAS,2CAGhCE,KAAK,IAAG,8HAQf,CAOA,SAASC,EAAgBrC,GACvB,IAAM4B,EAAWvB,EAAaL,GAE9B,MAAO,sMAAPgB,OAOIY,EAASnB,SAASoB,KAAI,SAAAS,GAAO,oDAAAtB,OACQsB,EAAQP,GAAE,uCAAAf,OACpBsB,EAAQN,KAAI,kGAAAhB,OAGjCsB,EAAQhC,UAAYgC,EAAQhC,SAASiC,OAAS,EAC5CD,EAAQhC,SAASuB,KAAI,SAAAW,GACnB,IAAMC,EAAOb,EAAStB,SAASoC,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAOS,CAAM,IACxD,OAAOC,EAAOA,EAAKT,KAAOQ,CAC5B,IAAGJ,KAAK,MACR,OAAM,2CAGbA,KAAK,IAAG,6WAcf,CAOA,SAASQ,EAAuB5C,GAC9B,IAAM4B,EAAWvB,EAAaL,GAE9B,MAAO,0NAAPgB,OAOIY,EAASlB,gBAAgBmB,KAAI,SAAAgB,GAAQ,qDAAA7B,OACC6B,EAASd,GAAE,uCAAAf,OACtB6B,EAASb,KAAI,gGAAAhB,OAEF6B,EAASC,eAAiB,MAAK,wGAAA9B,OAGvC6B,EAASE,oBAAsB,MAAK,2CAGjEX,KAAK,IAAG,+UAaf,CAOA,SAASY,EAAiBhD,GACxB,IAAM4B,EAAWvB,EAAaL,GAE9B,MAAO,6MAAPgB,OAOIY,EAASjB,UAAUkB,KAAI,SAAAoB,GAAQ,qDAAAjC,OACOiC,EAASlB,GAAE,uCAAAf,OACtBiC,EAASjB,KAAI,wFAAAhB,OAENiC,EAASC,WAAaD,EAASC,UAAUX,OAAS,EAC5EU,EAASC,UAAUrB,KAAI,SAAAsB,GACrB,IAAMC,EAAMxB,EAASlB,gBAAgBgC,MAAK,SAAAW,GAAC,OAAIA,EAAEtB,KAAOoB,CAAK,IAC7D,OAAOC,EAAMA,EAAIpB,KAAOmB,CAC1B,IAAGf,KAAK,MACR,MAAK,2CAGZA,KAAK,IAAG,sTAaf,CAOA,SAASkB,EAA4BtD,GACnC,IAAM4B,EAAWvB,EAAaL,GAE9B,MAAO,+NAAPgB,OAOIY,EAAShB,kBAAkBiB,KAAI,SAAA0B,GAAW,wDAAAvC,OACDuC,EAAYxB,GAAE,uCAAAf,OAC5BuC,EAAYvB,KAAI,8CAAAhB,OACbuC,EAAYC,SAAW,uBAAsB,oBAAAxC,OACvEuC,EAAYE,SAAW,mFAAHzC,OAEW,IAAI0C,KAAKH,EAAYE,UAAUE,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAY,gCAE5I,GAAE,2BAEP1B,KAAK,IAAG,mVAaf,CAmCAlD,EAAOC,QAAU,CACf4E,iBArQF,WACE,MAAO,s6BAuBT,EA8OEpC,gBAAAA,EACAU,gBAAAA,EACAO,uBAAAA,EACAI,iBAAAA,EACAM,4BAAAA,EACAU,mBApCF,WACE,MAAO,+MAST,EA2BEC,YApBF,SAAqBjE,GACnB,MAAO,KAAPgB,OAxPO,u6BAyPW,MAAAA,OAClBW,EAAgB3B,GAAK,MAAAgB,OACrBqB,EAAgBrC,GAAK,MAAAgB,OACrB4B,EAAuB5C,GAAK,MAAAgB,OAC5BgC,EAAiBhD,GAAK,MAAAgB,OACtBsC,EAA4BtD,GAAK,MAAAgB,OAvB1B,gNAwBa,WAEtB,E,UC1LA9B,EAAOC,QAAU,CAAE+E,qBA7EnB,WAEE,OADArE,QAAQC,IAAI,qCACL,w3EAyET,E,UC2JAZ,EAAOC,QAAU,CAAEgF,mBAtOnB,WACE,MAAO,k/MAmOT,E,2BCvOA,IAAMC,EAAKhF,EAAQ,IAEXiF,GADKjF,EAAQ,KACFA,EAAQ,KAAnBiF,QACAC,EAAwBlF,EAAQ,KAAhCkF,oBACRC,EAA6EnF,EAAQ,KAA7EgC,EAAYmD,EAAZnD,aAAcG,EAAcgD,EAAdhD,eAAgBC,EAAW+C,EAAX/C,YAAaC,EAAqB8C,EAArB9C,sBAC7C+C,EAAYpF,EAAQ,IAClBqF,EAAyBrF,EAAQ,KAAjCqF,qBAGFlF,EAAMiF,IAEZ,SAASE,IACP,IACE,IAAM1E,EAAOC,KAAK0E,MAAMP,EAAGQ,aAAaxD,EAAc,SAChDyD,EAAetF,EAAIuF,QAAQT,GAGjC,IAFcQ,EAAa7E,GAIzB,YADAH,QAAQO,MAAM,0BAA4BH,KAAKC,UAAU2E,EAAaE,OAAQ,KAAM,IAItFlF,QAAQC,IAAI,+BACZ,IAAMkF,EAAcV,EAAoBtE,GACfyE,IACzBL,EAAGa,cAAc1D,EAAgByD,EAAa,QAC9CnF,QAAQC,IAAI,wCAA0CyB,GACtD2D,IACArF,QAAQC,IAAI,oCACd,CAAE,MAAOqF,GACPtF,QAAQO,MAAM,4BAA8B+E,EAC9C,CACF,CAEA,SAASD,IACP,IACOd,EAAGgB,WAAW5D,KACjB4C,EAAGiB,UAAU7D,EAAa,CAAE8D,WAAW,IACvCzF,QAAQC,IAAI,8BAAgC0B,IAE9C4C,EAAGmB,aAAahE,EAAgBE,GAChC5B,QAAQC,IAAI,oDAAsD2B,EACpE,CAAE,MAAO0D,GACPtF,QAAQO,MAAM,8CAAgD+E,EAChE,CACF,CAGAjG,EAAOC,QAAU,CACfuF,UAAAA,EACAQ,iBAAAA,GAIE9F,EAAAA,EAAAA,EAAAA,KAAiBF,IACnBwF,IAGAN,EAAGoB,MAAMpE,GAAc,SAASqE,EAAWC,GACrCA,GAA0B,WAAdD,IACd5F,QAAQC,IAAI4F,EAAW,+EACvBhB,IAEJ,I,UC6bFxF,EAAOC,QAAU,CAAEwG,qBAzfnB,WACE,MAAO,gxjBAsfT,E,gBCvfgCvG,EAAQ,KAAhCwG,oBAAR,IACQ1B,EAAyB9E,EAAQ,KAAjC8E,qBACAyB,EAAyBvG,EAAQ,KAAjCuG,qBACAzE,EAAsB9B,EAAQ,KAA9B8B,kBACA2E,EAAsBzG,EAAQ,KAA9ByG,kBACA1B,EAAuB/E,EAAQ,KAA/B+E,mBACAvE,EAAuBR,EAAQ,KAA/BQ,mBACA8B,EAAkBtC,EAAQ,KAA1BsC,cAwIRxC,EAAOC,QAAU,CAAEsF,qBAtInB,WACE,MAAO,qkGAAPzD,OAwFAU,IAAe,uEAAAV,OAGfkD,IAAsB,MAAAlD,OACtB2E,IAAsB,2EAAA3E,OAGtBE,IAAoBf,QAAQ,kBAAmB,yBAAwB,MAAAa,OACvE6E,IAAoB1F,QAAQ,kBAAmB,yBAAwB,MAAAa,OACvEmD,IAAqBhE,QAAQ,kBAAmB,yBAAwB,MAAAa,OACxEpB,IAAqBO,QAAQ,kBAAmB,yBAAwB,ijCAiC1E,E,sPC5IA,IAAA2F,EAA4C1G,EAAQ,KAA5CiB,EAAYyF,EAAZzF,aACAQ,GAD+BiF,EAAjB/F,kBACAX,EAAQ,KAAtByB,WACAoD,EAAgB7E,EAAQ,KAAxB6E,YAEAQ,GADerF,EAAQ,KAAvB0B,WACyB1B,EAAQ,KAAjCqF,sBACA9E,EAAqBP,EAAQ,IAA7BO,iBA+aRT,EAAOC,QAAU,CAAEmF,oBA7anB,SAA6BtE,GAC3BH,QAAQC,IAAI,qCAAsCE,GAG7CA,GAAwB,WAAhB+F,EAAO/F,KAClBH,QAAQO,MAAM,qCAAsCJ,GACpDA,EAAO,CAAEM,SAAU,GAAIG,SAAU,GAAIC,gBAAiB,GAAIC,UAAW,GAAIC,kBAAmB,KAI9F,IAAMgB,EAAWvB,EAAaL,GAE9BH,QAAQC,IAAI,kBAAmB8B,GAC/B/B,QAAQC,IAAI,YAAa8B,EAAStB,SAASiC,QAC3C1C,QAAQC,IAAI,YAAa8B,EAASnB,SAAS8B,QAGV,IAA7BX,EAAStB,SAASiC,SACpB1C,QAAQmG,KAAK,kEACbpE,EAAStB,SAAS2F,KAAK,CACrBlE,GAAI,UACJC,KAAM,iBACNC,YAAa,6CACbC,OAAQ,UACRgE,MAAO,MAMX,IAAMC,EAAa,mEAAHnF,OAEVf,KAAKC,UAAU0B,GAAS,wBAI9B,MAAO,mMAAPZ,OAOAH,IAAW,MAAAG,OACXrB,IAAkB,wLAAAqB,OAUhBmF,EAAU,UAAAnF,OAEZiD,EAAYrC,GAAS,kBAAAZ,OAWd,s1XATgB,MAAAA,OACvByD,IAAsB,mCAIxB,E,uBC3EAvF,EAAOC,QAAUC,QAAQ,O,uBCAzBF,EAAOC,QAAUC,QAAQ,M,UCoGzBF,EAAOC,QAAU,CAAEkF,OAnGJ,CACb+B,KAAM,SACNC,WAAY,CACV/F,SAAU,CACR8F,KAAM,QACNE,MAAO,CACLF,KAAM,SACNC,WAAY,CACVtE,GAAI,CAAEqE,KAAM,UACZpE,KAAM,CAAEoE,KAAM,UACdnE,YAAa,CAAEmE,KAAM,UACrBF,MAAO,CACLE,KAAM,QACNE,MAAO,CACLF,KAAM,SACNC,WAAY,CACVtE,GAAI,CAAEqE,KAAM,UACZpE,KAAM,CAAEoE,KAAM,UACdnE,YAAa,CAAEmE,KAAM,UACrBG,UAAW,CAAEH,KAAM,SAAUI,OAAQ,QACrCC,QAAS,CAAEL,KAAM,SAAUI,OAAQ,QACnCtE,OAAQ,CAAEkE,KAAM,WAElBM,SAAU,CAAC,KAAM,WAIvBA,SAAU,CAAC,KAAM,UAGrBjG,SAAU,CACR2F,KAAM,QACNE,MAAO,CACLF,KAAM,SACNC,WAAY,CACVtE,GAAI,CAAEqE,KAAM,UACZpE,KAAM,CAAEoE,KAAM,UACdnE,YAAa,CAAEmE,KAAM,UACrB9F,SAAU,CACR8F,KAAM,QACNE,MAAO,CAAEF,KAAM,WAEjBO,mBAAoB,CAAEP,KAAM,WAE9BM,SAAU,CAAC,KAAM,UAGrBhG,gBAAiB,CACf0F,KAAM,QACNE,MAAO,CACLF,KAAM,SACNC,WAAY,CACVtE,GAAI,CAAEqE,KAAM,UACZpE,KAAM,CAAEoE,KAAM,UACdtD,cAAe,CAAEsD,KAAM,UACvBrD,mBAAoB,CAAEqD,KAAM,UAC5BQ,YAAa,CAAER,KAAM,UACrBS,YAAa,CACXT,KAAM,QACNE,MAAO,CAAEF,KAAM,YAGnBM,SAAU,CAAC,KAAM,UAGrB9F,kBAAmB,CACjBwF,KAAM,QACNE,MAAO,CACLF,KAAM,SACNC,WAAY,CACVtE,GAAI,CAAEqE,KAAM,UACZpE,KAAM,CAAEoE,KAAM,UACdU,cAAe,CAAEV,KAAM,UACvB5C,QAAS,CAAE4C,KAAM,WAEnBM,SAAU,CAAC,KAAM,UAGrB/F,UAAW,CACTyF,KAAM,QACNE,MAAO,CACLF,KAAM,SACNC,WAAY,CACVtE,GAAI,CAAEqE,KAAM,UACZpE,KAAM,CAAEoE,KAAM,UACdlD,UAAW,CACTkD,KAAM,QACNE,MAAO,CAAEF,KAAM,WAEjBW,uBAAwB,CAAEX,KAAM,WAElCM,SAAU,CAAC,KAAM,WAKvBA,SAAU,CAAC,a,UCsJbxH,EAAOC,QAAU,CAAE0G,kBAnPnB,WAEE,OADAhG,QAAQC,IAAI,kCACL,gvOA+OT,E,0gCC5OA,SAASkH,EAAWC,GAClB,OAAKA,EACQ,IAAIvD,KAAKuD,GACVtD,qBAFY,KAG1B,CAyBA,SAASuD,EAAqBhF,EAAQiF,GACpC,IAAMC,GAAelF,GAAU,IAAIC,cAC/BkF,EAAU,GAEd,GAAoB,aAAhBD,EACFC,EAAU,gBACL,GAAoB,gBAAhBD,GAIT,GAHAC,EAAU,cAGNF,EAAa,CACf,IAAMG,EAAmBH,EAAYhF,cAAchC,QAAQ,OAAQ,KACnEkH,GAAW,YAAJrG,OAAgBsG,EACzB,OAEAD,EAAU,UAGZ,OAAOA,CACT,CA4WAnI,EAAOC,QAAU,CAAEyG,oBAlWnB,SAA6BtD,EAASiF,EAAaC,GAAgC,IAAlBjB,EAASkB,UAAAlF,OAAA,QAAAmF,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC3E5H,QAAQC,IAAI,uCAAwCwC,EAAQN,MAGvDuE,EAE2B,iBAAdA,IAChBA,EAAY,IAAI7C,KAAK6C,IAFrBA,EAAY,IAAI7C,KAelB,IATA,IAAMiE,EAAYpB,EAAUqB,cACtBC,EAAatB,EAAUuB,WACvBC,EAAeC,KAAKC,MAAMJ,EAAa,GAAK,EAG5CK,EAAW,GACbC,EAAcR,EACdS,EAAiBL,EAEZM,EAAI,EAAGA,EAAI,GAAIA,IACtBH,EAASjC,KAAK,GAADjF,OAAImH,EAAW,MAAAnH,OAAKoH,MACjCA,EACqB,IACnBA,EAAiB,EACjBD,KAKJ,IAAMG,EAAkB,GACpBhG,EAAQhC,UAAYgC,EAAQhC,SAASiC,OAAS,IAChDD,EAAQhC,SAASiI,SAAQ,SAAAC,GACvB,IAAM1G,EAAUyF,EAAY7E,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAOyG,CAAS,IACpD1G,GACFwG,EAAgBrC,KAAKnE,EAEzB,IAGAwG,EAAgBG,MAAK,SAACC,EAAGC,GAGvB,OAFcD,EAAEE,SAAW,IAAIlF,KAAKgF,EAAEE,UAAY,IAAIlF,KAAK,gBAC7CiF,EAAEC,SAAW,IAAIlF,KAAKiF,EAAEC,UAAY,IAAIlF,KAAK,cAE7D,KAIF,IA9FMmF,EACFhF,EACAC,EACEF,EA2FFkF,EAAO,0NAAH9H,QA7FJ6C,EAAQ,KADNgF,EAAI,IAAInF,KAkGiF6C,IAjG3EuB,WAAa,GAC7BhE,EAAM,GAAK+E,EAAEE,UACXnF,EAAOiF,EAAEjB,cAEX/D,EAAMtB,OAAS,IAAGsB,EAAQ,IAAMA,GAChCC,EAAIvB,OAAS,IAAGuB,EAAM,IAAMA,GAEzB,CAACF,EAAMC,EAAOC,GAAK1B,KAAK,MA0F0E,uJAOzG8F,EAASK,SAAQ,SAAAS,GACf,IAAoCC,EAAAC,EAAlBF,EAAQG,MAAM,KAAI,GAA7BvF,EAAIqF,EAAA,GAAEG,EAACH,EAAA,GACdH,GAAQ,uCAAJ9H,OAA2C4C,EAAI,QAAA5C,OAAOoI,EAAC,SAC7D,IAEAN,GAAQ,SAGRA,GAAQ,qIAKR,IAAMO,EAAoB,CAAC,EAE3Bf,EAAgBC,SAAQ,SAAAzG,GACtB,GAAIA,EAAQ8G,SAAU,CACpB,IAAMA,EAAW,IAAIlF,KAAK5B,EAAQ8G,UAC5BU,EAAWV,EAAShB,cACpB2B,EAAYX,EAASd,WACrB0B,EAAcxB,KAAKC,MAAMsB,EAAY,GAAK,EAC1CE,EAAiB,GAAHzI,OAAMsI,EAAQ,MAAAtI,OAAKwI,GAElCH,EAAkBI,KACrBJ,EAAkBI,GAAkB,IAEtCJ,EAAkBI,GAAgBxD,KAAKnE,EACzC,CACF,IAGA4H,OAAOC,KAAKN,GAAmBd,SAAQ,SAAAS,GACrC,IAAMY,EAAe1B,EAAS2B,QAAQb,GACtC,GAAIY,GAAgB,EAAG,CACrB,IAAME,EAA0B,IAAfF,EAAqB,GACrBP,EAAkBL,GAE1BT,SAAQ,SAACzG,EAASiI,GAEzB,IAAMC,EAAyB,GAARD,EACvBjB,GAAQ,wDAAJ9H,OACyC8I,EAAQ,aAAA9I,OAAYgJ,EAAc,gBAAAhJ,OAAec,EAAQE,KAAI,gBAAAhB,OAAegG,EAAWlF,EAAQ8G,UAAS,4GAAA5H,OAE7Gc,EAAQE,KAAI,2BAEtD,GACF,CACF,IAEA8G,GAAQ,eAGRA,GAAQ,wIAKR,IAAMmB,EAAsB,CAAC,EA2O7B,OAzOI3H,EAAQ4H,YAAc5H,EAAQ4H,WAAW3H,OAAS,GACpDD,EAAQ4H,WAAW3B,SAAQ,SAAA4B,GACzB,IAAMC,EAAO,IAAI1G,KAAKyG,EAAUC,MAC1BxG,EAAOwG,EAAKxC,cACZ/D,EAAQuG,EAAKtC,WACbkB,EAAUhB,KAAKC,MAAMpE,EAAQ,GAAK,EAClCwG,EAAmB,GAAHrJ,OAAM4C,EAAI,MAAA5C,OAAKgI,GAEhCiB,EAAoBI,KACvBJ,EAAoBI,GAAoB,IAE1CJ,EAAoBI,GAAkBpE,KAAKkE,EAC7C,IAIFT,OAAOC,KAAKM,GAAqB1B,SAAQ,SAAAS,GACvC,IAAMY,EAAe1B,EAAS2B,QAAQb,GACtC,GAAIY,GAAgB,EAAG,CACrB,IAAME,EAA0B,IAAfF,EAAqB,GACnBK,EAAoBjB,GAE5BT,SAAQ,SAAC4B,EAAWJ,GAE7B,IAAMC,EAAyB,GAARD,EACvBjB,GAAQ,2DAAJ9H,OAC4C8I,EAAQ,aAAA9I,OAAYgJ,EAAc,gBAAAhJ,OAAemJ,EAAUnI,KAAI,MAAAhB,OAAKmJ,EAAUlI,YAAW,mGAAAjB,OAEtGmJ,EAAUnI,KAAI,2BAEnD,GACF,CACF,IAEA8G,GAAQ,eAGM,CAAC,SAAU,gBAAiB,MAAO,WAE3CP,SAAQ,SAAA+B,GAOZ,GANAxB,GAAQ,8EAAJ9H,OAEkCsJ,EAAI,iEAAAtJ,OACSsJ,EAAI,MAG1C,QAATA,GAAkBhI,EAAQ5B,iBAAmB4B,EAAQ5B,gBAAgB6B,OAAS,EAAG,CAEnF,IAAMgI,EAAyB,CAAC,EAGhCjI,EAAQ5B,gBAAgB6H,SAAQ,SAAAiC,GAC9B,IAAM3H,EAAW2E,EAAa9E,MAAK,SAAAW,GAAC,OAAIA,EAAEtB,KAAOyI,CAAU,IAEvD3H,GAAYA,EAAS4H,SAAW5H,EAAS4H,QAAQlI,OAAS,GAC5DM,EAAS4H,QAAQlC,SAAQ,SAAAmC,GAEvB,IAAMC,EAAgB,IAAIjH,KAAKgH,EAAKE,OAC9BC,EAAc,IAAInH,KAAKgH,EAAKI,KAE5BC,EAAgBJ,EAAc/C,cAC9BoD,EAAiBL,EAAc7C,WAC/BmD,EAAmBjD,KAAKC,MAAM+C,EAAiB,GAAK,EACpDE,EAAmB,GAAHlK,OAAM+J,EAAa,MAAA/J,OAAKiK,GAExCE,EAAcN,EAAYjD,cAC1BwD,EAAeP,EAAY/C,WAC3BuD,EAAiBrD,KAAKC,MAAMmD,EAAe,GAAK,EAChDE,EAAiB,GAAHtK,OAAMmK,EAAW,MAAAnK,OAAKqK,GAGpCE,EAAarD,EAAS2B,QAAQqB,GAC9BM,EAAWtD,EAAS2B,QAAQyB,GAGlC,GAAIE,GAAY,EAAG,CACjB,IAAIC,EAAgB,EAChBC,EAAQ,EAERH,GAAc,GAEhBE,EAA6B,IAAbF,EAChBG,EAAsC,KAA7BF,EAAWD,EAAa,KAGjCE,EAAgB,EAChBC,EAAyB,KAAhBF,EAAW,IAItB,IAAMG,EAAS,GAAH3K,OAAMyK,EAAa,KAAAzK,OAAI0K,GAC9BnB,EAAuBoB,KAC1BpB,EAAuBoB,GAAU,IAGnCpB,EAAuBoB,GAAQ1F,KAAK,CAClCyE,KAAAA,EACAF,WAAAA,EACAoB,aAAc/I,EAASb,MAE3B,CACF,GAEJ,IAGA0H,OAAOC,KAAKY,GAAwBhC,SAAQ,SAAAoD,GAC1C,IAA4DE,EAAA3C,EAA7ByC,EAAOxC,MAAM,KAAKtH,IAAIiK,QAAO,GAArDL,EAAaI,EAAA,GAAEH,EAAKG,EAAA,GACbtB,EAAuBoB,GAE/BpD,SAAQ,SAACwD,EAAShC,GACtB,IAAQW,EAAuBqB,EAAvBrB,KAAMkB,EAAiBG,EAAjBH,aACRI,EAAgB9E,EAAqBwD,EAAKxI,OAAQwI,EAAKvD,aAGvD6C,EAAyB,GAARD,EAEvBjB,GAAQ,0CAAJ9H,OACyBgL,EAAa,sCAAAhL,OACpByK,EAAa,eAAAzK,OAAc0K,EAAK,aAAA1K,OAAYgJ,EAAc,kCAAAhJ,OAChE0J,EAAKA,KAAI,MAAA1J,OAAK4K,EAAY,OAAA5K,OAAMgG,EAAW0D,EAAKE,OAAM,OAAA5J,OAAMgG,EAAW0D,EAAKI,MAAI9J,OAAG0J,EAAKvD,YAAc,eAAiBuD,EAAKvD,YAAc,GAAE,8CAAAnG,OAC9H0J,EAAKA,KAAI,MAAA1J,OAAK4K,EAAY,8BAE1D,GACF,GACF,CAGA,GAAItJ,EAAQmI,SAAWnI,EAAQmI,QAAQlI,OAAS,EAAG,CACjD,IAAM0J,EAAqB,CAAC,EAE5B3J,EAAQmI,QAAQlC,SAAQ,SAAAmC,GACtB,GAAIA,EAAKJ,OAASA,EAAM,CAEtB,IAAMK,EAAgB,IAAIjH,KAAKgH,EAAKE,OAC9BC,EAAc,IAAInH,KAAKgH,EAAKI,KAE5BC,EAAgBJ,EAAc/C,cAC9BoD,EAAiBL,EAAc7C,WAC/BmD,EAAmBjD,KAAKC,MAAM+C,EAAiB,GAAK,EACpDE,EAAmB,GAAHlK,OAAM+J,EAAa,MAAA/J,OAAKiK,GAExCE,EAAcN,EAAYjD,cAC1BwD,EAAeP,EAAY/C,WAC3BuD,EAAiBrD,KAAKC,MAAMmD,EAAe,GAAK,EAChDE,EAAiB,GAAHtK,OAAMmK,EAAW,MAAAnK,OAAKqK,GAGpCE,EAAarD,EAAS2B,QAAQqB,GAC9BM,EAAWtD,EAAS2B,QAAQyB,GAGlC,GAAIE,GAAY,EAAG,CACjB,IAAIC,EAAgB,EAChBC,EAAQ,EAERH,GAAc,GAEhBE,EAA6B,IAAbF,EAChBG,EAAsC,KAA7BF,EAAWD,EAAa,KAGjCE,EAAgB,EAChBC,EAAyB,KAAhBF,EAAW,IAItB,IAAMG,EAAS,GAAH3K,OAAMyK,EAAa,KAAAzK,OAAI0K,GAC9BO,EAAmBN,KACtBM,EAAmBN,GAAU,IAG/BM,EAAmBN,GAAQ1F,KAAKyE,EAClC,CACF,CACF,IAGAhB,OAAOC,KAAKsC,GAAoB1D,SAAQ,SAAAoD,GACtC,IAA4DO,EAAAhD,EAA7ByC,EAAOxC,MAAM,KAAKtH,IAAIiK,QAAO,GAArDL,EAAaS,EAAA,GAAER,EAAKQ,EAAA,GACbD,EAAmBN,GAE3BpD,SAAQ,SAACmC,EAAMX,GACnB,IAAMiC,EAAgB9E,EAAqBwD,EAAKxI,OAAQwI,EAAKvD,aAGvD6C,EAAyB,GAARD,EAEvBjB,GAAQ,0CAAJ9H,OACyBgL,EAAa,sCAAAhL,OACpByK,EAAa,eAAAzK,OAAc0K,EAAK,aAAA1K,OAAYgJ,EAAc,kCAAAhJ,OAChE0J,EAAKA,KAAI,MAAA1J,OAAKgG,EAAW0D,EAAKE,OAAM,OAAA5J,OAAMgG,EAAW0D,EAAKI,MAAI9J,OAAG0J,EAAKvD,YAAc,eAAiBuD,EAAKvD,YAAc,GAAE,8CAAAnG,OAC5G0J,EAAKA,KAAI,6BAEzC,GACF,GACF,CAEA5B,GAAQ,sBAEV,IAEAA,GAAQ,SAGRA,GAAQ,ilCA6BV,E,GClaIqD,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB3E,IAAjB4E,EACH,OAAOA,EAAanN,QAGrB,IAAID,EAASiN,EAAyBE,GAAY,CACjDtK,GAAIsK,EACJE,QAAQ,EACRpN,QAAS,CAAC,GAUX,OANAqN,EAAoBH,GAAUnN,EAAQA,EAAOC,QAASiN,GAGtDlN,EAAOqN,QAAS,EAGTrN,EAAOC,OACf,CAGAiN,EAAoBK,EAAIN,EC5BxBC,EAAoBM,IAAOxN,IAC1BA,EAAOyN,MAAQ,GACVzN,EAAO0N,WAAU1N,EAAO0N,SAAW,IACjC1N,GCAR,IAAI2N,EAAsBT,EAAoBA,EAAoBU,EAAI,K","sources":["webpack://interactive-roadmap/external commonjs2 \"fs\"","webpack://interactive-roadmap/./src/utils/ajv-config.js","webpack://interactive-roadmap/./src/html/roadmapStyles.js","webpack://interactive-roadmap/./src/html/handlers/supplierHandler.js","webpack://interactive-roadmap/./src/utils/templateUtils.js","webpack://interactive-roadmap/./src/html/styles.js","webpack://interactive-roadmap/./src/html/scripts.js","webpack://interactive-roadmap/./src/html/handlers/programHandler.js","webpack://interactive-roadmap/./src/config.js","webpack://interactive-roadmap/./src/html/utils/formatters.js","webpack://interactive-roadmap/external commonjs2 \"ajv-formats\"","webpack://interactive-roadmap/./src/html/views.js","webpack://interactive-roadmap/./src/html/visualizations/roadmapVisualizer.js","webpack://interactive-roadmap/./src/html/handlers/materialHandler.js","webpack://interactive-roadmap/./src/main.js","webpack://interactive-roadmap/./src/html/visualizations/quadBoxVisualizer.js","webpack://interactive-roadmap/./src/html/detailHandlers.js","webpack://interactive-roadmap/./src/html/template.js","webpack://interactive-roadmap/external commonjs2 \"path\"","webpack://interactive-roadmap/external commonjs2 \"ajv\"","webpack://interactive-roadmap/./src/schema.js","webpack://interactive-roadmap/./src/html/handlers/productHandler.js","webpack://interactive-roadmap/./src/html/roadmap.js","webpack://interactive-roadmap/webpack/bootstrap","webpack://interactive-roadmap/webpack/runtime/node module decorator","webpack://interactive-roadmap/webpack/startup"],"sourcesContent":["module.exports = require(\"fs\");","// Custom Ajv configuration to avoid bundling issues\r\nconst Ajv = require('ajv');\r\nconst addFormats = require('ajv-formats');\r\n\r\nfunction createAjv() {\r\n  const ajv = new Ajv({\r\n    allErrors: true,\r\n    strict: false,\r\n    strictSchema: false\r\n  });\r\n  \r\n  addFormats(ajv);\r\n  return ajv;\r\n}\r\n\r\nmodule.exports = createAjv; ","/**\r\n * Styles for the technical roadmap visualization\r\n */\r\n\r\nfunction getRoadmapStyles() {\r\n  return `\r\n    /* Roadmap Container Styles */\r\n    .roadmap-container {\r\n      margin-top: 20px;\r\n      border: 1px solid #ddd;\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n      background-color: #fff;\r\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n    }\r\n    \r\n    /* Timeline Controls */\r\n    .roadmap-timeline-controls {\r\n      padding: 10px;\r\n      background-color: #f5f5f5;\r\n      border-bottom: 1px solid #ddd;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    \r\n    .start-date-picker {\r\n      margin-left: 10px;\r\n      padding: 5px;\r\n      border-radius: 4px;\r\n      border: 1px solid #ccc;\r\n    }\r\n    \r\n    /* Timeline Styles */\r\n    .roadmap-timeline {\r\n      position: relative;\r\n      overflow-x: auto;\r\n    }\r\n    \r\n    /* Header Styles */\r\n    .roadmap-header {\r\n      display: flex;\r\n      border-bottom: 1px solid #ddd;\r\n      background-color: #f9f9f9;\r\n    }\r\n    \r\n    .roadmap-header-lane {\r\n      flex: 0 0 150px;\r\n      padding: 10px;\r\n      font-weight: bold;\r\n      border-right: 1px solid #ddd;\r\n    }\r\n    \r\n    .roadmap-header-quarter {\r\n      flex: 0 0 100px;\r\n      padding: 10px;\r\n      text-align: center;\r\n      font-weight: bold;\r\n      border-right: 1px solid #eee;\r\n    }\r\n    \r\n    /* Row Styles */\r\n    .roadmap-row {\r\n      display: flex;\r\n      border-bottom: 1px solid #ddd;\r\n      min-height: 60px;\r\n    }\r\n    \r\n    .roadmap-lane-title {\r\n      flex: 0 0 150px;\r\n      padding: 10px;\r\n      font-weight: bold;\r\n      background-color: #f5f5f5;\r\n      border-right: 1px solid #ddd;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    \r\n    .roadmap-lane-content {\r\n      flex: 1;\r\n      position: relative;\r\n      min-width: 1200px;\r\n    }\r\n    \r\n    /* Task Styles */\r\n    .roadmap-task {\r\n      position: absolute;\r\n      height: 25px;\r\n      border-radius: 4px;\r\n      padding: 4px;\r\n      overflow: hidden;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n      border: 1px solid rgba(255,255,255,0.2);\r\n      cursor: pointer;\r\n      transition: transform 0.1s, box-shadow 0.1s;\r\n    }\r\n    \r\n    .roadmap-task:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.3);\r\n      z-index: 10;\r\n    }\r\n    \r\n    .roadmap-task.complete {\r\n      background-color: #4CAF50;\r\n      border-color: #81C784;\r\n    }\r\n    \r\n    .roadmap-task.in-progress {\r\n      background-color: #42A5F5;\r\n      border-color: #90CAF9;\r\n    }\r\n    \r\n    .roadmap-task.in-progress.funding-sector-irad {\r\n      background-color: #AB47BC;\r\n      border-color: #CE93D8;\r\n    }\r\n    \r\n    .roadmap-task.in-progress.funding-division-irad {\r\n      background-color: #FFA726;\r\n      border-color: #FFCC80;\r\n    }\r\n    \r\n    .roadmap-task.in-progress.funding-crad {\r\n      background-color: #EC407A;\r\n      border-color: #F48FB1;\r\n    }\r\n    \r\n    .roadmap-task.planned {\r\n      background-color: #BDBDBD;\r\n      border-color: #E0E0E0;\r\n      color: #212121;\r\n    }\r\n    \r\n    .task-label {\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\r\n      color: white;\r\n    }\r\n    \r\n    .roadmap-task.planned .task-label {\r\n      color: #212121;\r\n      text-shadow: none;\r\n    }\r\n    \r\n    /* Program and Milestone Styles */\r\n    .milestone-row {\r\n      background-color: #f0f8ff;\r\n      border-bottom: 2px solid #00269A;\r\n    }\r\n    \r\n    .programs-row {\r\n      background-color: #f0f0ff;\r\n      border-bottom: 2px solid #00269A;\r\n    }\r\n    \r\n    .roadmap-milestone {\r\n      position: absolute;\r\n      top: 5px;\r\n      transform: translateX(-50%);\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 20px;\r\n    }\r\n    \r\n    .milestone-marker {\r\n      width: 20px;\r\n      height: 20px;\r\n      background-color: #4a89ff;\r\n      border-radius: 50%;\r\n      border: 2px solid white;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n    }\r\n    \r\n    .milestone-label {\r\n      margin-top: 5px;\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      white-space: nowrap;\r\n      transform: rotate(-45deg);\r\n      transform-origin: top left;\r\n    }\r\n    \r\n    .program-marker {\r\n      position: absolute;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n    \r\n    .program-marker-point {\r\n      width: 16px;\r\n      height: 16px;\r\n      background-color: #ff5722;\r\n      border-radius: 50%;\r\n      border: 2px solid white;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n    }\r\n    \r\n    .program-marker-label {\r\n      margin-top: 5px;\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      white-space: nowrap;\r\n    }\r\n    \r\n    /* Roadmap Key Styles */\r\n    .roadmap-key {\r\n      margin-top: 20px;\r\n      padding: 15px;\r\n      background-color: #f9f9f9;\r\n      border-radius: 8px;\r\n      border: 1px solid #ddd;\r\n    }\r\n    \r\n    .roadmap-key h4 {\r\n      margin-top: 0;\r\n      margin-bottom: 10px;\r\n    }\r\n    \r\n    .key-items {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 15px;\r\n    }\r\n    \r\n    .key-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n    \r\n    .key-color {\r\n      width: 20px;\r\n      height: 20px;\r\n      border-radius: 4px;\r\n    }\r\n    \r\n    .key-color.planned {\r\n      background-color: #BDBDBD;\r\n      border: 1px solid #E0E0E0;\r\n    }\r\n    \r\n    .key-color.in-progress {\r\n      background-color: #42A5F5;\r\n      border: 1px solid #90CAF9;\r\n    }\r\n    \r\n    .key-color.in-progress.funding-sector-irad {\r\n      background-color: #AB47BC;\r\n      border: 1px solid #CE93D8;\r\n    }\r\n    \r\n    .key-color.in-progress.funding-division-irad {\r\n      background-color: #FFA726;\r\n      border: 1px solid #FFCC80;\r\n    }\r\n    \r\n    .key-color.in-progress.funding-crad {\r\n      background-color: #EC407A;\r\n      border: 1px solid #F48FB1;\r\n    }\r\n    \r\n    .key-color.complete {\r\n      background-color: #4CAF50;\r\n      border: 1px solid #81C784;\r\n    }\r\n    \r\n    .key-label {\r\n      font-size: 14px;\r\n      color: #333;\r\n    }\r\n    \r\n    .roadmap-source-note {\r\n      margin-top: 10px;\r\n      font-size: 12px;\r\n      font-style: italic;\r\n      color: #666;\r\n    }\r\n  `;\r\n}\r\n\r\nmodule.exports = { getRoadmapStyles }; ","/**\r\n * Functions for handling supplier details\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getSupplierHandler() {\r\n  console.log('Loading supplier handler module');\r\n  return `\r\n// Supplier details handler\r\nfunction showSupplierDetails(supplier) {\r\n  console.log('Showing supplier details for:', supplier.name);\r\n  \r\n  // Get materials provided by this supplier\r\n  const relatedMaterials = roadmapData.materialSystems.filter(m => \r\n    supplier.materials && supplier.materials.includes(m.id)\r\n  );\r\n  \r\n  // Create the detail view HTML\r\n  let html = \\`\r\n    <div class=\"supplier-detail-content\">\r\n      <h2>\\${supplier.name}</h2>\r\n      \r\n      <div class=\"supplier-info\">\r\n        <p><strong>Location:</strong> \\${supplier.location || 'N/A'}</p>\r\n        <p><strong>Contact:</strong> \\${supplier.contact || 'N/A'}</p>\r\n        <p><strong>Website:</strong> \\${supplier.website ? \r\n          \\`<a href=\"\\${supplier.website}\" target=\"_blank\">\\${supplier.website}</a>\\` : 'N/A'}</p>\r\n        <p><strong>Capabilities:</strong> \\${supplier.capabilities || 'N/A'}</p>\r\n      </div>\r\n      \r\n      <h3>Provided Materials</h3>\r\n      <div class=\"supplier-materials\">\\`;\r\n  \r\n  // Add related materials\r\n  if (relatedMaterials.length > 0) {\r\n    html += \\`<ul class=\"material-list\">\\`;\r\n    relatedMaterials.forEach(material => {\r\n      html += \\`<li><a href=\"#\" class=\"material-link\" data-material-id=\"\\${material.id}\">\\${material.name}</a></li>\\`;\r\n    });\r\n    html += \\`</ul>\\`;\r\n  } else {\r\n    html += \\`<p>No specific materials listed for this supplier.</p>\\`;\r\n  }\r\n  \r\n  html += \\`</div>\r\n    \r\n    <h3>Certifications</h3>\r\n    <div class=\"supplier-certifications\">\\`;\r\n  \r\n  // Add certifications if they exist\r\n  if (supplier.certifications && supplier.certifications.length > 0) {\r\n    html += \\`<ul class=\"certification-list\">\\`;\r\n    supplier.certifications.forEach(cert => {\r\n      html += \\`<li>\\${cert}</li>\\`;\r\n    });\r\n    html += \\`</ul>\\`;\r\n  } else {\r\n    html += \\`<p>No certifications listed.</p>\\`;\r\n  }\r\n  \r\n  html += \\`</div>\r\n    \r\n    <h3>Notes</h3>\r\n    <div class=\"supplier-notes\">\r\n      <p>\\${supplier.notes || 'No additional notes available.'}</p>\r\n    </div>\r\n    \r\n    <button class=\"back-button\">Back</button>\r\n    </div>\\`;\r\n  \r\n  // Get or create the supplier detail section\r\n  let detailSection = document.getElementById('supplierDetailSection');\r\n  \r\n  // If the section doesn't exist, create it\r\n  if (!detailSection) {\r\n    console.log('Supplier detail section not found, creating it');\r\n    detailSection = document.createElement('div');\r\n    detailSection.id = 'supplierDetailSection';\r\n    detailSection.className = 'detail-view';\r\n    document.querySelector('.container').appendChild(detailSection);\r\n  }\r\n  \r\n  // Set the content\r\n  detailSection.innerHTML = html;\r\n  \r\n  // Add styles for the supplier detail content\r\n  const styleElement = document.createElement('style');\r\n  styleElement.textContent = \\`\r\n    .supplier-detail-content {\r\n      padding: 20px;\r\n    }\r\n    .supplier-info {\r\n      background-color: #f5f5f5;\r\n      border-radius: 8px;\r\n      padding: 15px;\r\n      margin-bottom: 20px;\r\n    }\r\n    .material-list, .certification-list {\r\n      list-style-type: none;\r\n      padding: 0;\r\n    }\r\n    .material-list li, .certification-list li {\r\n      margin-bottom: 8px;\r\n    }\r\n    .material-link {\r\n      color: #00269A;\r\n      text-decoration: none;\r\n    }\r\n    .material-link:hover {\r\n      text-decoration: underline;\r\n    }\r\n    .supplier-notes {\r\n      background-color: #fffde7;\r\n      border-left: 4px solid #ffd600;\r\n      padding: 10px 15px;\r\n      margin-bottom: 20px;\r\n    }\r\n  \\`;\r\n  document.head.appendChild(styleElement);\r\n  \r\n  // Add event listener to the back button\r\n  detailSection.querySelector('.back-button').addEventListener('click', function(e) {\r\n    e.preventDefault();\r\n    goBack();\r\n  });\r\n  \r\n  // Add event listeners to material links\r\n  detailSection.querySelectorAll('.material-link').forEach(link => {\r\n    link.addEventListener('click', function(e) {\r\n      e.preventDefault();\r\n      const materialId = this.getAttribute('data-material-id');\r\n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\r\n      if (material) {\r\n        navStack.push('supplierDetailSection');\r\n        showMaterialDetails(material);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Show the supplier detail section and hide other views\r\n  // First, hide all main views\r\n  document.querySelectorAll('.main-view').forEach(view => {\r\n    view.style.display = 'none';\r\n  });\r\n  \r\n  // Then hide all detail views\r\n  document.querySelectorAll('.detail-view').forEach(view => {\r\n    view.style.display = 'none';\r\n  });\r\n  \r\n  // Finally, show our supplier detail section\r\n  detailSection.style.display = 'block';\r\n  \r\n  // Also update the navigation stack\r\n  navStack.push('supplierDetailSection');\r\n  console.log('Navigation stack updated:', navStack);\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getSupplierHandler }; ","/**\r\n * Utility functions for template generation\r\n */\r\n\r\n/**\r\n * Safely converts data to a JSON string for client-side use\r\n * @param {Object} data - The data to stringify\r\n * @returns {string} - HTML-safe JSON string\r\n */\r\nfunction safeJsonStringify(data) {\r\n  try {\r\n    return JSON.stringify(data)\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;');\r\n  } catch (error) {\r\n    console.error('Error stringifying data:', error);\r\n    return '{}';\r\n  }\r\n}\r\n\r\n/**\r\n * Ensures data arrays exist even if they're empty\r\n * @param {Object} data - The roadmap data\r\n * @returns {Object} - Data with guaranteed arrays\r\n */\r\nfunction sanitizeData(data) {\r\n  return {\r\n    programs: Array.isArray(data.programs) ? data.programs : [],\r\n    products: Array.isArray(data.products) ? data.products : [],\r\n    materialSystems: Array.isArray(data.materialSystems) ? data.materialSystems : [],\r\n    suppliers: Array.isArray(data.suppliers) ? data.suppliers : [],\r\n    cradOpportunities: Array.isArray(data.cradOpportunities) ? data.cradOpportunities : []\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  safeJsonStringify,\r\n  sanitizeData\r\n}; ","/**\n * CSS styles for the interactive roadmap\n * @returns {string} CSS styles as a string\n */\nfunction getStyles() {\n  return `\n    /* Base styles */\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      margin: 0;\n      padding: 0;\n      color: #333;\n      background-color: #f5f5f5;\n    }\n    \n    .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n    \n    header {\n      background-color: #2c3e50;\n      color: white;\n      padding: 15px 0;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n    }\n    \n    header h1 {\n      margin: 0;\n      padding: 0 20px;\n      font-size: 24px;\n    }\n    \n    /* Navigation */\n    .nav-tabs {\n      display: flex;\n      background-color: #34495e;\n      padding: 0 20px;\n    }\n    \n    .nav-tab {\n      padding: 12px 20px;\n      color: #ecf0f1;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n    \n    .nav-tab:hover, .nav-tab.active {\n      background-color: #2c3e50;\n    }\n    \n    /* Main content area */\n    .main-content {\n      background-color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n      margin-top: 20px;\n      padding: 20px;\n    }\n    \n    /* Tiles for programs, products, etc. */\n    .tiles-container {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 20px;\n      margin-top: 20px;\n    }\n    \n    .tile {\n      background-color: #ecf0f1;\n      border-radius: 5px;\n      padding: 20px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n      transition: transform 0.2s, box-shadow 0.2s;\n      cursor: pointer;\n    }\n    \n    .tile:hover {\n      transform: translateY(-5px);\n      box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n    }\n    \n    .tile-name {\n      font-weight: bold;\n      font-size: 18px;\n      margin-bottom: 10px;\n    }\n    \n    /* Roadmap specific styles */\n    .roadmap-container {\n      overflow-x: auto;\n      margin-top: 20px;\n    }\n    \n    .roadmap {\n      min-width: 1000px;\n      position: relative;\n    }\n    \n    .roadmap-header {\n      display: flex;\n      border-bottom: 1px solid #ddd;\n      position: sticky;\n      top: 0;\n      background-color: white;\n      z-index: 10;\n    }\n    \n    .roadmap-header-cell {\n      flex: 1;\n      padding: 10px;\n      text-align: center;\n      font-weight: bold;\n      min-width: 100px;\n    }\n    \n    .roadmap-row {\n      display: flex;\n      border-bottom: 1px solid #eee;\n      position: relative;\n      min-height: 60px;\n    }\n    \n    .roadmap-lane-title {\n      width: 200px;\n      padding: 10px;\n      background-color: #f9f9f9;\n      font-weight: bold;\n      display: flex;\n      align-items: center;\n      position: sticky;\n      left: 0;\n      z-index: 5;\n    }\n    \n    .roadmap-lane-content {\n      flex: 1;\n      position: relative;\n      min-height: 40px;\n    }\n    \n    .roadmap-task {\n      position: absolute;\n      height: 30px;\n      top: 5px;\n      background-color: #3498db;\n      border-radius: 3px;\n      color: white;\n      padding: 5px;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: pointer;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n    }\n    \n    .roadmap-task:hover {\n      box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n      z-index: 2;\n    }\n    \n    /* Detail views */\n    .detail-view {\n      display: none;\n      background-color: white;\n      border-radius: 5px;\n      box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n      margin-top: 20px;\n      padding: 20px;\n    }\n    \n    .detail-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 25px;\n    }\n    \n    .detail-header h2 {\n      margin: 0;\n      font-size: 24px;\n      font-weight: 600;\n      color: #333;\n    }\n    \n    .back-button {\n      background-color: #003087;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      padding: 10px 20px;\n      font-size: 15px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      float: right;\n    }\n    \n    .back-button:hover {\n      background-color: #00246b;\n      transform: translateY(-2px);\n      box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n    }\n    \n    /* Task details */\n    .task-detail-section {\n      background-color: #f9f9f9;\n      border-radius: 5px;\n      padding: 15px;\n    }\n    \n    .task-detail-content {\n      margin-top: 10px;\n    }\n    \n    .detail-section {\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      padding: 25px;\n      margin-bottom: 30px;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n      border: 1px solid #e9ecef;\n      border-top: 3px solid #6a3093;\n    }\n    \n    .detail-section h3 {\n      margin-top: 0;\n      margin-bottom: 20px;\n      font-size: 22px;\n      font-weight: 600;\n      color: #333;\n    }\n    \n    .product-metadata {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: 15px;\n      margin-bottom: 25px;\n    }\n    \n    .product-metadata p {\n      margin: 0;\n      font-size: 15px;\n      line-height: 1.5;\n    }\n    \n    .product-metadata strong {\n      font-weight: 600;\n      color: #495057;\n      margin-right: 8px;\n    }\n    \n    /* Requirements Section */\n    .requirements-section {\n      margin-bottom: 25px;\n    }\n    \n    .requirements-section h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #6a3093;\n      padding-bottom: 8px;\n      border-bottom: 1px solid #e9ecef;\n    }\n    \n    .requirements-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .requirements-list li {\n      margin-bottom: 10px;\n      font-size: 15px;\n      line-height: 1.5;\n      padding-left: 20px;\n      position: relative;\n    }\n    \n    .requirements-list li:before {\n      content: \"•\";\n      position: absolute;\n      left: 0;\n      color: #6a3093;\n      font-size: 18px;\n      line-height: 1;\n    }\n    \n    .requirements-list strong {\n      font-weight: 600;\n      color: #495057;\n      margin-right: 8px;\n    }\n    \n    /* Business Case Section */\n    .business-case-section {\n      margin-bottom: 0;\n    }\n    \n    .business-case-section h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #6a3093;\n      padding-bottom: 8px;\n      border-bottom: 1px solid #e9ecef;\n    }\n    \n    .business-case-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .business-case-list li {\n      margin-bottom: 10px;\n      font-size: 15px;\n      line-height: 1.5;\n      padding-left: 20px;\n      position: relative;\n    }\n    \n    .business-case-list li:before {\n      content: \"•\";\n      position: absolute;\n      left: 0;\n      color: #6a3093;\n      font-size: 18px;\n      line-height: 1;\n    }\n    \n    .business-case-list strong {\n      font-weight: 600;\n      color: #495057;\n      margin-right: 8px;\n    }\n    \n    /* Related Programs Section */\n    .related-section {\n      margin-top: 30px;\n      margin-bottom: 30px;\n    }\n    \n    .related-section h3 {\n      margin-top: 0;\n      margin-bottom: 20px;\n      font-size: 20px;\n      font-weight: 600;\n      color: #333;\n    }\n    \n    /* Status indicators */\n    .status-indicator {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      margin-right: 5px;\n    }\n    \n    .status-complete {\n      background-color: #2ecc71;\n    }\n    \n    .status-in-progress {\n      background-color: #f39c12;\n    }\n    \n    .status-planned {\n      background-color: #3498db;\n    }\n    \n    /* Related section styles */\n    .related-section {\n      margin-top: 30px;\n    }\n    \n    .related-section h3 {\n      margin-bottom: 15px;\n      border-bottom: 1px solid #eee;\n      padding-bottom: 10px;\n    }\n    \n    .year-label {\n      font-size: 10px;\n      color: #7f8c8d;\n    }\n    \n    /* Responsive design improvements */\n    @media (max-width: 768px) {\n      .tiles-container {\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n      }\n      \n      .roadmap-lane-title {\n        width: 150px;\n      }\n    }\n    \n    /* Print styles */\n    @media print {\n      body {\n        background-color: white;\n      }\n      \n      .nav-tabs, .back-button {\n        display: none;\n      }\n      \n      .container {\n        max-width: 100%;\n        margin: 0;\n        padding: 0;\n      }\n      \n      .roadmap-container {\n        overflow: visible;\n      }\n    }\n    \n    /* Tooltip styles */\n    .tooltip {\n      position: relative;\n      display: inline-block;\n    }\n    \n    .tooltip .tooltip-text {\n      visibility: hidden;\n      width: 200px;\n      background-color: #555;\n      color: #fff;\n      text-align: center;\n      border-radius: 6px;\n      padding: 5px;\n      position: absolute;\n      z-index: 1;\n      bottom: 125%;\n      left: 50%;\n      margin-left: -100px;\n      opacity: 0;\n      transition: opacity 0.3s;\n    }\n    \n    .tooltip:hover .tooltip-text {\n      visibility: visible;\n      opacity: 1;\n    }\n    \n    /* Quad Box Styles */\n    .specialized-quad-box {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: 1fr 1fr;\n      gap: 20px;\n      margin-top: 25px;\n    }\n    \n    .quad-section {\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      padding: 20px;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n      border: 1px solid #e9ecef;\n      overflow: auto;\n      max-height: 400px;\n    }\n    \n    .quad-section h4 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 18px;\n      font-weight: 600;\n      color: #333;\n      padding-bottom: 10px;\n      border-bottom: 1px solid #e9ecef;\n    }\n    \n    /* Material Systems Section - Match MRL slider color */\n    .material-section {\n      border-top: 3px solid #007bff;\n    }\n    \n    .material-header h5 {\n      margin-top: 0;\n      margin-bottom: 15px;\n      font-size: 16px;\n      color: #007bff;\n    }\n    \n    .material-details p {\n      margin: 8px 0;\n      font-size: 14px;\n      line-height: 1.5;\n    }\n    \n    .material-details strong {\n      font-weight: 600;\n      color: #495057;\n    }\n    \n    .view-details-button-container {\n      margin-top: 20px;\n      text-align: right;\n    }\n    \n    .view-full-details {\n      background-color: #007bff;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      padding: 8px 16px;\n      font-size: 14px;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    \n    .view-full-details:hover {\n      background-color: #0056b3;\n      transform: translateY(-2px);\n      box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n    }\n    \n    /* Manufacturing Section - Unique color (magenta) */\n    .manufacturing-section {\n      border-top: 3px solid #e83e8c;\n    }\n    \n    .manufacturing-section h5 {\n      margin-top: 15px;\n      margin-bottom: 10px;\n      font-size: 15px;\n      color: #e83e8c;\n    }\n    \n    .manufacturing-section ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .manufacturing-section li {\n      margin-bottom: 6px;\n      font-size: 14px;\n    }\n    \n    .supplier-link {\n      color: #e83e8c;\n      text-decoration: none;\n      transition: color 0.2s ease;\n    }\n    \n    .supplier-link:hover {\n      color: #d6246f;\n      text-decoration: underline;\n    }\n    \n    /* Design Section */\n    .design-section {\n      border-top: 3px solid #2e8b57;\n    }\n    \n    .design-section h5 {\n      margin-top: 15px;\n      margin-bottom: 10px;\n      font-size: 15px;\n      color: #2e8b57;\n    }\n    \n    .design-section ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .design-section li {\n      margin-bottom: 6px;\n      font-size: 14px;\n    }\n    \n    /* Quality Section */\n    .quality-section {\n      border-top: 3px solid #fd7e14;\n    }\n    \n    .quality-section h5 {\n      margin-top: 15px;\n      margin-bottom: 10px;\n      font-size: 15px;\n      color: #fd7e14;\n    }\n    \n    .quality-section ul {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .quality-section li {\n      margin-bottom: 6px;\n      font-size: 14px;\n    }\n    \n    /* Post Processing Lists */\n    .post-processing-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 5px 0 0 0;\n    }\n    \n    .post-processing-list li {\n      margin-bottom: 5px;\n      font-size: 14px;\n      padding-left: 15px;\n      position: relative;\n    }\n    \n    .post-processing-list li:before {\n      content: \"•\";\n      position: absolute;\n      left: 0;\n      color: #6c757d;\n    }\n    \n    /* Consistent button styling */\n    .view-details-button {\n      background-color: #3498db;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 8px 16px;\n      cursor: pointer;\n      font-weight: normal;\n      font-size: 14px;\n      transition: background-color 0.2s;\n    }\n    \n    .view-details-button:hover {\n      background-color: #2980b9;\n    }\n    \n    /* Consistent layout for the product details page */\n    .readiness-bars-container {\n      display: flex;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n    \n    .readiness-bars {\n      width: 70%;\n      max-width: 800px;\n    }\n    \n    /* Make supplier tiles match the reference image */\n    .supplier-tile {\n      background-color: #f0f8ff;\n      border: 1px solid #d0e3f7;\n      border-radius: 4px;\n      padding: 8px 12px;\n      margin-bottom: 5px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-size: 14px;\n    }\n    \n    .supplier-tile:hover {\n      background-color: #d9edf7;\n      border-color: #85c1e9;\n    }\n    \n    /* Material Tiles Styles */\n    .material-tiles {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n      margin-bottom: 15px;\n    }\n    \n    .material-tile {\n      background-color: #f8f9fa;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      padding: 6px 12px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    \n    .material-tile:hover {\n      background-color: #e9ecef;\n      border-color: #adb5bd;\n    }\n    \n    .material-tile.selected {\n      background-color: #e3f2fd;\n      border-color: #3498db;\n      font-weight: bold;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    \n    .material-details {\n      margin-bottom: 15px;\n    }\n    \n    .material-details div {\n      margin-bottom: 8px;\n    }\n    \n    /* Add these styles for the enhanced product details page */\n    .wide-quad-box {\n      max-width: 1200px;\n      width: 90%;\n      margin: 0 auto;\n    }\n    \n    .supplier-tiles {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n      margin: 10px 0;\n    }\n    \n    .supplier-tile {\n      background-color: #f0f8ff; /* Light blue */\n      border: 1px solid #b8d8f8;\n      border-radius: 4px;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      font-size: 14px;\n      color: #2c3e50;\n    }\n    \n    .supplier-tile:hover {\n      background-color: #d9edf7;\n      border-color: #85c1e9;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    \n    /* Update the button container style */\n    .view-details-button-container {\n      margin-top: 15px;\n      text-align: center;\n    }\n    \n    .view-details-button-container.left-aligned {\n      text-align: left;\n    }\n    \n    .view-details-button {\n      background-color: #3498db;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 8px 16px;\n      cursor: pointer;\n      font-weight: bold;\n      transition: background-color 0.2s;\n    }\n    \n    .view-details-button:hover {\n      background-color: #2980b9;\n    }\n    \n    /* Make the specialized quad box responsive but prioritize desktop view */\n    @media (min-width: 1200px) {\n      .specialized-quad-box {\n        gap: 25px; /* Larger gap on desktop */\n      }\n      \n      .quad-section {\n        padding: 20px; /* More padding on desktop */\n      }\n    }\n    \n    /* Program Details Styles */\n    .program-details {\n      padding: 20px;\n      width: 100%;\n      max-width: 1200px;\n      margin: 0 auto;\n    }\n    \n    .program-details h1 {\n      color: #000;\n      font-size: 28px;\n      margin-bottom: 20px;\n      border-bottom: none;\n    }\n    \n    .program-details-info {\n      margin-bottom: 30px;\n    }\n    \n    .program-details-info p {\n      margin: 8px 0;\n      font-size: 16px;\n    }\n    \n    .products-grid {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 20px;\n      margin-bottom: 30px;\n    }\n    \n    .product-card {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 15px;\n      width: 100%;\n      max-width: 450px;\n      background-color: #fff;\n      cursor: pointer;\n      transition: box-shadow 0.3s ease;\n    }\n    \n    .product-card:hover {\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n    \n    .product-card h3 {\n      margin-top: 0;\n      color: #003087;\n      font-size: 18px;\n      margin-bottom: 15px;\n    }\n    \n    .product-status p {\n      margin: 5px 0;\n      font-size: 14px;\n    }\n    \n    .back-button {\n      background-color: #003087;\n      color: white;\n      border: none;\n      padding: 8px 20px;\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 16px;\n    }\n    \n    .back-button:hover {\n      background-color: #00246b;\n    }\n    \n    /* Business Case Styles */\n    .business-case-section {\n      margin-top: 15px;\n    }\n    \n    .business-case-section h4 {\n      margin-top: 0;\n      margin-bottom: 10px;\n      font-weight: 600;\n      font-size: 16px;\n    }\n    \n    .business-case-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .business-case-list li {\n      margin-bottom: 8px;\n    }\n    \n    .business-case-list li strong {\n      font-weight: 600;\n      margin-right: 5px;\n    }\n    \n    /* Material Systems Styles in Quad Box */\n    .material-systems-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0;\n    }\n    \n    .material-system-item {\n      margin-bottom: 20px;\n      border-bottom: 1px solid #eee;\n      padding-bottom: 15px;\n    }\n    \n    .material-system-item:last-child {\n      border-bottom: none;\n      margin-bottom: 0;\n    }\n    \n    .material-header {\n      margin-bottom: 8px;\n    }\n    \n    .material-link {\n      color: #003087;\n      font-weight: 600;\n      text-decoration: none;\n      font-size: 16px;\n    }\n    \n    .material-link:hover {\n      text-decoration: underline;\n    }\n    \n    .material-details p {\n      margin: 5px 0;\n      font-size: 14px;\n    }\n    \n    .material-post-processing, .material-machines {\n      margin-top: 8px;\n    }\n    \n    .post-processing-list, .machines-list {\n      margin: 5px 0 0 15px;\n      padding: 0;\n      font-size: 13px;\n    }\n    \n    .post-processing-list li, .machines-list li {\n      margin-bottom: 3px;\n    }\n    \n    /* Material System Filter Styles */\n    .material-system-filters {\n      margin-bottom: 25px;\n      padding: 20px;\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      border: 1px solid #e9ecef;\n    }\n    \n    .filter-label {\n      font-weight: 600;\n      margin-bottom: 15px;\n      color: #333;\n      font-size: 18px;\n    }\n    \n    .filter-buttons {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 12px;\n    }\n    \n    .material-filter-btn {\n      background-color: #f0f0f0;\n      border: none;\n      border-radius: 6px;\n      padding: 12px 20px;\n      cursor: pointer;\n      font-size: 16px;\n      font-weight: 500;\n      transition: all 0.2s ease;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n    }\n    \n    .material-filter-btn:hover {\n      background-color: #e0e0e0;\n      transform: translateY(-2px);\n      box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n    }\n    \n    .material-filter-btn.active {\n      background-color: #0056b3;\n      color: white;\n      box-shadow: 0 3px 6px rgba(0,0,0,0.2);\n    }\n    \n    /* Material System Details Styles */\n    .material-system-details {\n      margin-bottom: 15px;\n    }\n    \n    .material-system-details h5 {\n      margin-top: 0;\n      margin-bottom: 10px;\n      color: #003087;\n      font-size: 16px;\n    }\n    \n    .manufacturing-for-material, .quality-for-material {\n      margin-bottom: 15px;\n    }\n    \n    .qualified-machines, .post-processing, .relevant-suppliers,\n    .standard-ndt, .special-ndt, .part-acceptance,\n    .product-machines, .product-suppliers {\n      margin-bottom: 15px;\n    }\n    \n    .qualified-machines h5, .post-processing h5, .relevant-suppliers h5,\n    .standard-ndt h5, .special-ndt h5, .part-acceptance h5,\n    .product-machines h5, .product-suppliers h5 {\n      margin-top: 0;\n      margin-bottom: 8px;\n      font-size: 15px;\n      color: #495057;\n    }\n    \n    .machines-list, .post-processing-list, .suppliers-list, .ndt-list {\n      list-style-type: none;\n      padding: 0;\n      margin: 0 0 0 5px;\n    }\n    \n    .machines-list li, .post-processing-list li, .suppliers-list li, .ndt-list li {\n      margin-bottom: 5px;\n      font-size: 14px;\n    }\n    \n    .view-details-button-container {\n      margin-top: 15px;\n    }\n    \n    .material-details-btn {\n      background-color: #003087;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 6px 12px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    \n    .material-details-btn:hover {\n      background-color: #00246b;\n    }\n    \n    /* Product Development Progress Styles */\n    .product-development-progress {\n      margin-bottom: 30px;\n      padding: 20px 25px;\n      background-color: #f8f9fa;\n      border-radius: 8px;\n      border: 1px solid #e9ecef;\n      width: 80%;\n      margin-left: auto;\n      margin-right: auto;\n    }\n    \n    .progress-section {\n      margin-bottom: 10px;\n      display: flex;\n      align-items: center;\n    }\n    \n    .progress-section:last-child {\n      margin-bottom: 0;\n    }\n    \n    .progress-section h4 {\n      margin: 0;\n      font-size: 18px;\n      color: #333;\n      font-weight: 600;\n      width: 70px;\n      flex-shrink: 0;\n      text-align: right;\n      padding-right: 15px;\n    }\n    \n    .progress-container {\n      width: 100%;\n      position: relative;\n    }\n    \n    .progress-bar-wrapper {\n      height: 28px;\n      background-color: #e9ecef;\n      border-radius: 8px;\n      overflow: hidden;\n      margin-bottom: 5px;\n      box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);\n      position: relative;\n    }\n    \n    .progress-bar {\n      height: 100%;\n      border-radius: 8px;\n      transition: width 0.5s ease;\n      position: relative;\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      padding-right: 15px;\n    }\n    \n    .trl-progress {\n      background: linear-gradient(90deg, #5d4cb6, #7e6fd3);\n    }\n    \n    .mrl-progress {\n      background: linear-gradient(90deg, #007bff, #00b8d4);\n    }\n    \n    .progress-current {\n      color: white;\n      font-weight: 600;\n      font-size: 16px;\n      text-shadow: 0 1px 2px rgba(0,0,0,0.3);\n      white-space: nowrap;\n    }\n    \n    .progress-labels {\n      display: flex;\n      justify-content: space-between;\n      font-size: 14px;\n      color: #6c757d;\n    }\n    \n    .progress-min, .progress-max {\n      color: #6c757d;\n    }\n  `;\n}\n\nmodule.exports = { getStyles }; ","/**\r\n * JavaScript functions for the interactive roadmap\r\n * @param {string} roadmapDataStr - JSON string of the roadmap data\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getScripts(roadmapDataStr) {\r\n  return `\r\n// Navigation stack to track view history\r\nconst navStack = [];\r\n\r\n// Store the data for client-side use\r\nlet roadmapData;\r\ntry {\r\n  // Safely parse the JSON data\r\n  roadmapData = JSON.parse('${roadmapDataStr}');\r\n  console.log('Roadmap data loaded successfully');\r\n  \r\n  // Debug the data structure\r\n  console.log('Programs:', roadmapData.programs ? roadmapData.programs.length : 0);\r\n  console.log('Products:', roadmapData.products ? roadmapData.products.length : 0);\r\n  console.log('Material Systems:', roadmapData.materialSystems ? roadmapData.materialSystems.length : 0);\r\n  console.log('Suppliers:', roadmapData.suppliers ? roadmapData.suppliers.length : 0);\r\n  console.log('Funding Opportunities:', roadmapData.cradOpportunities ? roadmapData.cradOpportunities.length : 0);\r\n  \r\n  // Log the first program if available\r\n  if (roadmapData.programs && roadmapData.programs.length > 0) {\r\n    console.log('First program:', roadmapData.programs[0]);\r\n  }\r\n} catch (error) {\r\n  console.error('Error parsing roadmap data:', error);\r\n  console.error('Raw data:', '${roadmapDataStr.substring(0, 100)}...');\r\n  roadmapData = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\r\n}\r\n\r\n// Initialize the application\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  console.log('DOM fully loaded');\r\n  \r\n  // Debug the navigation tabs\r\n  debugElement('.nav-tab');\r\n  \r\n  // Debug the views\r\n  debugElement('.detail-view');\r\n  debugElement('#mainView');\r\n  \r\n  initializeNavigation();\r\n  attachEventHandlers();\r\n  setupSearch();\r\n  addTooltips();\r\n  \r\n  // Set default view\r\n  const defaultTab = document.querySelector('.nav-tab[data-view=\"programsView\"]');\r\n  if (defaultTab) {\r\n    console.log('Setting default tab:', defaultTab);\r\n    defaultTab.classList.add('active');\r\n    showView('programsView');\r\n  } else {\r\n    console.error('Default tab not found');\r\n  }\r\n});\r\n\r\n// Set up navigation and event handlers\r\nfunction initializeNavigation() {\r\n  console.log('Initializing navigation');\r\n  \r\n  // Set up navigation tabs\r\n  document.querySelectorAll('.nav-tab').forEach(tab => {\r\n    const viewId = tab.getAttribute('data-view');\r\n    console.log('Setting up tab for view:', viewId);\r\n    \r\n    tab.addEventListener('click', function(e) {\r\n      console.log('Tab clicked:', viewId);\r\n      e.preventDefault();\r\n      \r\n      // Update active tab\r\n      document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));\r\n      this.classList.add('active');\r\n      \r\n      // Show the selected view\r\n      showView(viewId);\r\n    });\r\n  });\r\n  \r\n  // Add keyboard navigation\r\n  document.addEventListener('keydown', function(e) {\r\n    // ESC key for going back\r\n    if (e.key === 'Escape') {\r\n      goBack();\r\n    }\r\n  });\r\n  \r\n  // Set up back buttons\r\n  document.querySelectorAll('.back-button').forEach(button => {\r\n    button.addEventListener('click', function(e) {\r\n      console.log('Back button clicked');\r\n      e.preventDefault();\r\n      goBack();\r\n    });\r\n  });\r\n}\r\n\r\n// Attach event handlers to all interactive elements\r\nfunction attachEventHandlers() {\r\n  console.log('Attaching event handlers');\r\n  \r\n  // Set up program tile click handlers\r\n  document.querySelectorAll('[data-program-id]').forEach(tile => {\r\n    const programId = tile.getAttribute('data-program-id');\r\n    console.log('Setting up click handler for program:', programId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const programId = this.getAttribute('data-program-id');\r\n      console.log('Program tile clicked:', programId);\r\n      \r\n      // Debug the roadmapData object\r\n      console.log('Roadmap data programs:', roadmapData.programs);\r\n      \r\n      const program = roadmapData.programs.find(p => p.id === programId);\r\n      console.log('Found program:', program);\r\n      \r\n      if (program) {\r\n        showProgramDetails(program);\r\n      } else {\r\n        console.error('Program not found:', programId);\r\n        console.error('Available program IDs:', roadmapData.programs.map(p => p.id));\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up product tile click handlers\r\n  document.querySelectorAll('[data-product-id]').forEach(tile => {\r\n    const productId = tile.getAttribute('data-product-id');\r\n    console.log('Setting up click handler for product:', productId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const productId = this.getAttribute('data-product-id');\r\n      console.log('Product tile clicked:', productId);\r\n      \r\n      // Debug the roadmapData object\r\n      console.log('Roadmap data products:', roadmapData.products);\r\n      \r\n      const product = roadmapData.products.find(p => p.id === productId);\r\n      console.log('Found product:', product);\r\n      \r\n      if (product) {\r\n        showProductDetails(product);\r\n      } else {\r\n        console.error('Product not found:', productId);\r\n        console.error('Available product IDs:', roadmapData.products.map(p => p.id));\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up material system tile click handlers\r\n  document.querySelectorAll('[data-material-id]').forEach(tile => {\r\n    tile.addEventListener('click', function() {\r\n      const materialId = this.getAttribute('data-material-id');\r\n      console.log('Material tile clicked:', materialId);\r\n      \r\n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\r\n      if (material) {\r\n        showMaterialSystemDetails(material);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up supplier tile click handlers\r\n  document.querySelectorAll('[data-supplier-id]').forEach(tile => {\r\n    tile.addEventListener('click', function() {\r\n      const supplierId = this.getAttribute('data-supplier-id');\r\n      console.log('Supplier tile clicked:', supplierId);\r\n      \r\n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\r\n      if (supplier) {\r\n        showSupplierDetails(supplier);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up funding opportunity tile click handlers\r\n  document.querySelectorAll('[data-opportunity-id]').forEach(tile => {\r\n    tile.addEventListener('click', function() {\r\n      const opportunityId = this.getAttribute('data-opportunity-id');\r\n      console.log('Opportunity tile clicked:', opportunityId);\r\n      \r\n      const opportunity = roadmapData.cradOpportunities.find(o => o.id === opportunityId);\r\n      if (opportunity) {\r\n        showFundingOpportunityDetails(opportunity);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Add tooltips to navigation tabs\r\nfunction addTooltips() {\r\n  document.querySelectorAll('.nav-tab').forEach(tab => {\r\n    const viewId = tab.getAttribute('data-view');\r\n    let tooltipText = '';\r\n    \r\n    switch(viewId) {\r\n      case 'programsView':\r\n        tooltipText = 'View all programs and their timelines';\r\n        break;\r\n      case 'productsView':\r\n        tooltipText = 'View products and their associated programs';\r\n        break;\r\n      case 'amMaterialSystemsView':\r\n        tooltipText = 'View additive manufacturing material systems';\r\n        break;\r\n      case 'amSuppliersView':\r\n        tooltipText = 'View suppliers for AM materials';\r\n        break;\r\n      case 'fundingOpportunitiesView':\r\n        tooltipText = 'View funding opportunities';\r\n        break;\r\n    }\r\n    \r\n    if (tooltipText) {\r\n      createTooltip(tab, tooltipText);\r\n    }\r\n  });\r\n}\r\n\r\n// Helper function for formatting dates\r\nfunction formatDate(dateStr) {\r\n  if (!dateStr) return 'N/A';\r\n  const date = new Date(dateStr);\r\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\r\n}\r\n\r\n// Navigation functions\r\nfunction showView(viewId) {\r\n  console.log('Showing view:', viewId);\r\n  \r\n  // Hide all views\r\n  document.querySelectorAll('.detail-view, .main-content').forEach(view => {\r\n    view.style.display = 'none';\r\n  });\r\n  \r\n  // Show the requested view\r\n  const viewElement = document.getElementById(viewId);\r\n  if (viewElement) {\r\n    viewElement.style.display = 'block';\r\n    console.log('View displayed:', viewId);\r\n    \r\n    // Update navigation stack\r\n    navStack.push(viewId);\r\n    console.log('Navigation stack:', navStack);\r\n  } else {\r\n    console.error('View not found:', viewId);\r\n    // List all available views\r\n    console.log('Available views:');\r\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\r\n      console.log('- ' + view.id);\r\n    });\r\n  }\r\n}\r\n\r\nfunction goBack() {\r\n  console.log('Going back. Current stack:', navStack);\r\n  \r\n  if (navStack.length > 1) {\r\n    navStack.pop(); // Remove current view\r\n    const previousView = navStack[navStack.length - 1];\r\n    \r\n    // Hide all views\r\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\r\n      view.style.display = 'none';\r\n    });\r\n    \r\n    // Show the previous view\r\n    document.getElementById(previousView).style.display = 'block';\r\n    console.log('Returned to view:', previousView);\r\n  } else {\r\n    // If at the root level, show main view\r\n    document.querySelectorAll('.detail-view').forEach(view => {\r\n      view.style.display = 'none';\r\n    });\r\n    document.getElementById('mainView').style.display = 'block';\r\n    navStack.length = 0; // Clear the stack\r\n    console.log('Returned to main view');\r\n  }\r\n}\r\n\r\n// Add a helper function to create tooltips\r\nfunction createTooltip(element, text) {\r\n  element.classList.add('tooltip');\r\n  const tooltipSpan = document.createElement('span');\r\n  tooltipSpan.className = 'tooltip-text';\r\n  tooltipSpan.textContent = text;\r\n  element.appendChild(tooltipSpan);\r\n}\r\n\r\n// Add search functionality\r\nfunction setupSearch() {\r\n  const searchInput = document.getElementById('searchInput');\r\n  if (!searchInput) {\r\n    console.warn('Search input not found');\r\n    return;\r\n  }\r\n  \r\n  console.log('Setting up search functionality');\r\n  searchInput.addEventListener('input', function() {\r\n    const searchTerm = this.value.toLowerCase();\r\n    console.log('Searching for:', searchTerm);\r\n    \r\n    // Search in all tiles\r\n    document.querySelectorAll('.tile').forEach(tile => {\r\n      const tileName = tile.querySelector('.tile-name').textContent.toLowerCase();\r\n      const tileDesc = tile.querySelector('.tile-description')?.textContent.toLowerCase() || '';\r\n      \r\n      if (tileName.includes(searchTerm) || tileDesc.includes(searchTerm)) {\r\n        tile.style.display = 'block';\r\n      } else {\r\n        tile.style.display = 'none';\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Debug function to help troubleshoot\r\nfunction debugElement(selector) {\r\n  const elements = document.querySelectorAll(selector);\r\n  console.log(\\`Found \\${elements.length} elements matching \"\\${selector}\"\\`);\r\n  elements.forEach((el, i) => {\r\n    console.log(\\`Element \\${i}:\\`, el);\r\n    if (el.id) {\r\n      console.log(\\`  ID: \\${el.id}\\`);\r\n    }\r\n    if (el.className) {\r\n      console.log(\\`  Classes: \\${el.className}\\`);\r\n    }\r\n    if (el.getAttribute('data-view')) {\r\n      console.log(\\`  View: \\${el.getAttribute('data-view')}\\`);\r\n    }\r\n  });\r\n}\r\n\r\n// Add a global error handler to catch any JavaScript errors\r\nwindow.onerror = function(message, source, lineno, colno, error) {\r\n  console.error('JavaScript error:', message);\r\n  console.error('Source:', source);\r\n  console.error('Line:', lineno, 'Column:', colno);\r\n  console.error('Error object:', error);\r\n  return true;\r\n};\r\n`;\r\n}\r\n\r\nmodule.exports = { getScripts }; ","/**\r\n * Functions for handling program details\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getProgramHandler() {\r\n  return `\r\n// Program details handler\r\nfunction showProgramDetails(program) {\r\n  console.log('Showing program details for:', program.id);\r\n  \r\n  // Find products related to this program\r\n  const relatedProducts = roadmapData.products.filter(product => \r\n    product.programs && product.programs.includes(program.id)\r\n  );\r\n  \r\n  console.log('Related products:', relatedProducts.map(p => p.name));\r\n  \r\n  // Create the program details HTML\r\n  const detailsContent = document.getElementById('programDetailsContent');\r\n  if (!detailsContent) {\r\n    console.error('Program details content element not found');\r\n    return;\r\n  }\r\n  \r\n  // Clear previous content\r\n  detailsContent.innerHTML = '';\r\n  \r\n  // Create the main program information section\r\n  const programInfo = document.createElement('div');\r\n  programInfo.className = 'program-details';\r\n  \r\n  programInfo.innerHTML = \\`\r\n    <h1>\\${program.name}</h1>\r\n    \r\n    <div class=\"program-details-info\">\r\n      <p><strong>Customer Name:</strong> \\${program.customerName || 'N/A'}</p>\r\n      <p><strong>Division:</strong> \\${program.division || 'N/A'}</p>\r\n      <p><strong>Mission Class:</strong> \\${program.missionClass || 'N/A'}</p>\r\n      <p><strong>Need Date:</strong> \\${program.needDate ? formatDate(program.needDate) : 'N/A'}</p>\r\n    </div>\r\n    \r\n    <h2>Products of Interest</h2>\r\n    <div class=\"products-grid\">\r\n      \\${relatedProducts.map(product => \\`\r\n        <div class=\"product-card\" data-product-id=\"\\${product.id}\">\r\n          <h3 class=\"product-name\">\\${product.name}</h3>\r\n          <div class=\"product-status\">\r\n            <p><strong>Qual Status:</strong> N/A</p>\r\n            <p><strong>Completion Date:</strong> \\${product.completionDate || 'N/A'}</p>\r\n            <p><strong>Implementation Status:</strong> \\${product.implementationStatus || 'N/A'}</p>\r\n          </div>\r\n        </div>\r\n      \\`).join('')}\r\n    </div>\r\n    \r\n    <button class=\"back-button\">Back</button>\r\n  \\`;\r\n  \r\n  // Add the program info to the details content\r\n  detailsContent.appendChild(programInfo);\r\n  \r\n  // Add click handlers to the product cards\r\n  programInfo.querySelectorAll('.product-card').forEach(card => {\r\n    card.addEventListener('click', function() {\r\n      const productId = this.getAttribute('data-product-id');\r\n      const product = roadmapData.products.find(p => p.id === productId);\r\n      if (product) {\r\n        showProductDetails(product);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Add click handler to the back button\r\n  programInfo.querySelector('.back-button').addEventListener('click', function() {\r\n    goBack();\r\n  });\r\n  \r\n  // Show the program details view\r\n  showView('programDetailsView');\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getProgramHandler }; ","// Configuration settings\r\nconst path = require('path');\r\n\r\n// Define paths for data and output files\r\nmodule.exports = {\r\n  dataFilePath: path.resolve(__dirname, '../roadmap.json'),\r\n  outputFilePath: path.resolve(__dirname, '../build/roadmap.html'),\r\n  devRepoPath: path.resolve(__dirname, '../public'),\r\n  devRepoOutputFilePath: path.resolve(__dirname, '../public/roadmap.html')\r\n}; ","/**\r\n * Utility functions for formatting dates and other data\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getFormatters() {\r\n  return `\r\n// Format date helpers\r\nfunction formatDate(dateString) {\r\n  if (!dateString) return \"N/A\";\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString();\r\n}\r\n\r\nfunction formatDateForInput(date) {\r\n  const d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nfunction getTaskStatusClasses(status, fundingType) {\r\n  const statusLower = (status || \"\").toLowerCase();\r\n  let classes = \"\";\r\n  \r\n  if (statusLower === \"complete\") {\r\n    classes = \"complete\";\r\n  } else if (statusLower === \"in progress\") {\r\n    classes = \"in-progress\";\r\n    \r\n    // Add funding type class if available\r\n    if (fundingType) {\r\n      const fundingTypeLower = fundingType.toLowerCase().replace(/\\\\s+/g, '-');\r\n      classes += \\` funding-\\${fundingTypeLower}\\`;\r\n    }\r\n  } else {\r\n    classes = \"planned\";\r\n  }\r\n  \r\n  return classes;\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getFormatters }; ","module.exports = require(\"ajv-formats\");","/**\r\n * HTML templates for the different views in the interactive roadmap\r\n */\r\nconst { sanitizeData } = require('../utils/templateUtils');\r\n\r\n/**\r\n * Generates the HTML for the main navigation and container\r\n * @returns {string} HTML for the main structure\r\n */\r\nfunction getMainStructure() {\r\n  return `\r\n<header>\r\n  <h1>Interactive Roadmap</h1>\r\n</header>\r\n\r\n<div class=\"container\">\r\n  <div class=\"nav-tabs\">\r\n    <div class=\"nav-tab\" data-view=\"programsView\">Programs</div>\r\n    <div class=\"nav-tab\" data-view=\"productsView\">Products</div>\r\n    <div class=\"nav-tab\" data-view=\"amMaterialSystemsView\">AM Material Systems</div>\r\n    <div class=\"nav-tab\" data-view=\"amSuppliersView\">AM Suppliers</div>\r\n    <div class=\"nav-tab\" data-view=\"fundingOpportunitiesView\">Funding Opportunities</div>\r\n  </div>\r\n  \r\n  <div id=\"searchContainer\" style=\"margin: 20px 0;\">\r\n    <input type=\"text\" id=\"searchInput\" placeholder=\"Search...\" style=\"padding: 8px; width: 100%; border: 1px solid #ddd; border-radius: 4px;\">\r\n  </div>\r\n  \r\n  <div id=\"mainView\" class=\"main-content\" style=\"display: block;\">\r\n    <h2>Welcome to the Interactive Roadmap</h2>\r\n    <p>Use the navigation tabs above to explore different sections of the roadmap.</p>\r\n  </div>\r\n`;\r\n}\r\n\r\n/**\r\n * Generates the HTML for the programs view\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} HTML for the programs view\r\n */\r\nfunction getProgramsView(data) {\r\n  const safeData = sanitizeData(data);\r\n  \r\n  return `\r\n<div id=\"programsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Programs</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div class=\"tiles-container\">\r\n    ${safeData.programs.map(program => `\r\n      <div class=\"tile\" data-program-id=\"${program.id}\">\r\n        <div class=\"tile-name\">${program.name}</div>\r\n        <div class=\"tile-description\">${program.description || 'No description available'}</div>\r\n        <div class=\"tile-status\">\r\n          <strong>Status:</strong> \r\n          <span class=\"status-indicator status-${program.status ? program.status.toLowerCase().replace(/\\s+/g, '-') : 'planned'}\"></span>\r\n          ${program.status || 'Planned'}\r\n        </div>\r\n      </div>\r\n    `).join('')}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"programDetailsView\" class=\"detail-view\">\r\n  <div id=\"programDetailsContent\"></div>\r\n</div>\r\n`;\r\n}\r\n\r\n/**\r\n * Generates the HTML for the products view\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} HTML for the products view\r\n */\r\nfunction getProductsView(data) {\r\n  const safeData = sanitizeData(data);\r\n  \r\n  return `\r\n<div id=\"productsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Products</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div class=\"tiles-container\">\r\n    ${safeData.products.map(product => `\r\n      <div class=\"tile\" data-product-id=\"${product.id}\">\r\n        <div class=\"tile-name\">${product.name}</div>\r\n        <div class=\"tile-programs\">\r\n          <strong>Programs:</strong> \r\n          ${product.programs && product.programs.length > 0 \r\n            ? product.programs.map(progId => {\r\n                const prog = safeData.programs.find(p => p.id === progId);\r\n                return prog ? prog.name : progId;\r\n              }).join(', ') \r\n            : 'None'}\r\n        </div>\r\n      </div>\r\n    `).join('')}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"productDetailsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Product Details</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div id=\"productDetails\"></div>\r\n  <div id=\"productPrograms\" class=\"related-items-container\"></div>\r\n  <div id=\"productQuadBox\" class=\"quad-box-wrapper\"></div>\r\n</div>\r\n`;\r\n}\r\n\r\n/**\r\n * Generates the HTML for the material systems view\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} HTML for the material systems view\r\n */\r\nfunction getMaterialSystemsView(data) {\r\n  const safeData = sanitizeData(data);\r\n  \r\n  return `\r\n<div id=\"amMaterialSystemsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>AM Material Systems</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div class=\"tiles-container\">\r\n    ${safeData.materialSystems.map(material => `\r\n      <div class=\"tile\" data-material-id=\"${material.id}\">\r\n        <div class=\"tile-name\">${material.name}</div>\r\n        <div class=\"tile-qualification\">\r\n          <strong>Qualification:</strong> ${material.qualification || 'N/A'}\r\n        </div>\r\n        <div class=\"tile-qualification-class\">\r\n          <strong>Class:</strong> ${material.qualificationClass || 'N/A'}\r\n        </div>\r\n      </div>\r\n    `).join('')}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"materialSystemDetailsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Material System Details</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div id=\"materialSystemDetails\"></div>\r\n  <div id=\"materialSystemSuppliers\" class=\"related-items-container\"></div>\r\n</div>\r\n`;\r\n}\r\n\r\n/**\r\n * Generates the HTML for the suppliers view\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} HTML for the suppliers view\r\n */\r\nfunction getSuppliersView(data) {\r\n  const safeData = sanitizeData(data);\r\n  \r\n  return `\r\n<div id=\"amSuppliersView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>AM Suppliers</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div class=\"tiles-container\">\r\n    ${safeData.suppliers.map(supplier => `\r\n      <div class=\"tile\" data-supplier-id=\"${supplier.id}\">\r\n        <div class=\"tile-name\">${supplier.name}</div>\r\n        <div class=\"tile-materials\">\r\n          <strong>Materials:</strong> ${supplier.materials && supplier.materials.length > 0 \r\n            ? supplier.materials.map(matId => {\r\n                const mat = safeData.materialSystems.find(m => m.id === matId);\r\n                return mat ? mat.name : matId;\r\n              }).join(', ') \r\n            : 'N/A'}\r\n        </div>\r\n      </div>\r\n    `).join('')}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"supplierDetailsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Supplier Details</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div id=\"supplierDetails\"></div>\r\n  <div id=\"supplierMaterials\" class=\"related-items-container\"></div>\r\n</div>\r\n`;\r\n}\r\n\r\n/**\r\n * Generates the HTML for the funding opportunities view\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} HTML for the funding opportunities view\r\n */\r\nfunction getFundingOpportunitiesView(data) {\r\n  const safeData = sanitizeData(data);\r\n  \r\n  return `\r\n<div id=\"fundingOpportunitiesView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Funding Opportunities</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div class=\"tiles-container\">\r\n    ${safeData.cradOpportunities.map(opportunity => `\r\n      <div class=\"tile\" data-opportunity-id=\"${opportunity.id}\">\r\n        <div class=\"tile-name\">${opportunity.name}</div>\r\n        <div class=\"tile-details\">${opportunity.details || 'No details available'}</div>\r\n        ${opportunity.deadline ? `\r\n          <div class=\"tile-deadline\">\r\n            <strong>Deadline:</strong> ${new Date(opportunity.deadline).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}\r\n          </div>\r\n        ` : ''}\r\n      </div>\r\n    `).join('')}\r\n  </div>\r\n</div>\r\n\r\n<div id=\"fundingOpportunityDetailsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Funding Opportunity Details</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div id=\"fundingOpportunityDetails\"></div>\r\n  <div id=\"relatedEntities\" class=\"related-items-container\"></div>\r\n</div>\r\n`;\r\n}\r\n\r\n/**\r\n * Generates the HTML for the task details view\r\n * @returns {string} HTML for the task details view\r\n */\r\nfunction getTaskDetailsView() {\r\n  return `\r\n<div id=\"taskDetailsView\" class=\"detail-view\">\r\n  <div class=\"detail-header\">\r\n    <h2>Task Details</h2>\r\n    <button class=\"back-button\">Back</button>\r\n  </div>\r\n  <div id=\"taskDetails\"></div>\r\n</div>\r\n`;\r\n}\r\n\r\n/**\r\n * Combines all views into a single HTML string\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} Combined HTML for all views\r\n */\r\nfunction getAllViews(data) {\r\n  return `\r\n${getMainStructure()}\r\n${getProgramsView(data)}\r\n${getProductsView(data)}\r\n${getMaterialSystemsView(data)}\r\n${getSuppliersView(data)}\r\n${getFundingOpportunitiesView(data)}\r\n${getTaskDetailsView()}\r\n</div>`;\r\n}\r\n\r\nmodule.exports = {\r\n  getMainStructure,\r\n  getProgramsView,\r\n  getProductsView,\r\n  getMaterialSystemsView,\r\n  getSuppliersView,\r\n  getFundingOpportunitiesView,\r\n  getTaskDetailsView,\r\n  getAllViews\r\n}; ","/**\r\n * Functions for creating roadmap visualizations\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getRoadmapVisualizer() {\r\n  console.log('Loading roadmap visualizer module');\r\n  return `\r\n// Create a roadmap visualization\r\nfunction createRoadmapVisualization(item, container) {\r\n  console.log('Creating roadmap visualization for:', item.name);\r\n  \r\n  // Check if the container exists\r\n  if (!container) {\r\n    console.error('Roadmap container not found');\r\n    return;\r\n  }\r\n  \r\n  // Clear the container\r\n  container.innerHTML = '';\r\n  \r\n  // Get timeline data - could be from a program or product\r\n  const timeline = item.timeline || [];\r\n  \r\n  // Create the roadmap visualization\r\n  if (timeline && timeline.length > 0) {\r\n    // Sort timeline items by date\r\n    const sortedTimeline = [...timeline].sort((a, b) => {\r\n      return new Date(a.date) - new Date(b.date);\r\n    });\r\n    \r\n    // Find min and max dates for scaling\r\n    const minDate = new Date(sortedTimeline[0].date);\r\n    const maxDate = new Date(sortedTimeline[sortedTimeline.length - 1].date);\r\n    \r\n    // Add some padding to the date range (3 months)\r\n    minDate.setMonth(minDate.getMonth() - 3);\r\n    maxDate.setMonth(maxDate.getMonth() + 3);\r\n    \r\n    // Calculate the total time span in milliseconds\r\n    const timeSpan = maxDate - minDate;\r\n    \r\n    // Create the roadmap HTML\r\n    let roadmapHtml = \\`\r\n      <div class=\"roadmap-timeline\">\r\n        <div class=\"timeline-header\">\r\n          <div class=\"timeline-start-date\">\\${formatDate(minDate)}</div>\r\n          <div class=\"timeline-end-date\">\\${formatDate(maxDate)}</div>\r\n        </div>\r\n        <div class=\"timeline-track\">\r\n    \\`;\r\n    \r\n    // Add timeline items\r\n    sortedTimeline.forEach(item => {\r\n      const itemDate = new Date(item.date);\r\n      // Calculate position as percentage of total time span\r\n      const position = ((itemDate - minDate) / timeSpan) * 100;\r\n      \r\n      roadmapHtml += \\`\r\n        <div class=\"timeline-item \\${item.type ? item.type.toLowerCase() : 'milestone'}\" \r\n             style=\"left: \\${position}%\">\r\n          <div class=\"timeline-item-marker\"></div>\r\n          <div class=\"timeline-item-label\">\\${item.name}</div>\r\n          <div class=\"timeline-item-date\">\\${formatDate(itemDate)}</div>\r\n          \\${item.description ? \\`<div class=\"timeline-item-description\">\\${item.description}</div>\\` : ''}\r\n        </div>\r\n      \\`;\r\n    });\r\n    \r\n    roadmapHtml += \\`\r\n        </div>\r\n      </div>\r\n    \\`;\r\n    \r\n    container.innerHTML = roadmapHtml;\r\n  } else {\r\n    container.innerHTML = '<p>No timeline data available.</p>';\r\n  }\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getRoadmapVisualizer }; ","/**\r\n * Functions for handling material system details\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getMaterialHandler() {\r\n  return `\r\n// Material system details handler\r\nfunction showMaterialDetails(material) {\r\n  console.log('Showing material system details for:', material.name);\r\n  \r\n  // Get related products that use this material\r\n  const relatedProducts = roadmapData.products.filter(p => \r\n    p.materialSystems && p.materialSystems.includes(material.id)\r\n  );\r\n  \r\n  // Create the detail view HTML\r\n  let html = \\`\r\n    <div class=\"material-detail-content\">\r\n      <h2>\\${material.name}</h2>\r\n      \r\n      <div class=\"material-info\">\r\n        <p><strong>Material Type:</strong> \\${material.type || 'N/A'}</p>\r\n        <p><strong>Qualification Status:</strong> \\${material.qualification || 'N/A'}</p>\r\n        <p><strong>Qualification Class:</strong> \\${material.qualificationClass || 'N/A'}</p>\r\n        <p><strong>Supplier:</strong> \\${material.supplier || 'N/A'}</p>\r\n      </div>\r\n      \r\n      <h3>Properties</h3>\r\n      <div class=\"material-properties\">\\`;\r\n  \r\n  // Add material properties if they exist\r\n  if (material.properties) {\r\n    html += \\`<table class=\"properties-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Property</th>\r\n          <th>Value</th>\r\n          <th>Unit</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\\`;\r\n    \r\n    for (const [key, value] of Object.entries(material.properties)) {\r\n      html += \\`\r\n        <tr>\r\n          <td>\\${key.charAt(0).toUpperCase() + key.slice(1)}</td>\r\n          <td>\\${value.value || 'N/A'}</td>\r\n          <td>\\${value.unit || ''}</td>\r\n        </tr>\\`;\r\n    }\r\n    \r\n    html += \\`</tbody>\r\n    </table>\\`;\r\n  } else {\r\n    html += \\`<p>No specific properties defined.</p>\\`;\r\n  }\r\n  \r\n  html += \\`</div>\r\n    \r\n    <h3>Related Products</h3>\r\n    <div class=\"related-products\">\\`;\r\n  \r\n  // Add related products\r\n  if (relatedProducts.length > 0) {\r\n    html += \\`<ul class=\"product-list\">\\`;\r\n    relatedProducts.forEach(product => {\r\n      html += \\`<li><a href=\"#\" class=\"product-link\" data-product-id=\"\\${product.id}\">\\${product.name}</a></li>\\`;\r\n    });\r\n    html += \\`</ul>\\`;\r\n  } else {\r\n    html += \\`<p>No products are using this material system.</p>\\`;\r\n  }\r\n  \r\n  html += \\`</div>\r\n    \r\n    <h3>Material Roadmap</h3>\\`;\r\n  \r\n  // Add material roadmap if it exists\r\n  if (material.roadmap && material.roadmap.length > 0) {\r\n    html += \\`\r\n      <div class=\"material-roadmap\">\r\n        <table class=\"roadmap-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Task</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Status</th>\r\n              <th>Funding Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\\`;\r\n    \r\n    material.roadmap.forEach(task => {\r\n      html += \\`\r\n        <tr class=\"\\${task.status ? task.status.toLowerCase().replace(/\\\\s+/g, '-') : ''}\">\r\n          <td>\\${task.task}</td>\r\n          <td>\\${task.start ? new Date(task.start).toLocaleDateString() : 'N/A'}</td>\r\n          <td>\\${task.end ? new Date(task.end).toLocaleDateString() : 'N/A'}</td>\r\n          <td>\\${task.status || 'N/A'}</td>\r\n          <td>\\${task.fundingType || 'N/A'}</td>\r\n        </tr>\\`;\r\n    });\r\n    \r\n    html += \\`</tbody>\r\n        </table>\r\n      </div>\\`;\r\n  } else {\r\n    html += \\`<p>No roadmap defined for this material system.</p>\\`;\r\n  }\r\n  \r\n  html += \\`\r\n    <button class=\"back-button\">Back</button>\r\n    </div>\\`;\r\n  \r\n  // Get or create the material detail section\r\n  let detailSection = document.getElementById('materialDetailSection');\r\n  \r\n  // If the section doesn't exist, create it\r\n  if (!detailSection) {\r\n    console.log('Material detail section not found, creating it');\r\n    detailSection = document.createElement('div');\r\n    detailSection.id = 'materialDetailSection';\r\n    detailSection.className = 'detail-view';\r\n    document.querySelector('.container').appendChild(detailSection);\r\n  }\r\n  \r\n  // Set the content\r\n  detailSection.innerHTML = html;\r\n  \r\n  // Add styles for the material detail content\r\n  const styleElement = document.createElement('style');\r\n  styleElement.textContent = \\`\r\n    .material-detail-content {\r\n      padding: 20px;\r\n    }\r\n    .material-info {\r\n      background-color: #f5f5f5;\r\n      border-radius: 8px;\r\n      padding: 15px;\r\n      margin-bottom: 20px;\r\n    }\r\n    .properties-table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n      margin-bottom: 20px;\r\n    }\r\n    .properties-table th, .properties-table td {\r\n      border: 1px solid #ddd;\r\n      padding: 8px;\r\n      text-align: left;\r\n    }\r\n    .properties-table th {\r\n      background-color: #f2f2f2;\r\n    }\r\n    .roadmap-table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n      margin-bottom: 20px;\r\n    }\r\n    .roadmap-table th, .roadmap-table td {\r\n      border: 1px solid #ddd;\r\n      padding: 8px;\r\n      text-align: left;\r\n    }\r\n    .roadmap-table th {\r\n      background-color: #f2f2f2;\r\n    }\r\n    .roadmap-table tr.complete {\r\n      background-color: #e8f5e9;\r\n    }\r\n    .roadmap-table tr.in-progress {\r\n      background-color: #e3f2fd;\r\n    }\r\n    .roadmap-table tr.planned {\r\n      background-color: #f5f5f5;\r\n    }\r\n    .product-list {\r\n      list-style-type: none;\r\n      padding: 0;\r\n    }\r\n    .product-list li {\r\n      margin-bottom: 8px;\r\n    }\r\n    .product-link {\r\n      color: #00269A;\r\n      text-decoration: none;\r\n    }\r\n    .product-link:hover {\r\n      text-decoration: underline;\r\n    }\r\n  \\`;\r\n  document.head.appendChild(styleElement);\r\n  \r\n  // Add event listener to the back button\r\n  detailSection.querySelector('.back-button').addEventListener('click', function(e) {\r\n    e.preventDefault();\r\n    goBack();\r\n  });\r\n  \r\n  // Add event listeners to product links\r\n  detailSection.querySelectorAll('.product-link').forEach(link => {\r\n    link.addEventListener('click', function(e) {\r\n      e.preventDefault();\r\n      const productId = this.getAttribute('data-product-id');\r\n      const product = roadmapData.products.find(p => p.id === productId);\r\n      if (product) {\r\n        navStack.push('materialDetailSection');\r\n        showProductDetails(product);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Show the material detail section and hide other views\r\n  // First, hide all main views\r\n  document.querySelectorAll('.main-view').forEach(view => {\r\n    view.style.display = 'none';\r\n  });\r\n  \r\n  // Then hide all detail views\r\n  document.querySelectorAll('.detail-view').forEach(view => {\r\n    view.style.display = 'none';\r\n  });\r\n  \r\n  // Finally, show our material detail section\r\n  detailSection.style.display = 'block';\r\n  \r\n  // Also update the navigation stack\r\n  navStack.push('materialDetailSection');\r\n  console.log('Navigation stack updated:', navStack);\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getMaterialHandler }; ","// Main entry point\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst { schema } = require('./schema');\r\nconst { generateHtmlContent } = require('./html/template');\r\nconst { dataFilePath, outputFilePath, devRepoPath, devRepoOutputFilePath } = require('./config');\r\nconst createAjv = require('./utils/ajv-config');\r\nconst { getAllDetailHandlers } = require('./html/detailHandlers');\r\n\r\n// Create an Ajv instance\r\nconst ajv = createAjv();\r\n\r\nfunction buildHTML() {\r\n  try {\r\n    const data = JSON.parse(fs.readFileSync(dataFilePath, \"utf8\"));\r\n    const validateData = ajv.compile(schema);\r\n    const valid = validateData(data);\r\n    \r\n    if (!valid) {\r\n      console.error(\"Data validation error: \" + JSON.stringify(validateData.errors, null, 2));\r\n      return;\r\n    }\r\n    \r\n    console.log(\"Data validation successful.\");\r\n    const htmlContent = generateHtmlContent(data);\r\n    const detailHandlersJs = getAllDetailHandlers();\r\n    fs.writeFileSync(outputFilePath, htmlContent, \"utf8\");\r\n    console.log(\"HTML file generated successfully at: \" + outputFilePath);\r\n    copyToRepository();\r\n    console.log('HTML file generated successfully!');\r\n  } catch (err) {\r\n    console.error(\"Error reading data file: \" + err);\r\n  }\r\n}\r\n\r\nfunction copyToRepository() {\r\n  try {\r\n    if (!fs.existsSync(devRepoPath)) {\r\n      fs.mkdirSync(devRepoPath, { recursive: true });\r\n      console.log(\"Created repository folder: \" + devRepoPath);\r\n    }\r\n    fs.copyFileSync(outputFilePath, devRepoOutputFilePath);\r\n    console.log(\"File copied successfully to external repository: \" + devRepoOutputFilePath);\r\n  } catch (err) {\r\n    console.error(\"Error copying file to external repository: \" + err);\r\n  }\r\n}\r\n\r\n// Export functions for testing\r\nmodule.exports = {\r\n  buildHTML,\r\n  copyToRepository\r\n};\r\n\r\n// Main execution\r\nif (require.main === module) {\r\n  buildHTML();\r\n  \r\n  // Watch for changes\r\n  fs.watch(dataFilePath, function(eventType, filename) {\r\n    if (filename && eventType === \"change\") {\r\n      console.log(filename + \" has been modified. Regenerating HTML and copying to external repository...\");\r\n      buildHTML();\r\n    }\r\n  });\r\n} ","/**\r\n * Functions for creating quad box visualizations\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getQuadBoxVisualizer() {\r\n  return `\r\n// Create a quad box visualization for a product\r\nfunction createQuadBox(product, container) {\r\n  console.log('Creating quad box for product:', product.name);\r\n  \r\n  // Get all material systems for this product\r\n  const materialSystems = product.materialSystems && product.materialSystems.length > 0 \r\n    ? product.materialSystems.map(id => roadmapData.materialSystems.find(m => m.id === id)).filter(Boolean)\r\n    : [];\r\n  \r\n  // Default to first material system if available\r\n  const defaultMaterial = materialSystems.length > 0 ? materialSystems[0] : null;\r\n  \r\n  // Create a specialized quad box layout for product details\r\n  container.innerHTML = \\`\r\n    <h3>Product Development Status</h3>\r\n    \r\n    <!-- Material System Filter Buttons -->\r\n    <div class=\"material-system-filters\">\r\n      \\${materialSystems.length > 0 ? \\`\r\n        <div class=\"filter-label\">Select Material System:</div>\r\n        <div class=\"filter-buttons\">\r\n          \\${materialSystems.map((material, index) => \\`\r\n            <button class=\"material-filter-btn \\${index === 0 ? 'active' : ''}\" \r\n                    data-material-id=\"\\${material.id}\">\r\n              \\${material.name}\r\n            </button>\r\n          \\`).join('')}\r\n        </div>\r\n      \\` : '<p>No material systems available</p>'}\r\n    </div>\r\n    \r\n    <!-- Product Development Progress Module -->\r\n    <div class=\"product-development-progress\">\r\n      <div class=\"progress-section\">\r\n        <h4>TRL</h4>\r\n        <div class=\"progress-container\">\r\n          <div class=\"progress-bar-wrapper\">\r\n            <div class=\"progress-bar trl-progress\" style=\"width: \\${(product.trl || 1) * 11.1}%\">\r\n              <span class=\"progress-current\">\\${product.trl || 'N/A'}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress-labels\">\r\n            <span class=\"progress-min\">1</span>\r\n            <span class=\"progress-max\">9</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"progress-section\">\r\n        <h4>MRL</h4>\r\n        <div class=\"progress-container\">\r\n          <div class=\"progress-bar-wrapper\">\r\n            <div class=\"progress-bar mrl-progress\" style=\"width: \\${(defaultMaterial && defaultMaterial.mrl ? defaultMaterial.mrl : 1) * 10}%\">\r\n              <span class=\"progress-current\">\\${defaultMaterial && defaultMaterial.mrl ? defaultMaterial.mrl : 'N/A'}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress-labels\">\r\n            <span class=\"progress-min\">1</span>\r\n            <span class=\"progress-max\">10</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"specialized-quad-box\">\r\n      <!-- Material Systems Quadrant -->\r\n      <div class=\"quad-section material-section\">\r\n        <h4>Material Systems</h4>\r\n        <div class=\"quad-content material-content\">\r\n          \\${materialSystems.length > 0 ? materialSystems.map((material, index) => \\`\r\n            <div class=\"material-system-details\" id=\"material-\\${material.id}\" \r\n                 style=\"display: \\${index === 0 ? 'block' : 'none'}\">\r\n              <h5>\\${material.name}</h5>\r\n              <div class=\"material-details\">\r\n                <p><strong>Process:</strong> \\${material.process || 'N/A'}</p>\r\n                <p><strong>Qualification:</strong> \\${material.qualification || 'N/A'}</p>\r\n                <p><strong>Qualification Class:</strong> \\${material.qualificationClass || 'N/A'}</p>\r\n                <p><strong>Statistical Basis:</strong> \\${material.statisticalBasis || 'None'}</p>\r\n                \r\n                \\${material.postProcessing && material.postProcessing.length > 0 ? \\`\r\n                  <div class=\"material-post-processing\">\r\n                    <p><strong>Post Processing:</strong></p>\r\n                    <ul class=\"post-processing-list\" style=\"list-style-type: disc;\">\r\n                      \\${material.postProcessing.map(process => \\`<li>\\${process}</li>\\`).join('')}\r\n                    </ul>\r\n                  </div>\r\n                \\` : ''}\r\n                \r\n                <div class=\"view-details-button-container\">\r\n                  <button class=\"view-details-button material-details-btn\" \r\n                          data-material-id=\"\\${material.id}\">\r\n                    View Full Details\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          \\`).join('') : '<p>No material systems specified</p>'}\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Design Quadrant -->\r\n      <div class=\"quad-section design-section\">\r\n        <h4>Design</h4>\r\n        <div class=\"quad-content design-content\">\r\n          \\${product.designTools && product.designTools.length > 0 ? \\`\r\n            <h5>Design Tools</h5>\r\n            <ul class=\"design-list\">\r\n              \\${product.designTools.map(tool => \\`<li>\\${tool}</li>\\`).join('')}\r\n            </ul>\\` : \r\n            ''\r\n          }\r\n          \r\n          \\${product.documentation && product.documentation.length > 0 ? \\`\r\n            <h5>Documentation</h5>\r\n            <ul class=\"design-list\">\r\n              \\${product.documentation.map(doc => \\`<li>\\${doc}</li>\\`).join('')}\r\n            </ul>\\` : \r\n            ''\r\n          }\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Manufacturing Quadrant -->\r\n      <div class=\"quad-section manufacturing-section\">\r\n        <h4>Manufacturing</h4>\r\n        <div class=\"quad-content manufacturing-content\">\r\n          \\${materialSystems.length > 0 ? materialSystems.map((material, index) => \\`\r\n            <div class=\"manufacturing-for-material\" id=\"manufacturing-\\${material.id}\" \r\n                 style=\"display: \\${index === 0 ? 'block' : 'none'}\">\r\n              \r\n              <!-- Qualified Machines -->\r\n              \\${material.qualifiedMachines && material.qualifiedMachines.length > 0 ? \\`\r\n                <div class=\"qualified-machines\">\r\n                  <h5>Qualified Machines</h5>\r\n                  <ul class=\"machines-list\">\r\n                    \\${material.qualifiedMachines.map(machine => \\`<li>\\${machine}</li>\\`).join('')}\r\n                  </ul>\r\n                </div>\r\n              \\` : ''}\r\n              \r\n              <!-- Relevant Suppliers as Tiles -->\r\n              \\${(() => {\r\n                // Find suppliers that support this material\r\n                const relevantSuppliers = roadmapData.suppliers.filter(\r\n                  s => s.materials && s.materials.includes(material.id)\r\n                );\r\n                \r\n                return relevantSuppliers.length > 0 ? \\`\r\n                  <div class=\"relevant-suppliers\">\r\n                    <h5>Printing Suppliers</h5>\r\n                    <div class=\"supplier-tiles\">\r\n                      \\${relevantSuppliers.map(supplier => \\`\r\n                        <div class=\"supplier-tile\">\r\n                          <a href=\"#\" class=\"supplier-link\" data-supplier-id=\"\\${supplier.id}\">\r\n                            \\${supplier.name}\r\n                          </a>\r\n                        </div>\r\n                      \\`).join('')}\r\n                    </div>\r\n                  </div>\r\n                \\` : '';\r\n              })()}\r\n              \r\n              <!-- Post Processing Suppliers -->\r\n              \\${(() => {\r\n                // Find post processing suppliers for this material\r\n                const postProcessingSuppliers = product.postProcessingSuppliers ? \r\n                  product.postProcessingSuppliers.filter(pps => {\r\n                    const supplier = roadmapData.suppliers.find(s => s.id === pps.supplier);\r\n                    return supplier;\r\n                  }) : [];\r\n                \r\n                return postProcessingSuppliers.length > 0 ? \\`\r\n                  <div class=\"post-processing-suppliers\">\r\n                    <h5>Post Processing Suppliers</h5>\r\n                    <div class=\"supplier-tiles\">\r\n                      \\${postProcessingSuppliers.map(ppSupplier => {\r\n                        const supplier = roadmapData.suppliers.find(s => s.id === ppSupplier.supplier);\r\n                        return supplier ? \\`\r\n                          <div class=\"supplier-tile\">\r\n                            <a href=\"#\" class=\"supplier-link\" data-supplier-id=\"\\${supplier.id}\">\r\n                              <span class=\"supplier-name\">\\${supplier.name}</span>\r\n                              <span class=\"process-name\">\\${ppSupplier.process}</span>\r\n                            </a>\r\n                          </div>\r\n                        \\` : '';\r\n                      }).join('')}\r\n                    </div>\r\n                  </div>\r\n                \\` : '';\r\n              })()}\r\n            </div>\r\n          \\`).join('') : ''}\r\n          \r\n          <!-- Product-specific manufacturing info (always shown) -->\r\n          \\${product.relevantMachines && product.relevantMachines.length > 0 ? \\`\r\n            <div class=\"product-machines\">\r\n              <h5>Product-Specific Machines</h5>\r\n              <ul class=\"machines-list\">\r\n                \\${product.relevantMachines.map(machine => \\`<li>\\${machine}</li>\\`).join('')}\r\n              </ul>\r\n            </div>\\` : \r\n            ''\r\n          }\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Quality Quadrant -->\r\n      <div class=\"quad-section quality-section\">\r\n        <h4>Quality</h4>\r\n        <div class=\"quad-content quality-content\">\r\n          \\${materialSystems.length > 0 ? materialSystems.map((material, index) => \\`\r\n            <div class=\"quality-for-material\" id=\"quality-\\${material.id}\" \r\n                 style=\"display: \\${index === 0 ? 'block' : 'none'}\">\r\n              \r\n              <!-- Standard NDT -->\r\n              \\${material.standardNDT && material.standardNDT.length > 0 ? \\`\r\n                <div class=\"standard-ndt\">\r\n                  <h5>Standard NDT</h5>\r\n                  <ul class=\"ndt-list\">\r\n                    \\${material.standardNDT.map(ndt => \\`<li>\\${ndt}</li>\\`).join('')}\r\n                  </ul>\r\n                </div>\r\n              \\` : ''}\r\n            </div>\r\n          \\`).join('') : ''}\r\n          \r\n          <!-- Product-specific quality info (always shown) -->\r\n          \\${product.specialNDT && product.specialNDT.length > 0 ? \\`\r\n            <div class=\"special-ndt\">\r\n              <h5>Product Specific NDT</h5>\r\n              <ul class=\"ndt-list\">\r\n                \\${product.specialNDT.map(ndt => \\`<li>\\${ndt}</li>\\`).join('')}\r\n              </ul>\r\n            </div>\\` : \r\n            ''\r\n          }\r\n          \r\n          \\${product.partAcceptance && product.partAcceptance.length > 0 ? \\`\r\n            <div class=\"part-acceptance\">\r\n              <h5>Part Acceptance</h5>\r\n              <ul class=\"ndt-list\">\r\n                \\${product.partAcceptance.map(acceptance => \\`<li>\\${acceptance}</li>\\`).join('')}\r\n              </ul>\r\n            </div>\\` : \r\n            ''\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <style>\r\n      /* Consistent styling for the quad box */\r\n      .specialized-quad-box {\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-template-rows: repeat(2, minmax(250px, auto));\r\n        gap: 15px;\r\n        margin-top: 20px;\r\n      }\r\n      \r\n      .quad-section {\r\n        border: 1px solid #ddd;\r\n        border-radius: 8px;\r\n        padding: 15px;\r\n        background-color: #f9f9f9;\r\n        overflow: auto;\r\n        max-height: 350px;\r\n      }\r\n      \r\n      /* Material Systems - Blue */\r\n      .material-section h4 {\r\n        margin-top: 0;\r\n        padding-bottom: 8px;\r\n        border-bottom: 2px solid #0056b3;\r\n        color: #0056b3;\r\n        font-size: 16px;\r\n      }\r\n      \r\n      /* Design - Dark Green */\r\n      .design-section h4 {\r\n        margin-top: 0;\r\n        padding-bottom: 8px;\r\n        border-bottom: 2px solid #2e7d32;\r\n        color: #2e7d32;\r\n        font-size: 16px;\r\n      }\r\n      \r\n      /* Manufacturing - Deep Pink */\r\n      .manufacturing-section h4 {\r\n        margin-top: 0;\r\n        padding-bottom: 8px;\r\n        border-bottom: 2px solid #c2185b;\r\n        color: #c2185b;\r\n        font-size: 16px;\r\n      }\r\n      \r\n      /* Quality - Orange */\r\n      .quality-section h4 {\r\n        margin-top: 0;\r\n        padding-bottom: 8px;\r\n        border-bottom: 2px solid #e65100;\r\n        color: #e65100;\r\n        font-size: 16px;\r\n      }\r\n      \r\n      .quad-section h5 {\r\n        color: #333;\r\n        margin: 12px 0 8px 0;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .quad-content {\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .quad-content ul {\r\n        margin: 5px 0;\r\n        padding-left: 20px;\r\n      }\r\n      \r\n      .quad-content li {\r\n        margin-bottom: 5px;\r\n      }\r\n      \r\n      /* Supplier tiles styling */\r\n      .supplier-tiles {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n        margin-top: 10px;\r\n      }\r\n      \r\n      .supplier-tile {\r\n        background-color: #e6f2ff;\r\n        border-radius: 6px;\r\n        padding: 8px 12px;\r\n        border: 1px solid #c2185b;\r\n        background-color: #fce4ec;\r\n      }\r\n      \r\n      .supplier-tile a {\r\n        text-decoration: none;\r\n        color: #c2185b;\r\n        display: flex;\r\n        flex-direction: column;\r\n      }\r\n      \r\n      .supplier-tile .process-name {\r\n        font-size: 12px;\r\n        color: #666;\r\n        margin-top: 3px;\r\n      }\r\n      \r\n      /* Consistent list styling */\r\n      .machines-list, .ndt-list, .post-processing-list, .design-list {\r\n        list-style-type: disc;\r\n      }\r\n      \r\n      /* Material filter buttons */\r\n      .material-system-filters {\r\n        margin-bottom: 15px;\r\n      }\r\n      \r\n      .filter-buttons {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 8px;\r\n        margin-top: 8px;\r\n      }\r\n      \r\n      .material-filter-btn {\r\n        padding: 6px 12px;\r\n        background-color: #f0f0f0;\r\n        border: 1px solid #ddd;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .material-filter-btn.active {\r\n        background-color: #0056b3;\r\n        color: white;\r\n        border-color: #0056b3;\r\n      }\r\n      \r\n      /* Progress bars */\r\n      .progress-section {\r\n        margin-bottom: 15px;\r\n      }\r\n      \r\n      .progress-bar-wrapper {\r\n        height: 20px;\r\n        background-color: #e9ecef;\r\n        border-radius: 4px;\r\n        margin: 8px 0;\r\n      }\r\n      \r\n      .progress-bar {\r\n        height: 100%;\r\n        border-radius: 4px;\r\n        background-color: #0056b3;\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n      \r\n      .progress-bar .progress-current {\r\n        color: white;\r\n        font-weight: bold;\r\n        text-shadow: 1px 1px 1px rgba(0,0,0,0.5);\r\n      }\r\n      \r\n      .progress-labels {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: 14px;\r\n      }\r\n    </style>\r\n    \r\n    <h3>Technical Roadmap</h3>\r\n    <div id=\"productRoadmapContainer\" class=\"roadmap-container\"></div>\r\n  \\`;\r\n  \r\n  // Add event listeners to material filter buttons\r\n  container.querySelectorAll('.material-filter-btn').forEach(button => {\r\n    button.addEventListener('click', function() {\r\n      const materialId = this.getAttribute('data-material-id');\r\n      const selectedMaterial = roadmapData.materialSystems.find(m => m.id === materialId);\r\n      \r\n      // Update MRL progress bar based on selected material\r\n      if (selectedMaterial && selectedMaterial.mrl) {\r\n        const mrlProgressBar = container.querySelector('.mrl-progress');\r\n        const mrlCurrentLabel = container.querySelector('.mrl-progress .progress-current');\r\n        \r\n        if (mrlProgressBar) {\r\n          mrlProgressBar.style.width = \\`\\${selectedMaterial.mrl * 10}%\\`;\r\n        }\r\n        \r\n        if (mrlCurrentLabel) {\r\n          mrlCurrentLabel.textContent = \\`\\${selectedMaterial.mrl}\\`;\r\n        }\r\n      }\r\n      \r\n      // Update active button\r\n      container.querySelectorAll('.material-filter-btn').forEach(btn => {\r\n        btn.classList.remove('active');\r\n      });\r\n      this.classList.add('active');\r\n      \r\n      // Hide all material details and show the selected one\r\n      container.querySelectorAll('.material-system-details').forEach(div => {\r\n        div.style.display = 'none';\r\n      });\r\n      container.querySelector(\\`#material-\\${materialId}\\`).style.display = 'block';\r\n      \r\n      // Hide all manufacturing details and show the selected one\r\n      container.querySelectorAll('.manufacturing-for-material').forEach(div => {\r\n        div.style.display = 'none';\r\n      });\r\n      const manufacturingDiv = container.querySelector(\\`#manufacturing-\\${materialId}\\`);\r\n      if (manufacturingDiv) {\r\n        manufacturingDiv.style.display = 'block';\r\n      }\r\n      \r\n      // Hide all quality details and show the selected one\r\n      container.querySelectorAll('.quality-for-material').forEach(div => {\r\n        div.style.display = 'none';\r\n      });\r\n      const qualityDiv = container.querySelector(\\`#quality-\\${materialId}\\`);\r\n      if (qualityDiv) {\r\n        qualityDiv.style.display = 'block';\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Add event listeners to material details buttons\r\n  container.querySelectorAll('.material-details-btn').forEach(button => {\r\n    button.addEventListener('click', function() {\r\n      const materialId = this.getAttribute('data-material-id');\r\n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\r\n      if (material) {\r\n        showMaterialDetails(material);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Add event listeners to supplier links\r\n  container.querySelectorAll('.supplier-link').forEach(link => {\r\n    link.addEventListener('click', function(e) {\r\n      e.preventDefault();\r\n      const supplierId = this.getAttribute('data-supplier-id');\r\n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\r\n      if (supplier) {\r\n        showSupplierDetails(supplier);\r\n      }\r\n    });\r\n  });\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getQuadBoxVisualizer };","/**\n * JavaScript functions for handling detailed views in the interactive roadmap\n * @returns {string} JavaScript code as a string\n */\nconst { generateRoadmapHtml } = require('./roadmap');\nconst { getRoadmapVisualizer } = require('./visualizations/roadmapVisualizer');\nconst { getQuadBoxVisualizer } = require('./visualizations/quadBoxVisualizer');\nconst { getProgramHandler } = require('./handlers/programHandler');\nconst { getProductHandler } = require('./handlers/productHandler');\nconst { getMaterialHandler } = require('./handlers/materialHandler');\nconst { getSupplierHandler } = require('./handlers/supplierHandler');\nconst { getFormatters } = require('./utils/formatters');\n\nfunction getAllDetailHandlers() {\n  return `\n// Create a navigation namespace to avoid conflicts\nconst Navigation = {\n  stack: [],\n  \n  push: function(view) {\n    this.stack.push(view);\n    console.log('Navigation stack updated:', this.stack);\n  },\n  \n  goBack: function() {\n    if (this.stack.length > 0) {\n      const prevView = this.stack.pop();\n      console.log('Going back to:', prevView);\n      \n      // Show the previous view\n      if (prevView === 'mainView') {\n        this.showView('mainView');\n      } else if (prevView === 'programDetailsView') {\n        this.showView('programDetailsView');\n      } else if (prevView === 'productDetailsView') {\n        this.showView('productDetailsView');\n      } else if (prevView === 'materialDetailSection') {\n        document.querySelectorAll('.detail-view').forEach(view => {\n          view.style.display = 'none';\n        });\n        document.getElementById('materialDetailSection').style.display = 'block';\n      } else if (prevView === 'supplierDetailSection') {\n        document.querySelectorAll('.detail-view').forEach(view => {\n          view.style.display = 'none';\n        });\n        document.getElementById('supplierDetailSection').style.display = 'block';\n      }\n    } else {\n      // If no previous view, go to main view\n      this.showView('programsView'); // Default to programs view\n    }\n  },\n  \n  showView: function(viewId) {\n    console.log('Showing view:', viewId);\n    \n    // First, hide all detail views\n    document.querySelectorAll('.detail-view').forEach(view => {\n      view.style.display = 'none';\n    });\n    \n    // Hide welcome message if it exists\n    const welcomeHeadings = document.querySelectorAll('h1, h2, h3');\n    welcomeHeadings.forEach(heading => {\n      if (heading.textContent.includes('Welcome to the Interactive Roadmap')) {\n        // Find a parent container to hide\n        let parent = heading;\n        // Go up to find a suitable container\n        while (parent && !parent.classList.contains('container') && parent.parentElement) {\n          parent = parent.parentElement;\n        }\n        \n        // If we found a suitable container that's not the main container, hide it\n        if (parent && !parent.classList.contains('container')) {\n          parent.style.display = 'none';\n        } else if (heading.parentElement) {\n          // Otherwise just hide the heading's parent\n          heading.parentElement.style.display = 'none';\n        }\n      }\n    });\n    \n    // Show the requested view\n    const targetView = document.getElementById(viewId);\n    if (targetView) {\n      targetView.style.display = 'block';\n    } else {\n      console.error('Target view not found:', viewId);\n      // Show the programs view as a fallback\n      const programsView = document.getElementById('programsView');\n      if (programsView) {\n        programsView.style.display = 'block';\n      }\n    }\n  }\n};\n\n// Define global functions that use our Navigation namespace\nfunction goBack() { Navigation.goBack(); }\nfunction showView(viewId) { Navigation.showView(viewId); }\n\n// Import utility functions first\n${getFormatters()}\n\n// Import visualizations next - before handlers that use them\n${getRoadmapVisualizer()}\n${getQuadBoxVisualizer()}\n\n// Import handlers last - after the visualizations they depend on\n${getProgramHandler().replace(/navStack\\.push/g, 'Navigation.stack.push')}\n${getProductHandler().replace(/navStack\\.push/g, 'Navigation.stack.push')}\n${getMaterialHandler().replace(/navStack\\.push/g, 'Navigation.stack.push')}\n${getSupplierHandler().replace(/navStack\\.push/g, 'Navigation.stack.push')}\n\n// Initialize by hiding welcome section when any tab is clicked\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Add click handlers to the navigation tabs\n  const tabs = document.querySelectorAll('.nav-tab');\n  tabs.forEach(tab => {\n    tab.addEventListener('click', function() {\n      const viewId = this.getAttribute('data-view');\n      if (viewId) {\n        showView(viewId);\n      }\n    });\n  });\n  \n  // Add any other initialization for new handlers here\n  // For example, initialize supplier view handlers\n  const supplierLinks = document.querySelectorAll('.supplier-link');\n  supplierLinks.forEach(link => {\n    link.addEventListener('click', function(e) {\n      e.preventDefault();\n      const supplierId = this.getAttribute('data-supplier-id');\n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\n      if (supplier) {\n        showSupplierDetails(supplier);\n      }\n    });\n  });\n  \n  // Log that initialization is complete\n  console.log('Detail handlers initialized successfully');\n});\n`;\n}\n\nmodule.exports = { getAllDetailHandlers };","/**\r\n * Generates the complete HTML content for the interactive roadmap\r\n * @param {Object} data - The roadmap data\r\n * @returns {string} The complete HTML content\r\n */\r\nconst { sanitizeData, safeJsonStringify } = require('../utils/templateUtils');\r\nconst { getStyles } = require('./styles');\r\nconst { getAllViews } = require('./views');\r\nconst { getScripts } = require('./scripts');\r\nconst { getAllDetailHandlers } = require('./detailHandlers');\r\nconst { getRoadmapStyles } = require('./roadmapStyles');\r\n\r\nfunction generateHtmlContent(data) {\r\n  console.log('Generating HTML content with data:', data);\r\n  \r\n  // Check if data is valid\r\n  if (!data || typeof data !== 'object') {\r\n    console.error('Invalid data provided to template:', data);\r\n    data = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\r\n  }\r\n  \r\n  // Make sure data is properly structured to avoid errors\r\n  const safeData = sanitizeData(data);\r\n  \r\n  console.log('Sanitized data:', safeData);\r\n  console.log('Programs:', safeData.programs.length);\r\n  console.log('Products:', safeData.products.length);\r\n  \r\n  // For debugging, add a sample program if none exist\r\n  if (safeData.programs.length === 0) {\r\n    console.warn('No programs found in data, adding a sample program for testing');\r\n    safeData.programs.push({\r\n      id: 'SAMPLE1',\r\n      name: 'Sample Program',\r\n      description: 'This is a sample program added for testing',\r\n      status: 'Planned',\r\n      tasks: []\r\n    });\r\n  }\r\n  \r\n  // Store data for client-side access - ensure it's properly escaped for embedding in JavaScript\r\n  // Use a different approach to pass the data to avoid escaping issues\r\n  const dataScript = `\r\n    <script id=\"roadmap-data\" type=\"application/json\">\r\n      ${JSON.stringify(safeData)}\r\n    </script>\r\n  `;\r\n\r\n  return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Interactive Roadmap</title>\r\n  <style>\r\n${getStyles()}\r\n${getRoadmapStyles()}\r\n  </style>\r\n</head>\r\n<body>\r\n  <!-- Data debugging -->\r\n  <script>\r\n    console.log('Data embedded in page');\r\n  </script>\r\n  \r\n  <!-- Embed the data as JSON -->\r\n  ${dataScript}\r\n  \r\n${getAllViews(safeData)}\r\n  <script>\r\n${getScriptsWithoutData()}\r\n${getAllDetailHandlers()}\r\n  </script>\r\n</body>\r\n</html>`;\r\n}\r\n\r\n// Modified version of getScripts that doesn't take the data string\r\nfunction getScriptsWithoutData() {\r\n  return `\r\n// Navigation stack to track view history\r\nconst navStack = [];\r\n\r\n// Debug function to help troubleshoot\r\nfunction debugElement(selector) {\r\n  const elements = document.querySelectorAll(selector);\r\n  console.log(\\`Found \\${elements.length} elements matching \"\\${selector}\"\\`);\r\n  elements.forEach((el, i) => {\r\n    console.log(\\`Element \\${i}:\\`, el);\r\n    if (el.id) {\r\n      console.log(\\`  ID: \\${el.id}\\`);\r\n    }\r\n    if (el.className) {\r\n      console.log(\\`  Classes: \\${el.className}\\`);\r\n    }\r\n    if (el.getAttribute('data-view')) {\r\n      console.log(\\`  View: \\${el.getAttribute('data-view')}\\`);\r\n    }\r\n  });\r\n}\r\n\r\n// Load the data from the embedded JSON\r\nlet roadmapData;\r\ntry {\r\n  const dataElement = document.getElementById('roadmap-data');\r\n  if (dataElement) {\r\n    roadmapData = JSON.parse(dataElement.textContent);\r\n    console.log('Roadmap data loaded successfully from embedded JSON');\r\n  } else {\r\n    console.error('Data element not found');\r\n    roadmapData = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\r\n  }\r\n  \r\n  // Debug the data structure\r\n  console.log('Programs:', roadmapData.programs ? roadmapData.programs.length : 0);\r\n  console.log('Products:', roadmapData.products ? roadmapData.products.length : 0);\r\n  console.log('Material Systems:', roadmapData.materialSystems ? roadmapData.materialSystems.length : 0);\r\n  console.log('Suppliers:', roadmapData.suppliers ? roadmapData.suppliers.length : 0);\r\n  console.log('Funding Opportunities:', roadmapData.cradOpportunities ? roadmapData.cradOpportunities.length : 0);\r\n  \r\n  // Log the first program if available\r\n  if (roadmapData.programs && roadmapData.programs.length > 0) {\r\n    console.log('First program:', roadmapData.programs[0]);\r\n  }\r\n} catch (error) {\r\n  console.error('Error parsing roadmap data:', error);\r\n  roadmapData = { programs: [], products: [], materialSystems: [], suppliers: [], cradOpportunities: [] };\r\n}\r\n\r\n// Initialize the application\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  console.log('DOM fully loaded');\r\n  \r\n  // Debug the navigation tabs\r\n  debugElement('.nav-tab');\r\n  \r\n  // Debug the views\r\n  debugElement('.detail-view');\r\n  debugElement('#mainView');\r\n  \r\n  initializeNavigation();\r\n  attachEventHandlers();\r\n  setupSearch();\r\n  addTooltips();\r\n  \r\n  // Set default view\r\n  const defaultTab = document.querySelector('.nav-tab[data-view=\"programsView\"]');\r\n  if (defaultTab) {\r\n    console.log('Setting default tab:', defaultTab);\r\n    defaultTab.classList.add('active');\r\n    showView('programsView');\r\n  } else {\r\n    console.error('Default tab not found');\r\n  }\r\n});\r\n\r\n// Set up navigation and event handlers\r\nfunction initializeNavigation() {\r\n  console.log('Initializing navigation');\r\n  \r\n  // Set up navigation tabs\r\n  document.querySelectorAll('.nav-tab').forEach(tab => {\r\n    const viewId = tab.getAttribute('data-view');\r\n    console.log('Setting up tab for view:', viewId);\r\n    \r\n    tab.addEventListener('click', function(e) {\r\n      console.log('Tab clicked:', viewId);\r\n      e.preventDefault();\r\n      \r\n      // Update active tab\r\n      document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));\r\n      this.classList.add('active');\r\n      \r\n      // Show the selected view\r\n      showView(viewId);\r\n    });\r\n  });\r\n  \r\n  // Add keyboard navigation\r\n  document.addEventListener('keydown', function(e) {\r\n    // ESC key for going back\r\n    if (e.key === 'Escape') {\r\n      goBack();\r\n    }\r\n  });\r\n  \r\n  // Set up back buttons\r\n  document.querySelectorAll('.back-button').forEach(button => {\r\n    button.addEventListener('click', function(e) {\r\n      console.log('Back button clicked');\r\n      e.preventDefault();\r\n      goBack();\r\n    });\r\n  });\r\n}\r\n\r\n// Attach event handlers to all interactive elements\r\nfunction attachEventHandlers() {\r\n  console.log('Attaching event handlers');\r\n  \r\n  // Set up program tile click handlers\r\n  document.querySelectorAll('[data-program-id]').forEach(tile => {\r\n    const programId = tile.getAttribute('data-program-id');\r\n    console.log('Setting up click handler for program:', programId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const programId = this.getAttribute('data-program-id');\r\n      console.log('Program tile clicked:', programId);\r\n      \r\n      // Debug the roadmapData object\r\n      console.log('Roadmap data programs:', roadmapData.programs);\r\n      \r\n      const program = roadmapData.programs.find(p => p.id === programId);\r\n      console.log('Found program:', program);\r\n      \r\n      if (program) {\r\n        showProgramDetails(program);\r\n      } else {\r\n        console.error('Program not found:', programId);\r\n        console.error('Available program IDs:', roadmapData.programs.map(p => p.id));\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up product tile click handlers\r\n  document.querySelectorAll('[data-product-id]').forEach(tile => {\r\n    const productId = tile.getAttribute('data-product-id');\r\n    console.log('Setting up click handler for product:', productId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const productId = this.getAttribute('data-product-id');\r\n      console.log('Product tile clicked:', productId);\r\n      \r\n      // Debug the roadmapData object\r\n      console.log('Roadmap data products:', roadmapData.products);\r\n      \r\n      const product = roadmapData.products.find(p => p.id === productId);\r\n      console.log('Found product:', product);\r\n      \r\n      if (product) {\r\n        showProductDetails(product);\r\n      } else {\r\n        console.error('Product not found:', productId);\r\n        console.error('Available product IDs:', roadmapData.products.map(p => p.id));\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up material system tile click handlers\r\n  document.querySelectorAll('[data-material-id]').forEach(tile => {\r\n    const materialId = tile.getAttribute('data-material-id');\r\n    console.log('Setting up click handler for material:', materialId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const materialId = this.getAttribute('data-material-id');\r\n      console.log('Material tile clicked:', materialId);\r\n      \r\n      const material = roadmapData.materialSystems.find(m => m.id === materialId);\r\n      if (material) {\r\n        showMaterialDetails(material);\r\n      } else {\r\n        console.error('Material not found:', materialId);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up supplier tile click handlers\r\n  document.querySelectorAll('[data-supplier-id]').forEach(tile => {\r\n    const supplierId = tile.getAttribute('data-supplier-id');\r\n    console.log('Setting up click handler for supplier:', supplierId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const supplierId = this.getAttribute('data-supplier-id');\r\n      console.log('Supplier tile clicked:', supplierId);\r\n      \r\n      const supplier = roadmapData.suppliers.find(s => s.id === supplierId);\r\n      if (supplier) {\r\n        showSupplierDetails(supplier);\r\n      } else {\r\n        console.error('Supplier not found:', supplierId);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Set up funding opportunity tile click handlers\r\n  document.querySelectorAll('[data-opportunity-id]').forEach(tile => {\r\n    const opportunityId = tile.getAttribute('data-opportunity-id');\r\n    console.log('Setting up click handler for opportunity:', opportunityId);\r\n    \r\n    tile.addEventListener('click', function() {\r\n      const opportunityId = this.getAttribute('data-opportunity-id');\r\n      console.log('Opportunity tile clicked:', opportunityId);\r\n      \r\n      const opportunity = roadmapData.cradOpportunities.find(o => o.id === opportunityId);\r\n      if (opportunity) {\r\n        showFundingOpportunityDetails(opportunity);\r\n      } else {\r\n        console.error('Opportunity not found:', opportunityId);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Add tooltips to navigation tabs\r\nfunction addTooltips() {\r\n  document.querySelectorAll('.nav-tab').forEach(tab => {\r\n    const viewId = tab.getAttribute('data-view');\r\n    let tooltipText = '';\r\n    \r\n    switch (viewId) {\r\n      case 'programsView':\r\n        tooltipText = 'View all programs';\r\n        break;\r\n      case 'productsView':\r\n        tooltipText = 'View all products';\r\n        break;\r\n      case 'amMaterialSystemsView':\r\n        tooltipText = 'View all AM material systems';\r\n        break;\r\n      case 'amSuppliersView':\r\n        tooltipText = 'View all AM suppliers';\r\n        break;\r\n      case 'fundingOpportunitiesView':\r\n        tooltipText = 'View all funding opportunities';\r\n        break;\r\n    }\r\n    \r\n    if (tooltipText) {\r\n      createTooltip(tab, tooltipText);\r\n    }\r\n  });\r\n}\r\n\r\n// Helper function for formatting dates\r\nfunction formatDate(dateStr) {\r\n  if (!dateStr) return 'N/A';\r\n  const date = new Date(dateStr);\r\n  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });\r\n}\r\n\r\n// Navigation functions\r\nfunction showView(viewId) {\r\n  console.log('Showing view:', viewId);\r\n  \r\n  // Hide all views\r\n  document.querySelectorAll('.detail-view, .main-content').forEach(view => {\r\n    view.style.display = 'none';\r\n  });\r\n  \r\n  // Show the requested view\r\n  const viewElement = document.getElementById(viewId);\r\n  if (viewElement) {\r\n    viewElement.style.display = 'block';\r\n    console.log('View displayed:', viewId);\r\n    \r\n    // Update navigation stack\r\n    navStack.push(viewId);\r\n    console.log('Navigation stack:', navStack);\r\n  } else {\r\n    console.error('View not found:', viewId);\r\n    // List all available views\r\n    console.log('Available views:');\r\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\r\n      console.log('- ' + view.id);\r\n    });\r\n  }\r\n}\r\n\r\nfunction goBack() {\r\n  console.log('Going back. Current stack:', navStack);\r\n  \r\n  if (navStack.length > 1) {\r\n    navStack.pop(); // Remove current view\r\n    const previousView = navStack[navStack.length - 1];\r\n    \r\n    // Hide all views\r\n    document.querySelectorAll('.detail-view, .main-content').forEach(view => {\r\n      view.style.display = 'none';\r\n    });\r\n    \r\n    // Show the previous view\r\n    document.getElementById(previousView).style.display = 'block';\r\n    console.log('Returned to view:', previousView);\r\n  } else {\r\n    // If at the root level, show main view\r\n    document.querySelectorAll('.detail-view').forEach(view => {\r\n      view.style.display = 'none';\r\n    });\r\n    document.getElementById('mainView').style.display = 'block';\r\n    navStack.length = 0; // Clear the stack\r\n    console.log('Returned to main view');\r\n  }\r\n}\r\n\r\n// Add a helper function to create tooltips\r\nfunction createTooltip(element, text) {\r\n  element.classList.add('tooltip');\r\n  const tooltipSpan = document.createElement('span');\r\n  tooltipSpan.className = 'tooltip-text';\r\n  tooltipSpan.textContent = text;\r\n  element.appendChild(tooltipSpan);\r\n}\r\n\r\n// Add search functionality\r\nfunction setupSearch() {\r\n  const searchInput = document.getElementById('searchInput');\r\n  if (!searchInput) {\r\n    console.warn('Search input not found');\r\n    return;\r\n  }\r\n  \r\n  console.log('Setting up search functionality');\r\n  searchInput.addEventListener('input', function() {\r\n    const searchTerm = this.value.toLowerCase();\r\n    console.log('Searching for:', searchTerm);\r\n    \r\n    // Search in all tiles\r\n    document.querySelectorAll('.tile').forEach(tile => {\r\n      const tileName = tile.querySelector('.tile-name').textContent.toLowerCase();\r\n      const tileDesc = tile.querySelector('.tile-description')?.textContent.toLowerCase() || '';\r\n      \r\n      if (tileName.includes(searchTerm) || tileDesc.includes(searchTerm)) {\r\n        tile.style.display = 'block';\r\n      } else {\r\n        tile.style.display = 'none';\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Add a global error handler to catch any JavaScript errors\r\nwindow.onerror = function(message, source, lineno, colno, error) {\r\n  console.error('JavaScript error:', message);\r\n  console.error('Source:', source);\r\n  console.error('Line:', lineno, 'Column:', colno);\r\n  console.error('Error object:', error);\r\n  return true;\r\n};\r\n`;\r\n}\r\n\r\nmodule.exports = { generateHtmlContent }; ","module.exports = require(\"path\");","module.exports = require(\"ajv\");","// JSON schema definition for roadmap.json\r\nconst schema = {\r\n  type: \"object\",\r\n  properties: {\r\n    programs: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          id: { type: \"string\" },\r\n          name: { type: \"string\" },\r\n          description: { type: \"string\" },\r\n          tasks: {\r\n            type: \"array\",\r\n            items: {\r\n              type: \"object\",\r\n              properties: {\r\n                id: { type: \"string\" },\r\n                name: { type: \"string\" },\r\n                description: { type: \"string\" },\r\n                startDate: { type: \"string\", format: \"date\" },\r\n                endDate: { type: \"string\", format: \"date\" },\r\n                status: { type: \"string\" }\r\n              },\r\n              required: [\"id\", \"name\"]\r\n            }\r\n          }\r\n        },\r\n        required: [\"id\", \"name\"]\r\n      }\r\n    },\r\n    products: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          id: { type: \"string\" },\r\n          name: { type: \"string\" },\r\n          description: { type: \"string\" },\r\n          programs: { \r\n            type: \"array\", \r\n            items: { type: \"string\" } \r\n          },\r\n          productSupplyChain: { type: \"string\" }\r\n        },\r\n        required: [\"id\", \"name\"]\r\n      }\r\n    },\r\n    materialSystems: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          id: { type: \"string\" },\r\n          name: { type: \"string\" },\r\n          qualification: { type: \"string\" },\r\n          qualificationClass: { type: \"string\" },\r\n          supplyChain: { type: \"string\" },\r\n          standardNDT: { \r\n            type: \"array\", \r\n            items: { type: \"string\" } \r\n          }\r\n        },\r\n        required: [\"id\", \"name\"]\r\n      }\r\n    },\r\n    cradOpportunities: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          id: { type: \"string\" },\r\n          name: { type: \"string\" },\r\n          relatedEntity: { type: \"string\" },\r\n          details: { type: \"string\" }\r\n        },\r\n        required: [\"id\", \"name\"]\r\n      }\r\n    },\r\n    suppliers: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          id: { type: \"string\" },\r\n          name: { type: \"string\" },\r\n          materials: { \r\n            type: \"array\", \r\n            items: { type: \"string\" } \r\n          },\r\n          additionalCapabilities: { type: \"string\" }\r\n        },\r\n        required: [\"id\", \"name\"]\r\n      }\r\n    }\r\n  },\r\n  // Only require programs to be present, other arrays can be empty\r\n  required: [\"programs\"]\r\n};\r\n\r\nmodule.exports = { schema }; ","/**\r\n * Functions for handling product details\r\n * @returns {string} JavaScript code as a string\r\n */\r\nfunction getProductHandler() {\r\n  console.log('Loading product handler module');\r\n  return `\r\n// Product details handler\r\nfunction showProductDetails(product) {\r\n  console.log('Showing product details for:', product.name);\r\n  const mainContent = document.getElementById('mainContent');\r\n  \r\n  // Clear previous content\r\n  mainContent.innerHTML = '';\r\n  \r\n  // Create product details container\r\n  const productDetailsContainer = document.createElement('div');\r\n  productDetailsContainer.className = 'product-details-container';\r\n  \r\n  // Create header with back button at top right\r\n  productDetailsContainer.innerHTML = \\`\r\n    <div class=\"product-header\">\r\n      <h2>Product Details</h2>\r\n      <button class=\"back-button\" onclick=\"showProductsView()\">Back</button>\r\n    </div>\r\n    \r\n    <div class=\"product-title-section\">\r\n      <h3>\\${product.name}</h3>\r\n      \r\n      <div class=\"product-basic-info\">\r\n        \\${product.requirements ? \\`\r\n          <div class=\"requirements-section\">\r\n            <h4>Requirements</h4>\r\n            \\${product.requirements.mechanical ? \\`<p><strong>Mechanical:</strong> \\${product.requirements.mechanical}</p>\\` : ''}\r\n            \\${product.requirements.electrical ? \\`<p><strong>Electrical:</strong> \\${product.requirements.electrical}</p>\\` : ''}\r\n            \\${product.requirements.environmental ? \\`<p><strong>Environmental:</strong> \\${product.requirements.environmental}</p>\\` : ''}\r\n            \\${product.requirements.thermal ? \\`<p><strong>Thermal:</strong> \\${product.requirements.thermal}</p>\\` : ''}\r\n            \\${product.requirements.performance ? \\`<p><strong>Performance:</strong> \\${product.requirements.performance}</p>\\` : ''}\r\n          </div>\r\n        \\` : ''}\r\n        \r\n        \\${product.businessCase ? \\`\r\n          <div class=\"business-case-section\">\r\n            <h4>Business Case</h4>\r\n            \\${product.businessCase.costSavings ? \\`<p><strong>Cost Savings:</strong> \\${product.businessCase.costSavings}</p>\\` : ''}\r\n            \\${product.businessCase.scheduleSavings ? \\`<p><strong>Schedule Savings:</strong> \\${product.businessCase.scheduleSavings}</p>\\` : ''}\r\n            \\${product.businessCase.performanceGains ? \\`<p><strong>Performance Gains:</strong> \\${product.businessCase.performanceGains}</p>\\` : ''}\r\n          </div>\r\n        \\` : ''}\r\n        \r\n        \\${product.productSupplyChain ? \\`<p><strong>Make/Buy:</strong> \\${product.productSupplyChain}</p>\\` : ''}\r\n      </div>\r\n    </div>\r\n  \\`;\r\n  \r\n  // Append product details container to main content\r\n  mainContent.appendChild(productDetailsContainer);\r\n  \r\n  // Create quad box container\r\n  const quadBoxContainer = document.createElement('div');\r\n  quadBoxContainer.className = 'quad-box-container';\r\n  mainContent.appendChild(quadBoxContainer);\r\n  \r\n  // Create quad box visualization - ensure the container is in the DOM first\r\n  setTimeout(() => {\r\n    console.log('Creating quad box for:', product.name);\r\n    if (typeof createQuadBox === 'function') {\r\n      createQuadBox(product, quadBoxContainer);\r\n    } else {\r\n      console.error('createQuadBox function not found');\r\n      quadBoxContainer.innerHTML = '<p>Error: Unable to load visualization</p>';\r\n    }\r\n  }, 0);\r\n  \r\n  // Create related programs section\r\n  if (product.programs && product.programs.length > 0) {\r\n    const relatedProgramsContainer = document.createElement('div');\r\n    relatedProgramsContainer.className = 'related-programs-container';\r\n    \r\n    // Get program details\r\n    const relatedPrograms = product.programs.map(programId => \r\n      roadmapData.programs.find(p => p.id === programId)\r\n    ).filter(Boolean);\r\n    \r\n    if (relatedPrograms.length > 0) {\r\n      relatedProgramsContainer.innerHTML = \\`\r\n        <h3>Related Programs</h3>\r\n        <div class=\"program-cards\">\r\n          \\${relatedPrograms.map(program => \\`\r\n            <div class=\"program-card\">\r\n              <h4>\\${program.name}</h4>\r\n              <p><span class=\"status-indicator \\${getStatusClass(program)}\"></span> \\${getStatusText(program)}</p>\r\n            </div>\r\n          \\`).join('')}\r\n        </div>\r\n      \\`;\r\n      \r\n      mainContent.appendChild(relatedProgramsContainer);\r\n    }\r\n  }\r\n  \r\n  // Add CSS for the product details page\r\n  const style = document.createElement('style');\r\n  style.textContent = \\`\r\n    .product-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    .back-button {\r\n      background-color: #0056b3;\r\n      color: white;\r\n      border: none;\r\n      padding: 8px 16px;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      font-weight: bold;\r\n    }\r\n    \r\n    .product-title-section {\r\n      background-color: #f8f9fa;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      margin-bottom: 30px;\r\n      border-left: 5px solid #6a1b9a;\r\n    }\r\n    \r\n    .product-title-section h3 {\r\n      color: #6a1b9a;\r\n      margin-top: 0;\r\n      margin-bottom: 15px;\r\n      font-size: 24px;\r\n    }\r\n    \r\n    .product-basic-info {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 20px;\r\n    }\r\n    \r\n    .requirements-section, .business-case-section {\r\n      background-color: white;\r\n      border-radius: 6px;\r\n      padding: 15px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n    }\r\n    \r\n    .requirements-section h4, .business-case-section h4 {\r\n      margin-top: 0;\r\n      color: #333;\r\n      border-bottom: 1px solid #ddd;\r\n      padding-bottom: 8px;\r\n      margin-bottom: 12px;\r\n    }\r\n    \r\n    .related-programs-container {\r\n      margin-top: 30px;\r\n    }\r\n    \r\n    .program-cards {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 15px;\r\n    }\r\n    \r\n    .program-card {\r\n      background-color: #f8f9fa;\r\n      border-radius: 6px;\r\n      padding: 15px;\r\n      min-width: 200px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n    }\r\n    \r\n    .program-card h4 {\r\n      margin-top: 0;\r\n      margin-bottom: 10px;\r\n    }\r\n    \r\n    .status-indicator {\r\n      display: inline-block;\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 50%;\r\n      margin-right: 8px;\r\n    }\r\n    \r\n    .status-planned {\r\n      background-color: #2196F3;\r\n    }\r\n    \r\n    .status-in-progress {\r\n      background-color: #FF9800;\r\n    }\r\n    \r\n    .status-complete {\r\n      background-color: #4CAF50;\r\n    }\r\n    \r\n    .quad-box-container {\r\n      margin-bottom: 30px;\r\n    }\r\n  \\`;\r\n  \r\n  document.head.appendChild(style);\r\n}\r\n\r\nfunction getStatusClass(program) {\r\n  // Determine status based on dates or explicit status field\r\n  if (program.status) {\r\n    return \\`status-\\${program.status.toLowerCase().replace(' ', '-')}\\`;\r\n  }\r\n  \r\n  const now = new Date();\r\n  const needDate = program.needDate ? new Date(program.needDate) : null;\r\n  const closeDate = program.closeDate ? new Date(program.closeDate) : null;\r\n  \r\n  if (closeDate && now > closeDate) {\r\n    return 'status-complete';\r\n  } else if (needDate && now > needDate) {\r\n    return 'status-in-progress';\r\n  } else {\r\n    return 'status-planned';\r\n  }\r\n}\r\n\r\nfunction getStatusText(program) {\r\n  if (program.status) {\r\n    return program.status;\r\n  }\r\n  \r\n  const now = new Date();\r\n  const needDate = program.needDate ? new Date(program.needDate) : null;\r\n  const closeDate = program.closeDate ? new Date(program.closeDate) : null;\r\n  \r\n  if (closeDate && now > closeDate) {\r\n    return 'Complete';\r\n  } else if (needDate && now > needDate) {\r\n    return 'In Progress';\r\n  } else {\r\n    return 'Planned';\r\n  }\r\n}\r\n`;\r\n}\r\n\r\nmodule.exports = { getProductHandler }; ","/**\r\n * Generates the HTML for a product roadmap visualization\r\n */\r\n\r\n/**\r\n * Format a date string for display\r\n * @param {string} dateString - The date string to format\r\n * @returns {string} The formatted date\r\n */\r\nfunction formatDate(dateString) {\r\n  if (!dateString) return \"N/A\";\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString();\r\n}\r\n\r\n/**\r\n * Format a date for input elements\r\n * @param {Date|string} date - The date to format\r\n * @returns {string} The date formatted as YYYY-MM-DD\r\n */\r\nfunction formatDateForInput(date) {\r\n  const d = new Date(date);\r\n  let month = '' + (d.getMonth() + 1);\r\n  let day = '' + d.getDate();\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\n/**\r\n * Get CSS color based on task status\r\n * @param {string} status - The task status\r\n * @param {string} fundingType - Optional funding type\r\n * @returns {string} CSS class names for the task\r\n */\r\nfunction getTaskStatusClasses(status, fundingType) {\r\n  const statusLower = (status || \"\").toLowerCase();\r\n  let classes = \"\";\r\n  \r\n  if (statusLower === \"complete\") {\r\n    classes = \"complete\";\r\n  } else if (statusLower === \"in progress\") {\r\n    classes = \"in-progress\";\r\n    \r\n    // Add funding type class if available\r\n    if (fundingType) {\r\n      const fundingTypeLower = fundingType.toLowerCase().replace(/\\s+/g, '-');\r\n      classes += ` funding-${fundingTypeLower}`;\r\n    }\r\n  } else {\r\n    classes = \"planned\";\r\n  }\r\n  \r\n  return classes;\r\n}\r\n\r\n/**\r\n * Generate the HTML for a product roadmap\r\n * @param {Object} product - The product object\r\n * @param {Array} allPrograms - All programs data\r\n * @param {Array} allMaterials - All material systems data\r\n * @param {string} startDate - Optional start date\r\n * @returns {string} The HTML for the roadmap\r\n */\r\nfunction generateRoadmapHtml(product, allPrograms, allMaterials, startDate = null) {\r\n  console.log(\"Generating roadmap HTML for product:\", product.name);\r\n  \r\n  // Default to today's date if no start date provided\r\n  if (!startDate) {\r\n    startDate = new Date();\r\n  } else if (typeof startDate === 'string') {\r\n    startDate = new Date(startDate);\r\n  }\r\n  \r\n  // Determine the starting quarter based on the date\r\n  const startYear = startDate.getFullYear();\r\n  const startMonth = startDate.getMonth();\r\n  const startQuarter = Math.floor(startMonth / 3) + 1;\r\n  \r\n  // Generate quarters for 3 years (12 quarters)\r\n  const quarters = [];\r\n  let currentYear = startYear;\r\n  let currentQuarter = startQuarter;\r\n  \r\n  for (let i = 0; i < 12; i++) {\r\n    quarters.push(`${currentYear}-Q${currentQuarter}`);\r\n    currentQuarter++;\r\n    if (currentQuarter > 4) {\r\n      currentQuarter = 1;\r\n      currentYear++;\r\n    }\r\n  }\r\n  \r\n  // Get related programs and sort them by need date\r\n  const relatedPrograms = [];\r\n  if (product.programs && product.programs.length > 0) {\r\n    product.programs.forEach(programId => {\r\n      const program = allPrograms.find(p => p.id === programId);\r\n      if (program) {\r\n        relatedPrograms.push(program);\r\n      }\r\n    });\r\n    \r\n    // Sort programs by need date\r\n    relatedPrograms.sort((a, b) => {\r\n      const dateA = a.needDate ? new Date(a.needDate) : new Date('9999-12-31');\r\n      const dateB = b.needDate ? new Date(b.needDate) : new Date('9999-12-31');\r\n      return dateA - dateB;\r\n    });\r\n  }\r\n  \r\n  // Create the roadmap HTML\r\n  let html = `\r\n    <div class=\"roadmap-container\">\r\n      <div class=\"roadmap-timeline-controls\">\r\n        <label for=\"start-date\">Start Date:</label>\r\n        <input type=\"date\" id=\"start-date\" class=\"start-date-picker\" value=\"${formatDateForInput(startDate)}\">\r\n      </div>\r\n      <div class=\"roadmap-timeline\">\r\n        <div class=\"roadmap-header\">\r\n          <div class=\"roadmap-header-lane\">Date</div>`;\r\n  \r\n  // Add quarter headers\r\n  quarters.forEach(quarter => {\r\n    const [year, q] = quarter.split('-');\r\n    html += `<div class=\"roadmap-header-quarter\">${year}<br>${q}</div>`;\r\n  });\r\n  \r\n  html += `</div>`;\r\n  \r\n  // Add programs row\r\n  html += `<div class=\"roadmap-row programs-row\">\r\n    <div class=\"roadmap-lane-title\">Programs</div>\r\n    <div class=\"roadmap-lane-content\">`;\r\n  \r\n  // Group programs by quarter to prevent overlapping\r\n  const programsByQuarter = {};\r\n  \r\n  relatedPrograms.forEach(program => {\r\n    if (program.needDate) {\r\n      const needDate = new Date(program.needDate);\r\n      const needYear = needDate.getFullYear();\r\n      const needMonth = needDate.getMonth();\r\n      const needQuarter = Math.floor(needMonth / 3) + 1;\r\n      const needQuarterStr = `${needYear}-Q${needQuarter}`;\r\n      \r\n      if (!programsByQuarter[needQuarterStr]) {\r\n        programsByQuarter[needQuarterStr] = [];\r\n      }\r\n      programsByQuarter[needQuarterStr].push(program);\r\n    }\r\n  });\r\n  \r\n  // Add program markers based on need dates, stacked vertically if needed\r\n  Object.keys(programsByQuarter).forEach(quarter => {\r\n    const quarterIndex = quarters.indexOf(quarter);\r\n    if (quarterIndex >= 0) {\r\n      const position = quarterIndex * 100 + 50;\r\n      const programs = programsByQuarter[quarter];\r\n      \r\n      programs.forEach((program, index) => {\r\n        // Offset each program vertically to prevent overlap\r\n        const verticalOffset = index * 30;\r\n        html += `\r\n          <div class=\"program-marker\" style=\"left: ${position}px; top: ${verticalOffset}px;\" title=\"${program.name} Need Date: ${formatDate(program.needDate)}\">\r\n            <div class=\"program-marker-point\"></div>\r\n            <div class=\"program-marker-label\">${program.name}</div>\r\n          </div>`;\r\n      });\r\n    }\r\n  });\r\n  \r\n  html += `</div></div>`;\r\n  \r\n  // Add milestone row\r\n  html += `<div class=\"roadmap-row milestone-row\">\r\n    <div class=\"roadmap-lane-title\">Milestones</div>\r\n    <div class=\"roadmap-lane-content\">`;\r\n  \r\n  // Group milestones by quarter to prevent overlapping\r\n  const milestonesByQuarter = {};\r\n  \r\n  if (product.milestones && product.milestones.length > 0) {\r\n    product.milestones.forEach(milestone => {\r\n      const date = new Date(milestone.date);\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth();\r\n      const quarter = Math.floor(month / 3) + 1;\r\n      const milestoneQuarter = `${year}-Q${quarter}`;\r\n      \r\n      if (!milestonesByQuarter[milestoneQuarter]) {\r\n        milestonesByQuarter[milestoneQuarter] = [];\r\n      }\r\n      milestonesByQuarter[milestoneQuarter].push(milestone);\r\n    });\r\n  }\r\n  \r\n  // Add milestone markers, stacked vertically if needed\r\n  Object.keys(milestonesByQuarter).forEach(quarter => {\r\n    const quarterIndex = quarters.indexOf(quarter);\r\n    if (quarterIndex >= 0) {\r\n      const position = quarterIndex * 100 + 50;\r\n      const milestones = milestonesByQuarter[quarter];\r\n      \r\n      milestones.forEach((milestone, index) => {\r\n        // Offset each milestone vertically to prevent overlap\r\n        const verticalOffset = index * 30;\r\n        html += `\r\n          <div class=\"roadmap-milestone\" style=\"left: ${position}px; top: ${verticalOffset}px;\" title=\"${milestone.name}: ${milestone.description}\">\r\n            <div class=\"milestone-marker\"></div>\r\n            <div class=\"milestone-label\">${milestone.name}</div>\r\n          </div>`;\r\n      });\r\n    }\r\n  });\r\n  \r\n  html += `</div></div>`;\r\n  \r\n  // Add swimlanes for each category\r\n  const lanes = [\"Design\", \"Manufacturing\", \"M&P\", \"Quality\"];\r\n  \r\n  lanes.forEach(lane => {\r\n    html += `\r\n      <div class=\"roadmap-row\">\r\n        <div class=\"roadmap-lane-title\">${lane}</div>\r\n        <div class=\"roadmap-lane-content\" data-lane=\"${lane}\">`;\r\n    \r\n    // For M&P lane, include material system tasks\r\n    if (lane === \"M&P\" && product.materialSystems && product.materialSystems.length > 0) {\r\n      // Process material systems tasks\r\n      const materialTasksPositions = {};\r\n      \r\n      // Get all material system tasks\r\n      product.materialSystems.forEach(materialId => {\r\n        const material = allMaterials.find(m => m.id === materialId);\r\n        \r\n        if (material && material.roadmap && material.roadmap.length > 0) {\r\n          material.roadmap.forEach(task => {\r\n            // Calculate position and width based on dates\r\n            const startTaskDate = new Date(task.start);\r\n            const endTaskDate = new Date(task.end);\r\n            \r\n            const startTaskYear = startTaskDate.getFullYear();\r\n            const startTaskMonth = startTaskDate.getMonth();\r\n            const startTaskQuarter = Math.floor(startTaskMonth / 3) + 1;\r\n            const taskStartQuarter = `${startTaskYear}-Q${startTaskQuarter}`;\r\n            \r\n            const endTaskYear = endTaskDate.getFullYear();\r\n            const endTaskMonth = endTaskDate.getMonth();\r\n            const endTaskQuarter = Math.floor(endTaskMonth / 3) + 1;\r\n            const taskEndQuarter = `${endTaskYear}-Q${endTaskQuarter}`;\r\n            \r\n            // Find positions in our quarters array\r\n            const startIndex = quarters.indexOf(taskStartQuarter);\r\n            const endIndex = quarters.indexOf(taskEndQuarter);\r\n            \r\n            // Only show if the end is visible\r\n            if (endIndex >= 0) {\r\n              let startPosition = 0;\r\n              let width = 0;\r\n              \r\n              if (startIndex >= 0) {\r\n                // Task starts within the visible range\r\n                startPosition = startIndex * 100;\r\n                width = (endIndex - startIndex + 1) * 100;\r\n              } else {\r\n                // Task starts before the visible range\r\n                startPosition = 0; // Start at the beginning of the visible range\r\n                width = (endIndex + 1) * 100; // Width from beginning to end date\r\n              }\r\n              \r\n              // Create a position key to group overlapping tasks\r\n              const posKey = `${startPosition}-${width}`;\r\n              if (!materialTasksPositions[posKey]) {\r\n                materialTasksPositions[posKey] = [];\r\n              }\r\n              \r\n              materialTasksPositions[posKey].push({\r\n                task,\r\n                materialId,\r\n                materialName: material.name\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Render material tasks\r\n      Object.keys(materialTasksPositions).forEach(posKey => {\r\n        const [startPosition, width] = posKey.split('-').map(Number);\r\n        const tasks = materialTasksPositions[posKey];\r\n        \r\n        tasks.forEach((taskObj, index) => {\r\n          const { task, materialName } = taskObj;\r\n          const statusClasses = getTaskStatusClasses(task.status, task.fundingType);\r\n          \r\n          // Calculate vertical position\r\n          const verticalOffset = index * 30;\r\n          \r\n          html += `\r\n            <div class=\"roadmap-task ${statusClasses}\" \r\n                 style=\"left: ${startPosition}px; width: ${width}px; top: ${verticalOffset}px;\"\r\n                 title=\"${task.task} (${materialName}): ${formatDate(task.start)} - ${formatDate(task.end)}${task.fundingType ? ' | Funding: ' + task.fundingType : ''}\">\r\n              <div class=\"task-label\">${task.task} (${materialName})</div>\r\n            </div>`;\r\n        });\r\n      });\r\n    }\r\n    \r\n    // Add product tasks for the current lane\r\n    if (product.roadmap && product.roadmap.length > 0) {\r\n      const laneTasksPositions = {};\r\n      \r\n      product.roadmap.forEach(task => {\r\n        if (task.lane === lane) {\r\n          // Calculate position and width based on dates\r\n          const startTaskDate = new Date(task.start);\r\n          const endTaskDate = new Date(task.end);\r\n          \r\n          const startTaskYear = startTaskDate.getFullYear();\r\n          const startTaskMonth = startTaskDate.getMonth();\r\n          const startTaskQuarter = Math.floor(startTaskMonth / 3) + 1;\r\n          const taskStartQuarter = `${startTaskYear}-Q${startTaskQuarter}`;\r\n          \r\n          const endTaskYear = endTaskDate.getFullYear();\r\n          const endTaskMonth = endTaskDate.getMonth();\r\n          const endTaskQuarter = Math.floor(endTaskMonth / 3) + 1;\r\n          const taskEndQuarter = `${endTaskYear}-Q${endTaskQuarter}`;\r\n          \r\n          // Find positions in our quarters array\r\n          const startIndex = quarters.indexOf(taskStartQuarter);\r\n          const endIndex = quarters.indexOf(taskEndQuarter);\r\n          \r\n          // Only show if the end is visible\r\n          if (endIndex >= 0) {\r\n            let startPosition = 0;\r\n            let width = 0;\r\n            \r\n            if (startIndex >= 0) {\r\n              // Task starts within the visible range\r\n              startPosition = startIndex * 100;\r\n              width = (endIndex - startIndex + 1) * 100;\r\n            } else {\r\n              // Task starts before the visible range\r\n              startPosition = 0; // Start at the beginning of the visible range\r\n              width = (endIndex + 1) * 100; // Width from beginning to end date\r\n            }\r\n            \r\n            // Create a position key to group overlapping tasks\r\n            const posKey = `${startPosition}-${width}`;\r\n            if (!laneTasksPositions[posKey]) {\r\n              laneTasksPositions[posKey] = [];\r\n            }\r\n            \r\n            laneTasksPositions[posKey].push(task);\r\n          }\r\n        }\r\n      });\r\n      \r\n      // Render product tasks\r\n      Object.keys(laneTasksPositions).forEach(posKey => {\r\n        const [startPosition, width] = posKey.split('-').map(Number);\r\n        const tasks = laneTasksPositions[posKey];\r\n        \r\n        tasks.forEach((task, index) => {\r\n          const statusClasses = getTaskStatusClasses(task.status, task.fundingType);\r\n          \r\n          // Calculate vertical position\r\n          const verticalOffset = index * 30;\r\n          \r\n          html += `\r\n            <div class=\"roadmap-task ${statusClasses}\" \r\n                 style=\"left: ${startPosition}px; width: ${width}px; top: ${verticalOffset}px;\"\r\n                 title=\"${task.task}: ${formatDate(task.start)} - ${formatDate(task.end)}${task.fundingType ? ' | Funding: ' + task.fundingType : ''}\">\r\n              <div class=\"task-label\">${task.task}</div>\r\n            </div>`;\r\n        });\r\n      });\r\n    }\r\n    \r\n    html += `</div>\r\n      </div>`;\r\n  });\r\n  \r\n  html += `</div>`;\r\n  \r\n  // Add color key\r\n  html += `\r\n    <div class=\"roadmap-key\">\r\n      <h4>Roadmap Key</h4>\r\n      <div class=\"key-items\">\r\n        <div class=\"key-item\">\r\n          <div class=\"key-color planned\"></div>\r\n          <div class=\"key-label\">Planned</div>\r\n        </div>\r\n        <div class=\"key-item\">\r\n          <div class=\"key-color in-progress funding-sector-irad\"></div>\r\n          <div class=\"key-label\">In Development (Sector IRAD)</div>\r\n        </div>\r\n        <div class=\"key-item\">\r\n          <div class=\"key-color in-progress funding-division-irad\"></div>\r\n          <div class=\"key-label\">In Development (Division IRAD)</div>\r\n        </div>\r\n        <div class=\"key-item\">\r\n          <div class=\"key-color in-progress funding-crad\"></div>\r\n          <div class=\"key-label\">In Development (CRAD)</div>\r\n        </div>\r\n        <div class=\"key-item\">\r\n          <div class=\"key-color complete\"></div>\r\n          <div class=\"key-label\">Complete</div>\r\n        </div>\r\n      </div>\r\n      <p class=\"roadmap-source-note\">Roadmap tasks are sourced from the product's roadmap data and the selected material system.</p>\r\n    </div>`;\r\n  \r\n  return html;\r\n}\r\n\r\nmodule.exports = { generateRoadmapHtml }; ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(__webpack_require__.s = 781);\n"],"names":["module","exports","require","Ajv","addFormats","ajv","allErrors","strict","strictSchema","getRoadmapStyles","getSupplierHandler","console","log","safeJsonStringify","data","JSON","stringify","replace","error","sanitizeData","programs","Array","isArray","products","materialSystems","suppliers","cradOpportunities","getStyles","getScripts","roadmapDataStr","concat","substring","getProgramHandler","path","dataFilePath","resolve","__dirname","outputFilePath","devRepoPath","devRepoOutputFilePath","getFormatters","getProgramsView","safeData","map","program","id","name","description","status","toLowerCase","join","getProductsView","product","length","progId","prog","find","p","getMaterialSystemsView","material","qualification","qualificationClass","getSuppliersView","supplier","materials","matId","mat","m","getFundingOpportunitiesView","opportunity","details","deadline","Date","toLocaleDateString","year","month","day","getMainStructure","getTaskDetailsView","getAllViews","getRoadmapVisualizer","getMaterialHandler","fs","schema","generateHtmlContent","_require3","createAjv","getAllDetailHandlers","buildHTML","parse","readFileSync","validateData","compile","errors","htmlContent","writeFileSync","copyToRepository","err","existsSync","mkdirSync","recursive","copyFileSync","watch","eventType","filename","getQuadBoxVisualizer","generateRoadmapHtml","getProductHandler","_require","_typeof","warn","push","tasks","dataScript","type","properties","items","startDate","format","endDate","required","productSupplyChain","supplyChain","standardNDT","relatedEntity","additionalCapabilities","formatDate","dateString","getTaskStatusClasses","fundingType","statusLower","classes","fundingTypeLower","allPrograms","allMaterials","arguments","undefined","startYear","getFullYear","startMonth","getMonth","startQuarter","Math","floor","quarters","currentYear","currentQuarter","i","relatedPrograms","forEach","programId","sort","a","b","needDate","d","html","getDate","quarter","_quarter$split2","_slicedToArray","split","q","programsByQuarter","needYear","needMonth","needQuarter","needQuarterStr","Object","keys","quarterIndex","indexOf","position","index","verticalOffset","milestonesByQuarter","milestones","milestone","date","milestoneQuarter","lane","materialTasksPositions","materialId","roadmap","task","startTaskDate","start","endTaskDate","end","startTaskYear","startTaskMonth","startTaskQuarter","taskStartQuarter","endTaskYear","endTaskMonth","endTaskQuarter","taskEndQuarter","startIndex","endIndex","startPosition","width","posKey","materialName","_posKey$split$map2","Number","taskObj","statusClasses","laneTasksPositions","_posKey$split$map4","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","c","nmd","paths","children","__webpack_exports__","s"],"sourceRoot":""}